using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Symposium_DTOs.PosModel_Info
{
    [DisplayName("Ver : 2.0.0.37")]
    public class Version_2_0_0_37
    {
        public List<string> Ver_2_0_0_37 { get; }


        public Version_2_0_0_37()
        {
            Ver_2_0_0_37 = new List<string>();
            Ver_2_0_0_37.Add("ALTER VIEW VIEW_RPT01_InvoiceHeader AS   \n"
                           + "	SELECT i.Id InvoiceId    \n"
                           + "		, i.TableSum TableTotal    \n"
                           + "		, 0 PaymentTypeId    \n"
                           + "		, 'false' PrintKitchen    \n"
                           + "		, ISNULL(pid.[Description]    \n"
                           + "		, it.[Description]) ReceiptTypeDescription    \n"
                           + "		, d.[Description] DepartmentTypeDescription    \n"
                           + "		, NULL PaidAmount    \n"
                           + "		, st.[Description] SalesTypeDescription    \n"
                           + "		, NULL ItemsCount    \n"
                           + "		, ISNULL(o.Couver,0) Couver    \n"
                           + "		, NULL PrintFiscalSign    \n"
                           + "		, 0 FiscalType    \n"
                           + "		, NULL DetailsId    \n"
                           + "		, pid.InvoiceId InvoiceIndex    \n"
                           + "		, ISNULL(t.Code,'') TableNo    \n"
                           + "		, ISNULL(trTop.Room,'') Room    \n"
                           + "		, ISNULL(s.LastName,'') Waiter    \n"
                           + "		, ISNULL(s.Code,'') WaiterNo    \n"
                           + "		, i.PosInfoId Pos    \n"
                           + "		, ISNULL(pif.[Description],'') PosDescr    \n"
                           + "		, d.[Description] DepartmentDesc    \n"
                           + "		, pif.DepartmentId Department    \n"
                           + "		, ISNULL(a.AccountDescription, ISNULL(i.PaymentsDesc,'')) AccountDescription    \n"
                           + "		, CASE WHEN ISNULL(isd.CustomerName,'') <> '' THEN isd.CustomerName    \n"
                           + "							WHEN ISNULL(trTop.GuestName,'') <> '' THEN trTop.GuestName    \n"
                           + "							ELSE 'Πελάτης Λιανικής' END CustomerName    \n"
                           + "		, ISNULL(isd.BillingAddress,'') CustomerAddress    \n"
                           + "		, ISNULL(isd.ShippingAddress,'') CustomerDeliveryAddress    \n"
                           + "		, ISNULL(isd.Phone,'') CustomerPhone    \n"
                           + "		, ISNULL(isd.[Floor],'') [Floor]    \n"
                           + "		, ISNULL(isd.BillingCity,'') City    \n"
                           + "		, ISNULL(isd.CustomerRemarks,'') CustomerComments    \n"
                           + "		, ISNULL(isd.BillingVatNo,'') CustomerAfm    \n"
                           + "		, ISNULL(isd.BillingDOY,'') CustomerDoy    \n"
                           + "		, ISNULL(isd.BillingJob,'') CustomerJob    \n"
                           + "		, ISNULL(isd.BillingName,'') CompanyName    \n"
                           + "		, NULL RegNo    \n"
                           + "		, NULL SumOfLunches    \n"
                           + "		, NULL SumofConsumedLunches    \n"
                           + "		, ISNULL(trTop.BoardCode,'') GuestTerm    \n"
                           + "		, ISNULL(trTop.Adults,0) Adults    \n"
                           + "		, ISNULL(trTop.Children,0) Kids    \n"
                           + "		, it.[Type] InvoiceType    \n"
                           + "		, 0 TotalVat    \n"
                           + "		, 0 TotalVat1    \n"
                           + "		, 0 TotalVat2    \n"
                           + "		, 0 TotalVat3    \n"
                           + "		, 0 TotalVat4    \n"
                           + "		, 0 TotalVat5    \n"
                           + "		, CASE WHEN i.Discount <> 0 THEN i.Discount ELSE ISNULL(odi.Discount,0) END TotalDiscount    \n"
                           + "		, 0 Bonus    \n"
                           + "		, 0 PriceList    \n"
                           + "		, i.[Counter] ReceiptNo     \n"
                           + "		, i.OrderNo OrderNo    \n"
                           + "		, NULL OrderComments    \n"
                           + "		, ISNULL(i.Net,0) TotalNet    \n"
                           + "		, ISNULL(i.Total,0) Total    \n"
                           + "		, NULL Change    \n"
                           + "		, ISNULL(i.CashAmount,0) CashAmount    \n"
                           + "		, ISNULL(i.BuzzerNumber,'') BuzzerNumber    \n"
                           + "		, i.IsVoided IsVoid    \n"
                           + "		, NULL CreditTransactions    \n"
                           + "		, hpo.start_time    \n"
                           + "		, hpo.Payment    \n"
                           + "		, o.ExtType    \n"
                           + "		, CASE WHEN (ISNULL(stTime.StringValue,'') = '') OR (LOWER(LTRIM(RTRIM(stTime.StringValue))) = 'null') then dateadd(mi,40,[day]) ELSE CAST(stTime.StringValue as DATETIME) END DeliveryTime    \n"
                           + "		, payWay.StringValue paymentMethod    \n"
                           + "		, ISNULL(isd.ShippingCity,'') ShippingCity    \n"
                           + "		, CASE WHEN ISNULL(LTRIM(RTRIM(invTypeCode.StringValue)),'') = '7' then 'ΤΙΜΟΛΟΓΙΟ' else 'ΑΠΟΔΕΙΞΗ' end invoiceTypeDescr    \n"
                           + "		, ISNULL(bell.StringValue,'') BellName    \n"
                           + "		, CASE WHEN ISNULL(with_couvert.StringValue,'') = '' OR LOWER(LTRIM(RTRIM(with_couvert.StringValue))) = 'null' THEN 'Δεν υπάρχει επιλογή'    \n"
                           + "					WHEN LOWER(LTRIM(RTRIM(with_couvert.StringValue))) = 'true' THEN 'Με μαχαιρ/να'       \n"
                           + "		ELSE 'Χωρίς μαχαιρ/να' END CouverDescr    \n"
                           + "		, ISNULL(isd.BillingZipCode,'') BillingZipCode    \n"
                           + "		, ISNULL(isd.ShippingZipCode,'') ShippingZipCode    \n"
                           + "		, ISNULL(company_name.StringValue,'') ShippingCompany    \n"
                           + "		, o.ExtKey   \n"
                           + "		, case when LOWER(ISNULL(rendezvous.StringValue,'false')) = 'false' then 0 else 1 end rendezvous   \n"
                           + "		, [day] recievDate    \n"
                           + "		, o.OrderNotes   \n"
                           + "		, o.StoreNotes   \n"
                           + "		, o.CustomerNotes   \n"
                           + "		, o.CustomerSecretNotes   \n"
                           + "		, o.CustomerLastOrderNotes   \n"
                           + "		, o.DA_IsPaid   \n"
                           + "		, o.IsDelay   \n"
                           + "		, o.ItemsChanged   \n"
                           + "		, ISNULL(dcsa.Notes,'') ShippingNotes  \n"
                           + "		, ISNULL(dcba.Notes,'') BillingNotes      \n"
                           + "		,isnull(i.EndOfDayId,0) as endofdayid     \n"
                           + "		, os_0.TimeChanged ReceivedTime        \n"
                           + "		, os_1.TimeChanged PreparingTime  \n"
                           + "		, os_2.TimeChanged PreparedTime  \n"
                           + "		, os_3.TimeChanged ReadyTime  \n"
                           + "		, os_4.TimeChanged OnroadTime  \n"
                           + "		, os_5.TimeChanged CanceledTime  \n"
                           + "		, os_6.TimeChanged CompleteTime  \n"
                           + "		, os_7.TimeChanged ReturnedTime  \n"
                           + "		, StoreOrder.EstTakeoutDate  \n"
                           + "		, CASE WHEN YEAR(os_6.TimeChanged) > 2000 AND os_6.TimeChanged > StoreOrder.EstTakeoutDate THEN 1  \n"
                           + "			WHEN YEAR(os_6.TimeChanged) > 2000 AND os_6.TimeChanged < StoreOrder.EstTakeoutDate THEN 0  \n"
                           + "			WHEN StoreOrder.EstTakeoutDate < GETDATE() THEN 1 ELSE 0 END DelayedOrder  \n"
                           + "		, CASE WHEN YEAR(os_6.TimeChanged) > 2000 AND os_6.TimeChanged > StoreOrder.EstTakeoutDate THEN CONVERT(VARCHAR(10), StoreOrder.EstTakeoutDate - os_6.TimeChanged, 108)  \n"
                           + "			WHEN YEAR(os_6.TimeChanged) > 2000 AND os_6.TimeChanged < StoreOrder.EstTakeoutDate THEN '0'  \n"
                           + "			WHEN StoreOrder.EstTakeoutDate < GETDATE() THEN CONVERT(VARCHAR(10), GETDATE() - StoreOrder.EstTakeoutDate, 108)  \n"
                           + "		ELSE '0' END DelayedTime  \n"
                           + "		, MaxStatus.Status  \n"
                           + "		, CASE WHEN MaxStatus.Status = 0 THEN 'Received'  \n"
                           + "			   WHEN MaxStatus.Status = 1 THEN 'Preparing'  \n"
                           + "			   WHEN MaxStatus.Status = 2 THEN 'Prepared'  \n"
                           + "			   WHEN MaxStatus.Status = 3 THEN 'Ready'  \n"
                           + "			   WHEN MaxStatus.Status = 4 THEN 'Onroad'  \n"
                           + "			   WHEN MaxStatus.Status = 5 THEN 'Canceled'  \n"
                           + "			   WHEN MaxStatus.Status = 6 THEN 'Complete'  \n"
                           + "			   WHEN MaxStatus.Status = 7 THEN 'Returned'  \n"
                           + "		  END MaxStatusDescr \n"
                           + "		  , ISNULL(o.OrderOrigin,-1) OrderOrigin \n"
                           + "		  , ISNULL(o.DA_Origin, -1) DA_Origin   \n"
                           + "	FROM Invoices i    \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId    \n"
                           + "	LEFT OUTER JOIN PosInfoDetail pid ON pid.Id = i.PosInfoDetailId    \n"
                           + "	OUTER APPLY (   \n"
                           + "		select sum(o.couver) couver, o.ExtKey, o.ExtType, o.ExtObj,   \n"
                           + "		o.OrderNotes,o.StoreNotes,o.CustomerNotes,o.CustomerSecretNotes,o.CustomerLastOrderNotes,    \n"
                           + "		o.DA_IsPaid, o.IsDelay, o.ItemsChanged, o.OrderOrigin, o.DA_Origin   \n"
                           + "		FROM (    \n"
                           + "			SELECT distinct o.id, o.couver, o.ExtKey, o.ExtType, o.ExtObj,o.OrderNotes,o.StoreNotes,   \n"
                           + "					o.CustomerNotes,o.CustomerSecretNotes,o.CustomerLastOrderNotes, ISNULL(o.DA_IsPaid,0) DA_IsPaid,   \n"
                           + "					ISNULL(o.IsDelay,0) IsDelay, isnull(o.ItemsChanged,0) ItemsChanged, o.OrderOrigin, o.DA_Origin   \n"
                           + "			from OrderDetailInvoices odi   \n"
                           + "			inner join OrderDetail od on od.id = odi.OrderDetailId   \n"
                           + "			inner join [Order] o on o.Id = od.OrderId   \n"
                           + "			where odi.InvoicesId = i.Id   \n"
                           + "		) o      \n"
                           + "		GROUP BY o.ExtKey, o.ExtType, o.ExtObj, o.OrderNotes,o.StoreNotes,o.CustomerNotes,   \n"
                           + "			o.CustomerSecretNotes,o.CustomerLastOrderNotes, o.DA_IsPaid, o.IsDelay, o.ItemsChanged, o.OrderOrigin, o.DA_Origin    \n"
                           + "	) o   \n"
                           + "	OUTER APPLY (    \n"
                           + "		SELECT MAX(hpo.status_time) start_time, MAX(hpo.Payment) Payment, MAX(hpo.room) room    \n"
                           + "		FROM HitPosOrders hpo    \n"
                           + "		WHERE hpo.orderno = CAST(LTRIM(RTRIM(o.ExtKey)) AS INT)   \n"
                           + "	) hpo    \n"
                           + "	OUTER APPLY (    \n"
                           + "		select top 1 *    \n"
                           + "		from HitPosCustomers hpc    \n"
                           + "		where hpc.customerid = hpo.room    \n"
                           + "	) hpc    \n"
                           + "	INNER JOIN PosInfo pif ON pif.Id = i.PosInfoId    \n"
                           + "	INNER JOIN Department d ON d.Id = pif.DepartmentId    \n"
                           + "	OUTER APPLY (     \n"
                           + "		SELECT odi.SalesTypeId, SUM(odi.Discount) Discount, SUM(odi.Net) Net, SUM(odi.Total) Total     \n"
                           + "		FROM OrderDetailInvoices odi     \n"
                           + "		WHERE odi.InvoicesId = i.Id    \n"
                           + "		GROUP BY odi.SalesTypeId    \n"
                           + "	) odi    \n"
                           + "	OUTER APPLY (    \n"
                           + "		SELECT TOP 1 *    \n"
                           + "		FROM SalesType st WHERE st.Id = odi.SalesTypeId       \n"
                           + "	) st    \n"
                           + "	LEFT OUTER JOIN [Table] t ON t.Id = i.TableId    \n"
                           + "	OUTER APPLY (    \n"
                           + "		SELECT TOP 1 ISNULL(g.Room,'') Room , tr.AccountId    \n"
                           + "				, ISNULL(g.FirstName,'') + ' ' + ISNULL(g.LastName,'') GuestName    \n"
                           + "				, g.Id GuestId , g.BoardCode , g.Adults , g.Children    \n"
                           + "		FROM Transactions tr    \n"
                           + "		LEFT OUTER JOIN Invoice_Guests_Trans igt ON igt.TransactionId = tr.Id    \n"
                           + "		LEFT OUTER JOIN Guest g ON g.Id = igt.GuestId    \n"
                           + "		WHERE tr.InvoicesId = i.Id       \n"
                           + "	) trTop    \n"
                           + "	INNER JOIN Staff s ON s.Id = i.StaffId    \n"
                           + "	OUTER APPLY (    \n"
                           + "		SELECT TOP 1 a.[Description] AccountDescription    \n"
                           + "		FROM Accounts a       \n"
                           + "		WHERE a.Id = trTop.AccountId    \n"
                           + "	) a    \n"
                           + "	LEFT OUTER JOIN InvoiceShippingDetails isd ON isd.InvoicesId = i.Id    \n"
                           + "	LEFT OUTER JOIN Delivery_CustomersShippingAddress AS dcsa ON dcsa.ID = isd.ShippingAddressId  \n"
                           + "	LEFT OUTER JOIN Delivery_CustomersBillingAddress AS dcba ON dcba.ID = isd.BillingAddressId  \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'end_time'    \n"
                           + "	) stTime    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'payment_method'    \n"
                           + "	) payWay    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'bell'    \n"
                           + "	) bell    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'with_couvert'    \n"
                           + "	) with_couvert    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'InvoiceCode'    \n"
                           + "	) invTypeCode    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'company_name'    \n"
                           + "	) company_name    \n"
                           + "	outer apply (    \n"
                           + "		select *    \n"
                           + "		from dbo.parseJSON(o.ExtObj)    \n"
                           + "		where Name = 'rendezvous'    \n"
                           + "	) rendezvous  \n"
                           + "	outer apply (  \n"
                           + "		select distinct o.Id, o.EstTakeoutDate  \n"
                           + "		from OrderDetailInvoices odi   \n"
                           + "		inner join OrderDetail od on od.id = odi.OrderDetailId   \n"
                           + "		inner join [Order] o on o.Id = od.OrderId   \n"
                           + "		where odi.InvoicesId = i.Id   \n"
                           + "	) StoreOrder  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 0  \n"
                           + "	) os_0  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 1  \n"
                           + "	) os_1  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 2  \n"
                           + "	) os_2  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 3  \n"
                           + "	) os_3  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 4  \n"
                           + "	) os_4  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 5  \n"
                           + "	) os_5  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 6  \n"
                           + "	) os_6  \n"
                           + "	outer apply (  \n"
                           + "		select ISNULL(max(os.TimeChanged),'1900-01-01') TimeChanged  \n"
                           + "		from OrderStatus os  \n"
                           + "		where os.OrderId = StoreOrder.id and os.Status = 7  \n"
                           + "	) os_7  \n"
                           + "	OUTER APPLY   \n"
                           + "	(  \n"
                           + "		SELECT oss.[Status]  \n"
                           + "		FROM   \n"
                           + "		OrderStatus oss  \n"
                           + "		CROSS APPLY (  \n"
                           + "			SELECT MAX(os.TimeChanged) TimeChanged  \n"
                           + "			FROM OrderStatus AS os  \n"
                           + "			WHERE os.OrderId = StoreOrder.Id  \n"
                           + "		) ost  \n"
                           + "		WHERE oss.OrderId = StoreOrder.Id AND oss.TimeChanged = ost.TimeChanged  \n"
                           + "	) MaxStatus");
        }
    }
}
