using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Symposium_DTOs.PosModel_Info
{
    [DisplayName("Ver : 2.0.0.3")]
    public class Version_2_0_0_3
    {
        public List<string> Ver_2_0_0_3 { get; }

        public Version_2_0_0_3()
        {
            Ver_2_0_0_3 = new List<string>();
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_TransactionId' AND OBJECT_NAME(idx.OBJECT_ID) = 'CreditTransactions_Hist')  \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_TransactionId] ON [dbo].[CreditTransactions_Hist]   \n"
                           + "	(  \n"
                           + "		[nYear] ASC, \n"
                           + "		[TransactionId] ASC  \n"
                           + "	) ");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EOD_Del_Type_Staff' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EOD_Del_Type_Staff] ON [dbo].[Invoices_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[EndOfDayId] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[InvoiceTypeId] ASC, \n"
                           + "		[StaffId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EOD_Del_Type_Pos_Staff' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EOD_Del_Type_Pos_Staff] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[EndOfDayId] ASC, \n"
                                       + "		[IsDeleted] ASC, \n"
                                       + "		[InvoiceTypeId] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[StaffId] ASC \n"
                                       + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Type_EOD_Del_Pos_Staff' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Type_EOD_Del_Pos_Staff] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[InvoiceTypeId] ASC, \n"
                                       + "		[EndOfDayId] ASC, \n"
                                       + "		[IsDeleted] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[StaffId] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[Cover], \n"
                                       + "	[PdaModuleId], \n"
                                       + "	[ClientPosId], \n"
                                       + "	[PosInfoDetailId], \n"
                                       + "	[IsVoided], \n"
                                       + "	[DiscountRemark])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Pos_EOD_Del_Type_Staff' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Pos_EOD_Del_Type_Staff] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[EndOfDayId] ASC, \n"
                                       + "		[IsDeleted] ASC, \n"
                                       + "		[InvoiceTypeId] ASC, \n"
                                       + "		[StaffId] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[Cover], \n"
                                       + "	[PdaModuleId], \n"
                                       + "	[ClientPosId], \n"
                                       + "	[PosInfoDetailId], \n"
                                       + "	[IsVoided], \n"
                                       + "	[DiscountRemark])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Type' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Type] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[IsDeleted] ASC, \n"
                                       + "		[InvoiceTypeId] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [PosInfoId], \n"
                                       + "	[EndOfDayId], \n"
                                       + "	[PosInfoDetailId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Pos_Del_Type' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Pos_Del_Type] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[IsDeleted] ASC, \n"
                                       + "		[InvoiceTypeId] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Id], \n"
                                       + "	[Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[StaffId], \n"
                                       + "	[Cover], \n"
                                       + "	[PdaModuleId], \n"
                                       + "	[ClientPosId], \n"
                                       + "	[EndOfDayId], \n"
                                       + "	[PosInfoDetailId], \n"
                                       + "	[IsVoided], \n"
                                       + "	[DiscountRemark])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EOD_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EOD_Del] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[EndOfDayId] ASC, \n"
                                       + "		[IsDeleted] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Id], \n"
                                       + "	[Description], \n"
                                       + "	[InvoiceTypeId], \n"
                                       + "	[Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[StaffId], \n"
                                       + "	[Cover], \n"
                                       + "	[TableId], \n"
                                       + "	[PosInfoId], \n"
                                       + "	[IsVoided])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Pos_EOD_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Pos_EOD_Del] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[EndOfDayId] ASC, \n"
                                       + "		[IsDeleted] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Id], \n"
                                       + "	[Description], \n"
                                       + "	[InvoiceTypeId], \n"
                                       + "	[Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[StaffId], \n"
                                       + "	[Cover], \n"
                                       + "	[TableId], \n"
                                       + "	[IsVoided])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Pos_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoices_Hist') \n"
                                       + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Pos_Del] ON [dbo].[Invoices_Hist]  \n"
                                       + "	( \n"
                                       + "		[nYear] ASC, \n"
                                       + "		[PosInfoId] ASC, \n"
                                       + "		[IsDeleted] ASC \n"
                                       + "	) \n"
                                       + "	INCLUDE ( [Id], \n"
                                       + "	[Description], \n"
                                       + "	[InvoiceTypeId], \n"
                                       + "	[Counter], \n"
                                       + "	[Day], \n"
                                       + "	[IsPrinted], \n"
                                       + "	[Total], \n"
                                       + "	[Discount], \n"
                                       + "	[Vat], \n"
                                       + "	[Net], \n"
                                       + "	[StaffId], \n"
                                       + "	[Cover], \n"
                                       + "	[TableId], \n"
                                       + "	[EndOfDayId], \n"
                                       + "	[IsVoided])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Transac_Guest' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoice_Guests_Trans_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Transac_Guest] ON [dbo].[Invoice_Guests_Trans_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TransactionId] ASC, \n"
                           + "		[GuestId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Guest_Transac_Inv' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoice_Guests_Trans_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Guest_Transac_Inv] ON [dbo].[Invoice_Guests_Trans_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[GuestId] ASC, \n"
                           + "		[TransactionId] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [InvoiceId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Guest_Transac' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoice_Guests_Trans_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Guest_Transac] ON [dbo].[Invoice_Guests_Trans_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[GuestId] ASC, \n"
                           + "		[TransactionId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Transac' AND OBJECT_NAME(idx.OBJECT_ID) = 'Invoice_Guests_Trans_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Transac] ON [dbo].[Invoice_Guests_Trans_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TransactionId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_FirstName' AND OBJECT_NAME(idx.OBJECT_ID) = 'OnlineRegistration_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_FirstName] ON [dbo].[OnlineRegistration_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[FirtName] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_LastName' AND OBJECT_NAME(idx.OBJECT_ID) = 'OnlineRegistration_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_LastName] ON [dbo].[OnlineRegistration_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[LastName] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Status' AND OBJECT_NAME(idx.OBJECT_ID) = 'OnlineRegistration_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Status] ON [dbo].[OnlineRegistration_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[Status] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_OrdetDetIng_Vat_Net_VatAm_Tax_TaxAm' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailIgredientVatAnal_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_OrdetDetIng_Vat_Net_VatAm_Tax_TaxAm] ON [dbo].[OrderDetailIgredientVatAnal_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderDetailIgredientsId] ASC, \n"
                           + "		[VatId] ASC, \n"
                           + "		[Net] ASC, \n"
                           + "		[VatAmount] ASC, \n"
                           + "		[TaxId] ASC, \n"
                           + "		[TaxAmount] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [VatRate])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Vat_OrderDetIng_Net_VatAm_Tax_TaxAm' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailIgredientVatAnal_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Vat_OrderDetIng_Net_VatAm_Tax_TaxAm] ON [dbo].[OrderDetailIgredientVatAnal_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[VatId] ASC, \n"
                           + "		[OrderDetailIgredientsId] ASC, \n"
                           + "		[Net] ASC, \n"
                           + "		[VatAmount] ASC, \n"
                           + "		[TaxId] ASC, \n"
                           + "		[TaxAmount] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [VatRate])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EndOfDayId' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailInvoices_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EndOfDayId] ON [dbo].[OrderDetailInvoices_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[EndOfDayId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_OrderDetailIgredientsId' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailInvoices_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_OrderDetailIgredientsId] ON [dbo].[OrderDetailInvoices_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderDetailIgredientsId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Vat_OrderDet_Net_VatAm_Tax_TaxAm' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailVatAnal_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Vat_OrderDet_Net_VatAm_Tax_TaxAm] ON [dbo].[OrderDetailVatAnal_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[VatId] ASC, \n"
                           + "		[OrderDetailId] ASC, \n"
                           + "		[Net] ASC, \n"
                           + "		[VatAmount] ASC, \n"
                           + "		[TaxId] ASC, \n"
                           + "		[TaxAmount] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [VatRate])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_OrderDet_Tax_Vat_Net_VatAm_TaxAm' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailVatAnal_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_OrderDet_Tax_Vat_Net_VatAm_TaxAm] ON [dbo].[OrderDetailVatAnal_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderDetailId] ASC, \n"
                           + "		[TaxId] ASC, \n"
                           + "		[VatId] ASC, \n"
                           + "		[Net] ASC, \n"
                           + "		[VatAmount] ASC, \n"
                           + "		[TaxAmount] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [VatRate])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_OrderDet' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetailVatAnal_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_OrderDet] ON [dbo].[OrderDetailVatAnal_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderDetailId] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [VatId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Tbl_Stat_Paid_Del_Order' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Tbl_Stat_Paid_Del_Order] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TableId] ASC, \n"
                           + "		[Status] ASC, \n"
                           + "		[PaidStatus] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[OrderId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Paid_Stat_Order_Kitc_Kds_Prep_Tbl' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Paid_Stat_Order_Kitc_Kds_Prep_Tbl] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[PaidStatus] ASC, \n"
                           + "		[Status] ASC, \n"
                           + "		[OrderId] ASC, \n"
                           + "		[KitchenId] ASC, \n"
                           + "		[KdsId] ASC, \n"
                           + "		[PreparationTime] ASC, \n"
                           + "		[TableId] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [ProductId], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[Qty], \n"
                           + "	[Discount], \n"
                           + "	[TotalAfterDiscount], \n"
                           + "	[IsDeleted])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Tbl_Paid_Stat_Order_Prod_Price_Del_Tot_Qty_Disc_Kitc_Prep_Guid' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Tbl_Paid_Stat_Order_Prod_Price_Del_Tot_Qty_Disc_Kitc_Prep_Guid] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TableId] ASC, \n"
                           + "		[PaidStatus] ASC, \n"
                           + "		[Status] ASC, \n"
                           + "		[OrderId] ASC, \n"
                           + "		[ProductId] ASC, \n"
                           + "		[PriceListDetailId] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[TotalAfterDiscount] ASC, \n"
                           + "		[Qty] ASC, \n"
                           + "		[Discount] ASC, \n"
                           + "		[KitchenId] ASC, \n"
                           + "		[KdsId] ASC, \n"
                           + "		[PreparationTime] ASC, \n"
                           + "		[Guid] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Tbl_Stat_Peid_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Tbl_Stat_Peid_Del] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TableId] ASC, \n"
                           + "		[Status] ASC, \n"
                           + "		[PaidStatus] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Order' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Order] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Tot' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Tot] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[TotalAfterDiscount] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Stat' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Stat] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[Status] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[PaidStatus])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Incl_1' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Incl_1] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[ProductId], \n"
                           + "	[KitchenId], \n"
                           + "	[KdsId], \n"
                           + "	[PreparationTime], \n"
                           + "	[TableId], \n"
                           + "	[Status], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[SalesTypeId], \n"
                           + "	[PaidStatus], \n"
                           + "	[Guid])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Incl_2' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Incl_2] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[ProductId], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[SalesTypeId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Incl_3' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Incl_3] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[ProductId], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[SalesTypeId], \n"
                           + "	[TotalAfterDiscount])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Order_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Order_Del] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[Status], \n"
                           + "	[PaidStatus])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Prod_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Prod_Del] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[ProductId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[SalesTypeId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Sal_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Sal_Del] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[SalesTypeId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[ProductId], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[TotalAfterDiscount])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Del_Stat' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Del_Stat] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[Status] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[OrderId], \n"
                           + "	[ProductId], \n"
                           + "	[KitchenId], \n"
                           + "	[TableId], \n"
                           + "	[Price], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[Qty], \n"
                           + "	[Discount], \n"
                           + "	[PaidStatus], \n"
                           + "	[TotalAfterDiscount], \n"
                           + "	[Couver], \n"
                           + "	[Guid])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Order_Del_Incl' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderDetail_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Order_Del_Incl] ON [dbo].[OrderDetail_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[ProductId], \n"
                           + "	[KitchenId], \n"
                           + "	[TableId], \n"
                           + "	[Status], \n"
                           + "	[Price], \n"
                           + "	[PriceListDetailId], \n"
                           + "	[Qty], \n"
                           + "	[Discount], \n"
                           + "	[PaidStatus], \n"
                           + "	[TotalAfterDiscount], \n"
                           + "	[Couver], \n"
                           + "	[Guid])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Order' AND OBJECT_NAME(idx.OBJECT_ID) = 'OrderStatus_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Order] ON [dbo].[OrderStatus_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_OrderNo' AND OBJECT_NAME(idx.OBJECT_ID) = 'Order_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_OrderNo] ON [dbo].[Order_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[OrderNo] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EOD' AND OBJECT_NAME(idx.OBJECT_ID) = 'Order_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EOD] ON [dbo].[Order_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[EndOfDayId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Inv_Del_Acc_Pos' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Inv_Del_Acc_Pos] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[InvoicesId] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[AccountId] ASC, \n"
                           + "		[PosInfoId] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [TransactionType], \n"
                           + "	[Amount], \n"
                           + "	[EndOfDayId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Inv_Acc_Pos_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Inv_Acc_Pos_Del] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[InvoicesId] ASC, \n"
                           + "		[AccountId] ASC, \n"
                           + "		[PosInfoId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [TransactionType], \n"
                           + "	[Amount], \n"
                           + "	[EndOfDayId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Acc_Del_Pos' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Acc_Del_Pos] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[AccountId] ASC, \n"
                           + "		[IsDeleted] ASC, \n"
                           + "		[PosInfoId] ASC  \n"
                           + "	) \n"
                           + "	INCLUDE ( [TransactionType], \n"
                           + "	[Amount], \n"
                           + "	[EndOfDayId], \n"
                           + "	[InvoicesId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year__EndOfDayId' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EndOfDayId] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[EndOfDayId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Pos_Transac_EOD' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Pos_Transac_EOD] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[PosInfoId] ASC, \n"
                           + "		[TransactionType] ASC, \n"
                           + "		[EndOfDayId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Inv' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Inv] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[InvoicesId] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Id], \n"
                           + "	[StaffId], \n"
                           + "	[Amount], \n"
                           + "	[AccountId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Acc_Inv_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Acc_Inv_Del] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[AccountId] ASC, \n"
                           + "		[InvoicesId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	) \n"
                           + "	INCLUDE ( [Amount], \n"
                           + "	[EndOfDayId])");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_Inv_Del' AND OBJECT_NAME(idx.OBJECT_ID) = 'Transactions_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_Inv_Del] ON [dbo].[Transactions_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[InvoicesId] ASC, \n"
                           + "		[IsDeleted] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_TransfMap' AND OBJECT_NAME(idx.OBJECT_ID) = 'TransferMappingDetails_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_TransfMap] ON [dbo].[TransferMappingDetails_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[TransferMappingsId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("IF NOT EXISTS (SELECT 1 FROM sys.indexes idx WHERE idx.name='IX_Hist_Year_EOD_ID' AND OBJECT_NAME(idx.OBJECT_ID) = 'TransferToPms_Hist') \n"
                           + "	CREATE NONCLUSTERED INDEX [IX_Hist_Year_EOD_ID] ON [dbo].[TransferToPms_Hist]  \n"
                           + "	( \n"
                           + "		[nYear] ASC, \n"
                           + "		[EndOfDayId] ASC \n"
                           + "	)");
            Ver_2_0_0_3.Add("CREATE PROCEDURE dbo.MoveDataToHistoric @Year INT AS \n"
                           + "BEGIN \n"
                           + " 	DECLARE @OK SMALLINT \n"
                           + " 	BEGIN TRY \n"
                           + " 		DECLARE @CreditAccounts TABLE (ID BIGINT) \n"
                           + " 		DECLARE @CreditCodes TABLE (ID BIGINT) \n"
                           + " 		DECLARE @CreditTransactions TABLE (ID BIGINT) \n"
                           + " 		DECLARE @EndOfDay TABLE (ID BIGINT) \n"
                           + " 		DECLARE @EndOfDayDetail TABLE (ID BIGINT) \n"
                           + " 		DECLARE @EndOfDayPaymentAnalysis TABLE (ID BIGINT) \n"
                           + " 		DECLARE @EndOfDayVoidsAnalysis TABLE (ID BIGINT) \n"
                           + " 		DECLARE @EODAccountToPmsTransfer TABLE (ID BIGINT) \n"
                           + " 		DECLARE @ExternalLostOrders TABLE (OrderNo VARCHAR(255), ExtType INT) \n"
                           + " 		DECLARE @HitPosOrders TABLE (ID BIGINT) \n"
                           + " 		DECLARE @Invoice_Guests_Trans TABLE (ID BIGINT) \n"
                           + " 		DECLARE @Invoices TABLE (ID BIGINT) \n"
                           + " 		DECLARE @InvoiceShippingDetails TABLE (ID BIGINT) \n"
                           + " 		DECLARE @KitchenInstructionLogger TABLE (ID BIGINT) \n"
                           + " 		DECLARE @Lockers TABLE (ID BIGINT) \n"
                           + " 		DECLARE @Loyalty TABLE (ID BIGINT) \n"
                           + " 		DECLARE @MealConsumption TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OnlineRegistration TABLE (BarCode VARCHAR(255)) \n"
                           + " 		DECLARE @Order TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderDetail TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderDetailIgredients TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderDetailIgredientVatAnal TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderDetailInvoices TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderDetailVatAnal TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrdersStaff TABLE (ID BIGINT) \n"
                           + " 		DECLARE @OrderStatus TABLE (ID BIGINT) \n"
                           + " 		DECLARE @StoreMessages TABLE (ID BIGINT) \n"
                           + " 		DECLARE @TablePaySuggestion TABLE (ID BIGINT) \n"
                           + " 		DECLARE @Transactions TABLE (ID BIGINT) \n"
                           + " 		DECLARE @TransferToPms TABLE (ID BIGINT) \n"
                           + " 		 \n"
                           + " 	 \n"
                           + " 		DECLARE @ResTable TABLE (ID INT IDENTITY(1,1), tblName VARCHAR(200), StartRecs INT, EndRecs INT) \n"
                           + " 		INSERT INTO @ResTable(tblName, StartRecs, EndRecs) \n"
                           + " 		SELECT 'CreditAccounts' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditAccounts ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditAccounts_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'CreditCodes' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditCodes ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditCodes_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'CreditTransactions' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditTransactions ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM CreditTransactions_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'EndOfDay' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDay ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDay_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'EndOfDayDetail' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayDetail ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayDetail_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'EndOfDayPaymentAnalysis' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayPaymentAnalysis ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayPaymentAnalysis_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'EndOfDayVoidsAnalysis' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayVoidsAnalysis ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EndOfDayVoidsAnalysis_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'EODAccountToPmsTransfer' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EODAccountToPmsTransfer ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM EODAccountToPmsTransfer_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'ExternalLostOrders' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM ExternalLostOrders ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM ExternalLostOrders_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'HitPosOrders' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM HitPosOrders ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM HitPosOrders_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Invoice_Guests_Trans' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Invoice_Guests_Trans ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Invoice_Guests_Trans_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Invoices' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Invoices ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Invoices_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'InvoiceShippingDetails' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM InvoiceShippingDetails ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM InvoiceShippingDetails_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'KitchenInstructionLogger' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM KitchenInstructionLogger ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM KitchenInstructionLogger_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Lockers' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Lockers ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Lockers_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Loyalty' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Loyalty ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Loyalty_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'MealConsumption' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM MealConsumption ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM MealConsumption_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OnlineRegistration' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OnlineRegistration ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OnlineRegistration_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Order' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM [Order] ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Order_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderDetail' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetail ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetail_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderDetailIgredients' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailIgredients ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailIgredients_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderDetailIgredientVatAnal' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailIgredientVatAnal ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailIgredientVatAnal_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderDetailInvoices' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailInvoices ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailInvoices_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderDetailVatAnal' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailVatAnal ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderDetailVatAnal_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrdersStaff' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrdersStaff ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrdersStaff_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'OrderStatus' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderStatus ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM OrderStatus_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'StoreMessages' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM StoreMessages ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM StoreMessages_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'TablePaySuggestion' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM TablePaySuggestion ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM TablePaySuggestion_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'Transactions' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Transactions ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM Transactions_Hist cah \n"
                           + " 		) fin \n"
                           + " 		UNION ALL \n"
                           + " 		SELECT 'TransferToPms' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 		FROM ( \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM TransferToPms ca \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 			FROM TransferToPms_Hist cah \n"
                           + " 		) fin \n"
                           + " 		 \n"
                           + " 		 \n"
                           + " 		BEGIN TRY  \n"
                           + " 			BEGIN TRANSACTION		 \n"
                           + "	 		 \n"
                           + " 			INSERT INTO EndOfYear(ClosedYear,ClosedDate,[Description]) \n"
                           + " 			SELECT @Year, GETDATE(), 'End of year for season '+CAST(@Year AS VARCHAR(20)) \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @CreditAccounts (ID) \n"
                           + "	 		SELECT DISTINCT ca.Id \n"
                           + " 			FROM CreditAccounts ca  \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = ca.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO CreditAccounts_Hist (nYear, Id, [Description], EndOfDayId, ActivateTS, DeactivateTS) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear, ca.Id, ca.[Description], ca.EndOfDayId, ca.ActivateTS, ca.DeactivateTS \n"
                           + " 			FROM CreditAccounts ca  \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = ca.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + " \n"
                           + "			INSERT INTO @CreditCodes (ID) \n"
                           + "			SELECT DISTINCT cc.Id \n"
                           + " 			FROM CreditCodes cc \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT ca.Id, YEAR(eod.FODay) nYear \n"
                           + " 				FROM CreditAccounts ca  \n"
                           + " 				INNER JOIN EndOfDay eod ON eod.Id = ca.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			) ca ON ca.Id = cc.CreditAccountId \n"
                           + " 			 \n"
                           + " 			INSERT INTO CreditCodes_Hist(nYear,Id,[Description],Code,[Type],CreditAccountId) \n"
                           + " 			SELECT DISTINCT ca.nYear nYear,cc.Id, cc.[Description], cc.Code, cc.[Type], cc.CreditAccountId \n"
                           + " 			FROM CreditCodes cc \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT ca.Id, YEAR(eod.FODay) nYear \n"
                           + " 				FROM CreditAccounts ca  \n"
                           + " 				INNER JOIN EndOfDay eod ON eod.Id = ca.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			) ca ON ca.Id = cc.CreditAccountId \n"
                           + "	  \n"
                           + "	  \n"
                           + "			INSERT INTO @CreditTransactions(ID) \n"
                           + "			SELECT DISTINCT ct.Id \n"
                           + " 			FROM CreditTransactions ct  \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = ct.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO CreditTransactions_Hist(nYear,Id,CreditAccountId,CreditCodeId,Amount,CreationTS,[Type], \n"
                           + " 				StaffId,[Description],PosInfoId,EndOfDayId,InvoiceId,TransactionId) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear,ct.Id,ct.CreditAccountId,ct.CreditCodeId,ct.Amount,ct.CreationTS,ct.[Type], \n"
                           + " 				ct.StaffId,ct.[Description],ct.PosInfoId,ct.EndOfDayId,ct.InvoiceId,ct.TransactionId \n"
                           + " 			FROM CreditTransactions ct  \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = ct.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @EndOfDayDetail (ID) \n"
                           + "	 		SELECT DISTINCT eodd.Id \n"
                           + " 			FROM EndOfDayDetail eodd \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodd.EndOfdayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO EndOfDayDetail_Hist(nYear,Id,EndOfdayId,VatId,VatRate,VatAmount,TaxId,TaxAmount,Gross,Net,Discount) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear,eodd.Id, eodd.EndOfdayId, eodd.VatId, eodd.VatRate, eodd.VatAmount, \n"
                           + " 				   eodd.TaxId, eodd.TaxAmount, eodd.Gross, eodd.Net, eodd.Discount \n"
                           + " 			FROM EndOfDayDetail eodd \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodd.EndOfdayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @EndOfDayPaymentAnalysis(ID) \n"
                           + "	 		SELECT DISTINCT eodpa.Id \n"
                           + " 			FROM EndOfDayPaymentAnalysis eodpa \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodpa.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO EndOfDayPaymentAnalysis_Hist(nYear,Id,EndOfDayId,AccountId,Total,[Description],AccountType) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear,eodpa.Id, eodpa.EndOfDayId, eodpa.AccountId, eodpa.Total, eodpa.[Description], eodpa.AccountType \n"
                           + " 			FROM EndOfDayPaymentAnalysis eodpa \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodpa.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @EndOfDayVoidsAnalysis(ID) \n"
                           + "	 		SELECT eodva.Id \n"
                           + " 			FROM EndOfDayVoidsAnalysis eodva \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodva.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO EndOfDayVoidsAnalysis_Hist(nYear,Id,EndOfDayId,AccountId,Total,[Description],AccountType) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear,eodva.Id, eodva.EndOfDayId, eodva.AccountId, eodva.Total, eodva.[Description], eodva.AccountType \n"
                           + " 			FROM EndOfDayVoidsAnalysis eodva \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = eodva.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @EndOfDay (ID) \n"
                           + "	 		SELECT DISTINCT eod.Id \n"
                           + " 			FROM EndOfDay eod \n"
                           + " 			WHERE YEAR(eod.FODay) = @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO EndOfDay_Hist(nYear,Id,FODay,PosInfoId,CloseId,Gross,Net,TicketsCount,ItemCount,TicketAverage, \n"
                           + " 				StaffId,Discount,Barcodes,dtDateTime) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear, eod.Id, eod.FODay, eod.PosInfoId, eod.CloseId, eod.Gross, eod.Net, \n"
                           + " 				   eod.TicketsCount, eod.ItemCount, eod.TicketAverage, eod.StaffId, \n"
                           + " 				   eod.Discount, eod.Barcodes, eod.dtDateTime  \n"
                           + " 			FROM EndOfDay eod \n"
                           + " 			WHERE YEAR(eod.FODay) = @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @EODAccountToPmsTransfer (ID) \n"
                           + "	 		SELECT etpt.Id \n"
                           + " 			FROM EODAccountToPmsTransfer etpt \n"
                           + " 			 \n"
                           + " 			INSERT INTO EODAccountToPmsTransfer_Hist(nYear,Id,PosInfoId,AccountId,PmsRoom,[Description],[Status], \n"
                           + " 				PmsDepartmentId,PmsDepDescription) \n"
                           + " 			SELECT @Year nYear, etpt.Id, etpt.PosInfoId, etpt.AccountId, etpt.PmsRoom,etpt.[Description], etpt.[Status],  \n"
                           + " 				etpt.PmsDepartmentId, etpt.PmsDepDescription \n"
                           + " 			FROM EODAccountToPmsTransfer etpt \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @ExternalLostOrders (OrderNo, ExtType) \n"
                           + "	 		SELECT elo.OrderNo, elo.ExtType	 \n"
                           + " 			FROM ExternalLostOrders elo \n"
                           + " 			INNER JOIN HitPosOrders hpo ON CAST(hpo.orderno AS VARCHAR(255)) = elo.OrderNo AND YEAR(hpo.CreationDate) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO ExternalLostOrders_Hist(nYear,OrderNo,ExtType) \n"
                           + " 			SELECT YEAR(hpo.CreationDate) nYear, elo.OrderNo, elo.ExtType	 \n"
                           + " 			FROM ExternalLostOrders elo \n"
                           + " 			INNER JOIN HitPosOrders hpo ON CAST(hpo.orderno AS VARCHAR(255)) = elo.OrderNo AND YEAR(hpo.CreationDate) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @HitPosOrders(ID) \n"
                           + "	 		SELECT CurId \n"
                           + " 			FROM HitPosOrders hpo \n"
                           + " 			WHERE YEAR(hpo.CreationDate) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO HitPosOrders_Hist(nYear,CurId,id,orderno,pos,shop_id,item_group,item_code,item_descr,item_subgroup,item_vat,cont_line, \n"
                           + " 				sp,prep_time,start_time,load_time,otd,qty,amount,total,waiter,ttable,listino,receipt,member,priority,kdws,ready,rqty,nieko_flag, \n"
                           + " 				[status],status_time,rest_time,room,payment,[type],comments,mqty,rec_time_start,status_time2,status_time3,status_time4, \n"
                           + " 				status_time5,fo_day,delivery_time,agent,flag_up,[sent],correct,completed,CreationDate) \n"
                           + " 			SELECT YEAR(hpo.CreationDate) nYear,CurId,id,orderno,pos,shop_id,item_group,item_code,item_descr,item_subgroup,item_vat,cont_line, \n"
                           + " 				sp,prep_time,start_time,load_time,otd,qty,amount,total,waiter,ttable,listino,receipt,member,priority,kdws,ready,rqty,nieko_flag, \n"
                           + " 				[status],status_time,rest_time,room,payment,[type],comments,mqty,rec_time_start,status_time2,status_time3,status_time4, \n"
                           + " 				status_time5,fo_day,delivery_time,agent,flag_up,[sent],correct,completed,CreationDate \n"
                           + " 			FROM HitPosOrders hpo \n"
                           + " 			WHERE YEAR(hpo.CreationDate) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @InvoiceShippingDetails (ID) \n"
                           + "	 		SELECT DISTINCT isd.Id \n"
                           + " 			FROM InvoiceShippingDetails isd \n"
                           + " 			INNER JOIN Invoices i ON i.Id = isd.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO InvoiceShippingDetails_Hist(nYear,Id,InvoicesId,ShippingAddressId,ShippingAddress,ShippingCity,ShippingZipCode, \n"
                           + " 				BillingAddressId,BillingAddress,BillingCity,BillingZipCode,[Floor],CustomerRemarks,StoreRemarks,CustomerName, \n"
                           + " 				Longtitude,Latitude,Phone) \n"
                           + " 			SELECT DISTINCT YEAR(i.[Day]) nYear,isd.Id,InvoicesId,ShippingAddressId,ShippingAddress,ShippingCity,ShippingZipCode, \n"
                           + " 				BillingAddressId,BillingAddress,BillingCity,BillingZipCode,[Floor],CustomerRemarks,StoreRemarks,CustomerName, \n"
                           + " 				Longtitude,Latitude,Phone \n"
                           + " 			FROM InvoiceShippingDetails isd \n"
                           + " 			INNER JOIN Invoices i ON i.Id = isd.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @Invoices(ID) \n"
                           + "	 		SELECT Id \n"
                           + " 			FROM Invoices i \n"
                           + " 			WHERE YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO Invoices_Hist(nYear,Id,[Description],InvoiceTypeId,[Counter],[Day],IsPrinted,GuestId,Total,Discount,Vat,Tax,Net,StaffId, \n"
                           + " 				Cover,TableId,PosInfoId,PdaModuleId,ClientPosId,EndOfDayId,PosInfoDetailId,IsVoided,IsDeleted,DiscountRemark,PaymentsDesc, \n"
                           + " 				IsPaid,	PaidTotal,Rooms,OrderNo,IsInvoiced,Hashcode,TableSum,CashAmount,BuzzerNumber) \n"
                           + " 			SELECT YEAR(i.[Day]) nYear,Id,[Description],InvoiceTypeId,[Counter],[Day],IsPrinted,GuestId,Total,Discount,Vat,Tax,Net,StaffId, \n"
                           + " 				Cover,TableId,PosInfoId,PdaModuleId,ClientPosId,EndOfDayId,PosInfoDetailId,IsVoided,IsDeleted,DiscountRemark,PaymentsDesc, \n"
                           + " 				IsPaid,	PaidTotal,Rooms,OrderNo,IsInvoiced,Hashcode,TableSum,CashAmount,BuzzerNumber \n"
                           + " 			FROM Invoices i \n"
                           + " 			WHERE YEAR(i.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @Invoice_Guests_Trans (ID) \n"
                           + " 			SELECT DISTINCT igt.Id  \n"
                           + " 			FROM Invoice_Guests_Trans igt \n"
                           + " 			INNER JOIN Invoices i ON i.Id = igt.InvoiceId AND YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO Invoice_Guests_Trans_Hist(nYear,Id,InvoiceId,GuestId,TransactionId) \n"
                           + " 			SELECT DISTINCT YEAR(i.[Day]) nYear,igt.Id, igt.InvoiceId, igt.GuestId, igt.TransactionId  \n"
                           + " 			FROM Invoice_Guests_Trans igt \n"
                           + " 			INNER JOIN Invoices i ON i.Id = igt.InvoiceId AND YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO @KitchenInstructionLogger (ID) \n"
                           + "	 		SELECT kil.Id \n"
                           + " 			FROM KitchenInstructionLogger kil \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = kil.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO KitchenInstructionLogger_Hist(nYear,Id,KicthcenInstuctionId,StaffId,PdaModulId,ClientId,PosInfoId,SendTS, \n"
                           + " 				ReceivedTS,EndOfDayId,[Status],TableId,ExtecrName,[Description]) \n"
                           + " 			SELECT DISTINCT YEAR(eod.FODay) nYear, kil.Id, kil.KicthcenInstuctionId, kil.StaffId, kil.PdaModulId,kil.ClientId, kil.PosInfoId, kil.SendTS,  \n"
                           + " 				kil.ReceivedTS, kil.EndOfDayId,kil.[Status], kil.TableId, kil.ExtecrName, kil.[Description] \n"
                           + " 			FROM KitchenInstructionLogger kil \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = kil.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO KitchenInstruction_Hist(nYear,Id,KitchenId,[Message],[Description]) \n"
                           + " 			SELECT @Year nYear, ki.Id, ki.KitchenId, ki.[Message], ki.[Description] \n"
                           + " 			FROM KitchenInstruction ki \n"
                           + "          WHERE CAST(@Year AS VARCHAR(10))+'-'+CAST(ki.Id AS VARCHAR(10)) NOT IN (SELECT CAST(ki2.nYear AS VARCHAR(10))+'-'+CAST(ki2.Id AS VARCHAR(10)) FROM KitchenInstruction_Hist ki2) \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO @Lockers (ID) \n"
                           + "	 		SELECT l.Id \n"
                           + "	 		FROM Lockers l \n"
                           + "	 		INNER JOIN EndOfDay eod ON eod.Id = l.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO Lockers_Hist(nYear,Id,HasLockers,TotalLockers,TotalLockersAmount,Paidlockers,PaidlockersAmount,OccLockers, \n"
                           + "	 			OccLockersAmount,EndOfDayId) \n"
                           + "	 		SELECT YEAR(eod.FODay) nYear, l.Id,l.HasLockers,l.TotalLockers,l.TotalLockersAmount,l.Paidlockers,l.PaidlockersAmount,l.OccLockers, \n"
                           + "	 			l.OccLockersAmount,l.EndOfDayId \n"
                           + "	 		FROM Lockers l \n"
                           + "	 		INNER JOIN EndOfDay eod ON eod.Id = l.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @Loyalty(ID) \n"
                           + "	 		SELECT l.Id \n"
                           + "	 		FROM Loyalty l \n"
                           + "	 		INNER JOIN Invoices i ON i.Id = l.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO Loyalty_Hist(nYear, [Day],LoyalltyId,CouponCode,GiftcardCode,CouponType,Campaign,Channel,InvoicesId,Id, \n"
                           + "	 			ErrorDescription,GiftCardCouponType,GiftCardCampaign) \n"
                           + "	 		SELECT YEAR(i.[Day])nYear, l.[Day], l.LoyalltyId, l.CouponCode, l.GiftcardCode,l.CouponType, l.Campaign, l.Channel, l.InvoicesId, l.Id, \n"
                           + "	 		       l.ErrorDescription, l.GiftCardCouponType, l.GiftCardCampaign \n"
                           + "	 		FROM Loyalty l \n"
                           + "	 		INNER JOIN Invoices i ON i.Id = l.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @MealConsumption(ID)  \n"
                           + "	 		SELECT mc.Id \n"
                           + "	 		FROM MealConsumption mc \n"
                           + "	 		INNER JOIN EndOfDay eod ON eod.Id = mc.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO MealConsumption_Hist(nYear, Id, GuestId, ConsumedMeals,ConsumedTS, IsDeleted, BoardCode, ReservationId, \n"
                           + "	 		            ConsumedMealsChild, DepartmentId, EndOfDayId, PosInfoId) \n"
                           + "	 		SELECT YEAR(eod.FODay) nYear, mc.Id, mc.GuestId, mc.ConsumedMeals, mc.ConsumedTS, mc.IsDeleted, mc.BoardCode, mc.ReservationId, \n"
                           + "	 		       mc.ConsumedMealsChild, mc.DepartmentId, mc.EndOfDayId, \n"
                           + "	 		       mc.PosInfoId \n"
                           + "	 		FROM MealConsumption mc \n"
                           + "	 		INNER JOIN EndOfDay eod ON eod.Id = mc.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OnlineRegistration (BarCode) \n"
                           + "	 		SELECT BarCode \n"
                           + " 			FROM OnlineRegistration or1 \n"
                           + " 			 \n"
                           + " 			INSERT INTO OnlineRegistration_Hist(nYear,BarCode,FirtName,LastName,Mobile,Dates,Children,Adults,PaymentType,ChildTicket, \n"
                           + " 				AdultTicket,RegistrationDate,TotalChildren,TotalAdults,ChildrenEntered,AdultsEntered,TotalAmount,RemainingAmount,[Status]) \n"
                           + " 			SELECT @Year nYear,BarCode,FirtName,LastName,Mobile,Dates,Children,Adults,PaymentType,ChildTicket, \n"
                           + " 				AdultTicket,RegistrationDate,TotalChildren,TotalAdults,ChildrenEntered,AdultsEntered,TotalAmount,RemainingAmount,[Status] \n"
                           + " 			FROM OnlineRegistration or1 \n"
                           + " 			 \n"
                           + " 			 \n"
                           + "	 		INSERT INTO @Order (ID) \n"
                           + "	 		SELECT o.Id \n"
                           + " 			FROM [Order] o \n"
                           + " 			WHERE YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO Order_Hist(nYear,Id,OrderNo,[Day],Total,PosId,StaffId,EndOfDayId,Discount,ReceiptNo,TotalBeforeDiscount, \n"
                           + " 				PdaModuleId,ClientPosId,IsDeleted,ExtType,ExtObj,ExtKey,OrderOrigin,Couver) \n"
                           + " 			SELECT YEAR(o.[Day]) nYear, o.Id, o.OrderNo, o.[Day], o.Total, o.PosId, o.StaffId, o.EndOfDayId,o.Discount, o.ReceiptNo, o.TotalBeforeDiscount,  \n"
                           + " 				o.PdaModuleId, o.ClientPosId, o.IsDeleted, o.ExtType, o.ExtObj, o.ExtKey,o.OrderOrigin, o.Couver  \n"
                           + " 			FROM [Order] o \n"
                           + " 			WHERE YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO @OrderStatus(ID) \n"
                           + "	 		SELECT os.Id \n"
                           + " 			FROM OrderStatus os \n"
                           + " 			INNER JOIN [Order] o ON o.Id = os.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderStatus_Hist(nYear,Id,[Status],TimeChanged,OrderId,StaffId,ExtState) \n"
                           + " 			SELECT YEAR(o.[Day]) nYear, os.Id, os.[Status], os.TimeChanged, os.OrderId, os.StaffId, os.ExtState \n"
                           + " 			FROM OrderStatus os \n"
                           + " 			INNER JOIN [Order] o ON o.Id = os.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO @OrdersStaff(ID) \n"
                           + "	 		SELECT os.Id \n"
                           + " 			FROM OrdersStaff os  \n"
                           + " 			INNER JOIN [Order] o ON o.Id = os.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrdersStaff_Hist(nYear,Id,StaffId,OrderId,[Type]) \n"
                           + " 			SELECT YEAR(o.[Day]) nYear,os.Id, os.StaffId, os.OrderId, os.[Type]  \n"
                           + " 			FROM OrdersStaff os  \n"
                           + " 			INNER JOIN [Order] o ON o.Id = os.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OrderDetail (ID) \n"
                           + "	 		SELECT od.Id \n"
                           + " 			FROM OrderDetail od \n"
                           + " 			INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderDetail_Hist(nYear,Id,OrderId,ProductId,KitchenId,KdsId,PreparationTime,TableId,[Status],StatusTS,Price,PriceListDetailId, \n"
                           + " 				Qty,SalesTypeId,Discount,PaidStatus,TransactionId,TotalAfterDiscount,GuestId,Couver,Guid,IsDeleted,	PendingQty) \n"
                           + " 			SELECT YEAR(o.[Day]) nYear, od.Id, od.OrderId, od.ProductId, od.KitchenId, od.KdsId, od.PreparationTime, od.TableId, od.[Status], od.StatusTS,  \n"
                           + " 				od.Price,od.PriceListDetailId, od.Qty, od.SalesTypeId, od.Discount, od.PaidStatus, od.TransactionId, od.TotalAfterDiscount, od.GuestId,  \n"
                           + " 				od.Couver,od.Guid, od.IsDeleted, od.PendingQty  \n"
                           + " 			FROM OrderDetail od \n"
                           + " 			INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OrderDetailVatAnal(ID) \n"
                           + "	 		SELECT odva.Id  \n"
                           + " 			FROM OrderDetailVatAnal odva \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 				FROM OrderDetail od \n"
                           + " 				INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			) od ON od.Id = odva.OrderDetailId \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderDetailVatAnal_Hist(nYear,Id,OrderDetailId,Gross,Net,VatRate,VatAmount,VatId,TaxId,TaxAmount,IsDeleted) \n"
                           + " 			SELECT od.nYear, odva.Id, odva.OrderDetailId, odva.Gross, odva.Net, odva.VatRate, odva.VatAmount, odva.VatId, odva.TaxId, odva.TaxAmount,  \n"
                           + " 				odva.IsDeleted     \n"
                           + " 			FROM OrderDetailVatAnal odva \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 				FROM OrderDetail od \n"
                           + " 				INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + " 			) od ON od.Id = odva.OrderDetailId \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OrderDetailIgredients(ID) \n"
                           + "	 		SELECT odi.Id \n"
                           + " 			FROM OrderDetailIgredients odi \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 				FROM OrderDetail od \n"
                           + " 				INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year	 \n"
                           + " 			) od ON od.Id = odi.OrderDetailId \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderDetailIgredients_Hist(	nYear,Id,IngredientId,Qty,UnitId,Price,OrderDetailId,PriceListDetailId,Discount,TotalAfterDiscount, \n"
                           + " 				IsDeleted) \n"
                           + " 			SELECT od.nYear, odi.Id, odi.IngredientId, odi.Qty, odi.UnitId, odi.Price, odi.OrderDetailId, odi.PriceListDetailId, odi.Discount, \n"
                           + " 				   odi.TotalAfterDiscount, odi.IsDeleted \n"
                           + " 			FROM OrderDetailIgredients odi \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 				FROM OrderDetail od \n"
                           + " 				INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year	 \n"
                           + " 			) od ON od.Id = odi.OrderDetailId \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OrderDetailIgredientVatAnal (ID) \n"
                           + "	 		SELECT odiva.Id \n"
                           + " 			FROM OrderDetailIgredientVatAnal odiva \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT odi.Id, od.nYear \n"
                           + " 				FROM OrderDetailIgredients odi \n"
                           + " 				INNER JOIN ( \n"
                           + " 					SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 					FROM OrderDetail od \n"
                           + " 					INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year	 \n"
                           + " 				) od ON od.Id = odi.OrderDetailId	 \n"
                           + " 			) odi ON odi.Id = odiva.OrderDetailIgredientsId \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderDetailIgredientVatAnal_Hist (nYear,Id,OrderDetailIgredientsId,Gross,Net,VatRate,VatAmount,VatId,TaxId,TaxAmount,IsDeleted) \n"
                           + " 			SELECT odi.nYear, odiva.Id, odiva.OrderDetailIgredientsId, odiva.Gross, odiva.Net, odiva.VatRate, odiva.VatAmount, odiva.VatId, odiva.TaxId, \n"
                           + " 				odiva.TaxAmount, odiva.IsDeleted \n"
                           + " 			FROM OrderDetailIgredientVatAnal odiva \n"
                           + " 			INNER JOIN ( \n"
                           + " 				SELECT DISTINCT odi.Id, od.nYear \n"
                           + " 				FROM OrderDetailIgredients odi \n"
                           + " 				INNER JOIN ( \n"
                           + " 					SELECT DISTINCT od.Id, YEAR(o.[Day]) nYear \n"
                           + " 					FROM OrderDetail od \n"
                           + " 					INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year	 \n"
                           + " 				) od ON od.Id = odi.OrderDetailId	 \n"
                           + " 			) odi ON odi.Id = odiva.OrderDetailIgredientsId \n"
                           + " 			 \n"
                           + " 			 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @OrderDetailInvoices (ID) \n"
                           + "	 		SELECT odi.Id \n"
                           + " 			FROM OrderDetailInvoices odi \n"
                           + " 			INNER JOIN Invoices i ON i.Id = odi.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO OrderDetailInvoices_Hist(nYear,Id,OrderDetailId,StaffId,PosInfoDetailId,[Counter],CreationTS,IsPrinted,CustomerId,InvoicesId, \n"
                           + " 				IsDeleted,OrderDetailIgredientsId,Price,Discount,Net,VatRate,VatAmount,VatId,TaxId,VatCode,TaxAmount,Qty,Total,PricelistId,ProductId, \n"
                           + " 				[Description],ItemCode,ItemRemark,InvoiceType,TableId,TableCode,RegionId,OrderNo,OrderId,IsExtra,PosInfoId,EndOfDayId,Abbreviation, \n"
                           + " 				DiscountId,SalesTypeId,ProductCategoryId,CategoryId,ItemPosition,ItemSort,ItemRegion,RegionPosition,ItemBarcode,TotalBeforeDiscount, \n"
                           + " 				TotalAfterDiscount,ReceiptSplitedDiscount) \n"
                           + " 			SELECT YEAR(i.[Day]) nYear, odi.Id, odi.OrderDetailId, odi.StaffId, odi.PosInfoDetailId,odi.[Counter], odi.CreationTS, odi.IsPrinted, odi.CustomerId, \n"
                           + " 				   odi.InvoicesId, odi.IsDeleted, odi.OrderDetailIgredientsId, odi.Price,odi.Discount, odi.Net, odi.VatRate, odi.VatAmount, odi.VatId,  \n"
                           + " 				   odi.TaxId,odi.VatCode, odi.TaxAmount, odi.Qty, odi.Total, odi.PricelistId,odi.ProductId, odi.[Description], odi.ItemCode, odi.ItemRemark, \n"
                           + " 				   odi.InvoiceType, odi.TableId, odi.TableCode, odi.RegionId, odi.OrderNo,odi.OrderId, odi.IsExtra, odi.PosInfoId, odi.EndOfDayId, \n"
                           + " 				   odi.Abbreviation, odi.DiscountId, odi.SalesTypeId,odi.ProductCategoryId, odi.CategoryId, odi.ItemPosition, odi.ItemSort, \n"
                           + " 				   odi.ItemRegion, odi.RegionPosition, odi.ItemBarcode,odi.TotalBeforeDiscount, odi.TotalAfterDiscount,odi.ReceiptSplitedDiscount \n"
                           + " 			FROM OrderDetailInvoices odi \n"
                           + " 			INNER JOIN Invoices i ON i.Id = odi.InvoicesId AND YEAR(i.[Day]) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + "	 		INSERT INTO @StoreMessages (ID) \n"
                           + "	 		SELECT sm.Id \n"
                           + " 			FROM StoreMessages sm \n"
                           + " 			WHERE YEAR(sm.ShowTo) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO StoreMessages_Hist(nYear,Id,[Message],CreationDate,Title,StoreId,ShowFrom,ShowTo,ImageUri,[Status]) \n"
                           + " 			SELECT YEAR(sm.ShowTo) nYear, sm.Id, sm.[Message], sm.CreationDate, sm.Title, sm.StoreId, sm.ShowFrom, \n"
                           + " 				   sm.ShowTo, sm.ImageUri, sm.[Status] \n"
                           + " 			FROM StoreMessages sm \n"
                           + " 			WHERE YEAR(sm.ShowTo) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + "	 		INSERT INTO @TablePaySuggestion(ID) \n"
                           + "	 		SELECT tps.Id \n"
                           + "	 		FROM TablePaySuggestion tps \n"
                           + "	 		INNER JOIN OrderDetail od ON od.Id = tps.OrderDetailId \n"
                           + "	 		INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO TablePaySuggestion_Hist(nYear,Id,AccountId,GuestId,	Amount,	OrderDetailId,IsUsed,CreditCodeId) \n"
                           + "	 		SELECT YEAR(o.[Day]) nYear, tps.Id, tps.AccountId, tps.GuestId, tps.Amount, tps.OrderDetailId, tps.IsUsed, tps.CreditCodeId \n"
                           + "	 		FROM TablePaySuggestion tps \n"
                           + "	 		INNER JOIN OrderDetail od ON od.Id = tps.OrderDetailId \n"
                           + "	 		INNER JOIN [Order] o ON o.Id = od.OrderId AND YEAR(o.[Day]) <= @Year \n"
                           + "	 		 \n"
                           + "	 		 \n"
                           + "	 		INSERT INTO @Transactions(ID) \n"
                           + "	 		SELECT t.Id \n"
                           + " 			FROM Transactions t \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = t.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO Transactions_Hist(nYear,Id,[Day],PosInfoId,StaffId,OrderId,TransactionType,Amount,DepartmentId,[Description], \n"
                           + " 				AccountId,InOut,Gross,Net,Vat,Tax,EndOfDayId,ExtDescription,InvoicesId,IsDeleted) \n"
                           + " 			SELECT YEAR(eod.FODay) nYear, t.Id, t.[Day], t.PosInfoId, t.StaffId, t.OrderId, t.TransactionType,t.Amount, t.DepartmentId, t.[Description],  \n"
                           + " 				t.AccountId, t.InOut, t.Gross, t.Net, t.Vat, t.Tax, t.EndOfDayId, t.ExtDescription,t.InvoicesId, t.IsDeleted \n"
                           + " 			FROM Transactions t \n"
                           + " 			INNER JOIN EndOfDay eod ON eod.Id = t.EndOfDayId AND YEAR(eod.FODay) <= @Year \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO TransferMappingDetails_Hist(nYear,Id,TransferMappingsId,ProductCategoryId,ProductId) \n"
                           + " 			SELECT DISTINCT @Year nYear, tmd.Id, tmd.TransferMappingsId, tmd.ProductCategoryId, tmd.ProductId \n"
                           + " 			FROM TransferMappingDetails tmd \n"
                           + " 			INNER JOIN TransferMappings tm ON tm.Id = tmd.TransferMappingsId AND CAST(@Year AS VARCHAR(10))+'-'+CAST(tm.Id AS VARCHAR(10)) NOT IN (SELECT CAST(trm.nYear AS VARCHAR(10))+'-'+CAST(trm.Id AS VARCHAR(10)) FROM TransferMappings_Hist trm) \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO TransferMappings_Hist(nYear,Id,PmsDepartmentId,	PmsDepDescription,ProductId,SalesTypeId,VatPercentage,PosDepartmentId, \n"
                           + " 				PriceListId,VatCode,ProductCategoryId,HotelId) \n"
                           + " 			SELECT @Year nYear,Id,PmsDepartmentId,	PmsDepDescription,ProductId,SalesTypeId,VatPercentage,PosDepartmentId, \n"
                           + " 				PriceListId,VatCode,ProductCategoryId,HotelId \n"
                           + " 			FROM TransferMappings tm \n"
                           + "          WHERE CAST(@Year AS VARCHAR(10))+'-'+CAST(tm.Id AS VARCHAR(10)) NOT IN (SELECT CAST(trm.nYear AS VARCHAR(10))+'-'+CAST(trm.Id AS VARCHAR(10)) FROM TransferMappings_Hist trm) \n"
                           + " 			 \n"
                           + " 			 \n"
                           + " 			INSERT INTO @TransferToPms (ID) \n"
                           + "			SELECT Id \n"
                           + " 			FROM TransferToPms ttp \n"
                           + " 			WHERE YEAR(ttp.SendToPMS) <= @Year \n"
                           + " 			 \n"
                           + " 			INSERT INTO TransferToPms_Hist(nYear,Id,RegNo,PmsDepartmentId,[Description],ProfileId,ProfileName,TransactionId,TransferType, \n"
                           + " 				RoomId,RoomDescription,ReceiptNo,PosInfoDetailId,SendToPMS,Total,SendToPmsTS,ErrorMessage,PmsResponseId,TransferIdentifier, \n"
                           + " 				PmsDepartmentDescription,[Status],PosInfoId,EndOfDayId,HotelId,IsDeleted) \n"
                           + " 			SELECT YEAR(ttp.SendToPMS) nYear,Id,RegNo,PmsDepartmentId,[Description],ProfileId,ProfileName,TransactionId,TransferType, \n"
                           + " 				RoomId,RoomDescription,ReceiptNo,PosInfoDetailId,SendToPMS,Total,SendToPmsTS,ErrorMessage,PmsResponseId,TransferIdentifier, \n"
                           + " 				PmsDepartmentDescription,[Status],PosInfoId,EndOfDayId,HotelId,IsDeleted \n"
                           + " 			FROM TransferToPms ttp \n"
                           + " 			WHERE YEAR(ttp.SendToPMS) <= @Year \n"
                           + " 			 \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 			 \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH  \n"
                           + " 			SET @OK = 0 \n"
                           + "			ROLLBACK TRANSACTION \n"
                           + "			SELECT \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH  \n"
                           + " 		 \n"
                           + " 		 \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		/*CreditTransactions*/ \n"
                           + " 		 \n"
                           + " 		 \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM CreditTransactions \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM CreditTransactions_Hist cch) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted CreditTransactions' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*TablePaySuggestion*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM TablePaySuggestion \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM TablePaySuggestion_Hist cch) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted TablePaySuggestion' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*CreditCodes*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM CreditCodes \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM CreditCodes_Hist cch) AND  \n"
                           + " 				Id NOT IN ( \n"
                           + " 					SELECT ct.CreditCodeId \n"
                           + " 					FROM CreditTransactions ct \n"
                           + " 					WHERE ct.CreditCodeId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT tps.CreditCodeId \n"
                           + " 					FROM TablePaySuggestion tps \n"
                           + " 					WHERE tps.CreditCodeId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted CreditCodes' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*CreditAccounts*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM CreditAccounts \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM CreditAccounts_Hist cch) AND  \n"
                           + " 				Id NOT IN ( \n"
                           + " 					SELECT ct.CreditAccountId \n"
                           + " 					FROM CreditTransactions ct \n"
                           + " 					WHERE ct.CreditAccountId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT cc.CreditAccountId \n"
                           + " 					FROM CreditCodes cc \n"
                           + " 					WHERE cc.CreditAccountId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted CreditAccounts' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*EndOfDayDetail*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM EndOfDayDetail \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM EndOfDayDetail_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted EndOfDayDetail' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*EndOfDayPaymentAnalysis*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM EndOfDayPaymentAnalysis \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM EndOfDayPaymentAnalysis_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted EndOfDayPaymentAnalysis' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*EndOfDayVoidsAnalysis*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM EndOfDayVoidsAnalysis \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM EndOfDayVoidsAnalysis_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted EndOfDayVoidsAnalysis' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*EODAccountToPmsTransfer*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM EODAccountToPmsTransfer \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM EODAccountToPmsTransfer_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted EODAccountToPmsTransfer' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*ExternalLostOrders*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM ExternalLostOrders \n"
                           + " 			WHERE OrderNo+'-'+CAST(ExtType AS VARCHAR(50)) IN (SELECT cch.OrderNo+'-'+CAST(cch.ExtType AS VARCHAR(50)) FROM ExternalLostOrders_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted ExternalLostOrders' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*HitPosOrders*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM HitPosOrders \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM HitPosOrders_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted HitPosOrders' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*Invoice_Guests_Trans*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM Invoice_Guests_Trans \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Invoice_Guests_Trans_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Invoice_Guests_Trans' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*InvoiceShippingDetails*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM InvoiceShippingDetails \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM InvoiceShippingDetails_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted InvoiceShippingDetails' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*KitchenInstructionLogger*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM KitchenInstructionLogger \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM KitchenInstructionLogger_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted KitchenInstructionLogger' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*Lockers*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM Lockers \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Lockers_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Lockers' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*Loyalty*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM Loyalty \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Loyalty_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Loyalty' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*MealConsumption*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM MealConsumption \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM MealConsumption_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted MealConsumption' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*OnlineRegistration*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OnlineRegistration \n"
                           + " 			WHERE BarCode IN (SELECT cch.BarCode FROM OnlineRegistration_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OnlineRegistration' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "	 \n"
                           + "		/*OrderDetailInvoices*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderDetailInvoices \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderDetailInvoices_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderDetailInvoices' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*OrderDetailIgredientVatAnal*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderDetailIgredientVatAnal \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderDetailIgredientVatAnal_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderDetailIgredientVatAnal' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*OrderDetailIgredients*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderDetailIgredients \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderDetailIgredients_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT odiva.OrderDetailIgredientsId \n"
                           + " 					FROM OrderDetailIgredientVatAnal odiva \n"
                           + " 					WHERE odiva.OrderDetailIgredientsId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.OrderDetailIgredientsId \n"
                           + " 					FROM OrderDetailInvoices odi \n"
                           + " 					WHERE odi.OrderDetailIgredientsId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderDetailIgredients' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*OrderDetailVatAnal*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderDetailVatAnal \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderDetailVatAnal_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderDetailVatAnal' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*OrderDetail*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderDetail \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderDetail_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT tps.OrderDetailId \n"
                           + " 					FROM TablePaySuggestion tps \n"
                           + " 					WHERE tps.OrderDetailId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.OrderDetailId \n"
                           + " 					FROM OrderDetailIgredients odi \n"
                           + " 					WHERE odi.OrderDetailId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.OrderDetailId \n"
                           + " 					FROM OrderDetailInvoices odi \n"
                           + " 					WHERE odi.OrderDetailId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odva.OrderDetailId \n"
                           + " 					FROM OrderDetailVatAnal odva \n"
                           + " 					WHERE odva.OrderDetailId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderDetail' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*OrdersStaff*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrdersStaff \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrdersStaff_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrdersStaff' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*OrderStatus*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM OrderStatus \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM OrderStatus_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted OrderStatus' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*TransferToPms*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM TransferToPms \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM TransferToPms_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted TransferToPms' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "	 \n"
                           + "		/*Transactions*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM Transactions \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Transactions_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT tps.TransactionId \n"
                           + " 					FROM CreditTransactions tps \n"
                           + " 					WHERE tps.TransactionId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.TransactionId \n"
                           + " 					FROM TransferToPms odi \n"
                           + " 					WHERE odi.TransactionId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.TransactionId \n"
                           + " 					FROM Invoice_Guests_Trans odi \n"
                           + " 					WHERE odi.TransactionId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odva.TransactionId \n"
                           + " 					FROM OrderDetail odva \n"
                           + " 					WHERE odva.TransactionId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Transactions' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*Order*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM [Order] \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Order_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT t.OrderId \n"
                           + " 					FROM Transactions t \n"
                           + " 					WHERE t.OrderId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT od.OrderId \n"
                           + " 					FROM OrderDetail od \n"
                           + " 					WHERE od.OrderId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT os.OrderId \n"
                           + " 					FROM OrdersStaff os \n"
                           + " 					WHERE os.OrderId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT os.OrderId \n"
                           + " 					FROM OrderStatus os \n"
                           + " 					WHERE os.OrderId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Order' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*Invoices*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM Invoices \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM Invoices_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT t.InvoicesId \n"
                           + " 					FROM Transactions t \n"
                           + " 					WHERE t.InvoicesId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT ct.InvoiceId \n"
                           + " 					FROM CreditTransactions ct \n"
                           + " 					WHERE ct.InvoiceId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT isd.InvoicesId \n"
                           + " 					FROM InvoiceShippingDetails isd \n"
                           + " 					WHERE isd.InvoicesId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT igt.InvoiceId \n"
                           + " 					FROM Invoice_Guests_Trans igt \n"
                           + " 					WHERE igt.InvoiceId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT l.InvoicesId \n"
                           + " 					FROM Loyalty l \n"
                           + " 					WHERE l.InvoicesId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.InvoicesId \n"
                           + " 					FROM OrderDetailInvoices odi \n"
                           + " 					WHERE odi.InvoicesId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Invoices' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + "		 \n"
                           + "		/*EndOfDay*/ \n"
                           + "		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM EndOfDay \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM EndOfDay_Hist cch) AND  \n"
                           + " 				id NOT IN ( \n"
                           + " 					SELECT ca.EndOfDayId \n"
                           + " 					FROM CreditAccounts ca \n"
                           + " 					WHERE ca.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT ct.EndOfDayId \n"
                           + " 					FROM CreditTransactions ct \n"
                           + " 					WHERE ct.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT eodd.EndOfdayId \n"
                           + " 					FROM EndOfDayDetail eodd \n"
                           + " 					WHERE eodd.EndOfdayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT eodpa.EndOfDayId \n"
                           + " 					FROM EndOfDayPaymentAnalysis eodpa \n"
                           + " 					WHERE eodpa.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT eodva.EndOfDayId \n"
                           + " 					FROM EndOfDayVoidsAnalysis eodva \n"
                           + " 					WHERE eodva.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT t.EndOfDayId \n"
                           + " 					FROM Transactions t \n"
                           + " 					WHERE t.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT ttp.EndOfDayId \n"
                           + " 					FROM TransferToPms ttp \n"
                           + " 					WHERE ttp.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT i.EndOfDayId \n"
                           + " 					FROM Invoices i \n"
                           + " 					WHERE i.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT kil.EndOfDayId \n"
                           + " 					FROM KitchenInstructionLogger kil \n"
                           + " 					WHERE kil.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT l.EndOfDayId \n"
                           + " 					FROM Lockers l \n"
                           + " 					WHERE l.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT mc.EndOfDayId \n"
                           + " 					FROM MealConsumption mc \n"
                           + " 					WHERE mc.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT o.EndOfDayId \n"
                           + " 					FROM [Order] o \n"
                           + " 					WHERE o.EndOfDayId IS NOT NULL \n"
                           + " 					UNION ALL \n"
                           + " 					SELECT odi.EndOfDayId \n"
                           + " 					FROM OrderDetailInvoices odi \n"
                           + " 					WHERE odi.EndOfDayId IS NOT NULL \n"
                           + " 				) \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted EndOfDay' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " 		/*StoreMessages*/ \n"
                           + " 		BEGIN TRY \n"
                           + " 			BEGIN TRANSACTION  \n"
                           + " 			DELETE FROM StoreMessages \n"
                           + " 			WHERE Id IN (SELECT cch.Id FROM StoreMessages_Hist cch)  \n"
                           + " 			SET @OK = 1 \n"
                           + " 			COMMIT TRANSACTION \n"
                           + " 		END TRY \n"
                           + " 		BEGIN CATCH \n"
                           + " 			ROLLBACK TRANSACTION \n"
                           + " 			SET @OK = 0 \n"
                           + "			SELECT 'Deleted StoreMessages' sTbl,  \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + " 		END CATCH \n"
                           + " 		IF @OK = 0 \n"
                           + " 			GOTO ExitCall; \n"
                           + " 		 \n"
                           + " \n"
                           + "		BEGIN TRY \n"
                           + "			BEGIN TRANSACTION  \n"
                           + "			DELETE FROM CreditAccounts_Hist WHERE Id IN (SELECT Id FROM CreditAccounts) \n"
                           + "			DELETE FROM CreditCodes_Hist WHERE Id IN (SELECT Id FROM CreditCodes) \n"
                           + "			DELETE FROM CreditTransactions_Hist WHERE Id IN (SELECT Id FROM CreditTransactions) \n"
                           + "			DELETE FROM EndOfDay_Hist WHERE Id IN (SELECT Id FROM EndOfDay) \n"
                           + "			DELETE FROM EndOfDayDetail_Hist WHERE Id IN (SELECT Id FROM EndOfDayDetail) \n"
                           + "			DELETE FROM EndOfDayPaymentAnalysis_Hist WHERE Id IN (SELECT Id FROM EndOfDayPaymentAnalysis) \n"
                           + "			DELETE FROM EndOfDayVoidsAnalysis_Hist WHERE Id IN (SELECT Id FROM EndOfDayVoidsAnalysis) \n"
                           + "			DELETE FROM EODAccountToPmsTransfer_Hist WHERE Id IN (SELECT Id FROM EODAccountToPmsTransfer) \n"
                           + "			DELETE FROM ExternalLostOrders_Hist WHERE OrderNo+'-'+CAST(ExtType AS VARCHAR(50)) IN (SELECT OrderNo+'-'+CAST(ExtType AS VARCHAR(50)) FROM ExternalLostOrders) \n"
                           + "			DELETE FROM HitPosOrders_Hist WHERE Id IN (SELECT Id FROM HitPosOrders) \n"
                           + "			DELETE FROM Invoice_Guests_Trans_Hist WHERE Id IN (SELECT Id FROM Invoice_Guests_Trans) \n"
                           + "			DELETE FROM Invoices_Hist WHERE Id IN (SELECT Id FROM Invoices) \n"
                           + "			DELETE FROM InvoiceShippingDetails_Hist WHERE Id IN (SELECT Id FROM InvoiceShippingDetails) \n"
                           + "			DELETE FROM KitchenInstructionLogger_Hist WHERE Id IN (SELECT Id FROM KitchenInstructionLogger) \n"
                           + "			DELETE FROM Lockers_Hist WHERE Id IN (SELECT Id FROM Lockers) \n"
                           + "			DELETE FROM Loyalty_Hist WHERE Id IN (SELECT Id FROM Loyalty) \n"
                           + "			DELETE FROM MealConsumption_Hist WHERE Id IN (SELECT Id FROM MealConsumption) \n"
                           + "			DELETE FROM OnlineRegistration_Hist WHERE BarCode IN (SELECT BarCode FROM OnlineRegistration) \n"
                           + "			DELETE FROM Order_Hist WHERE Id IN (SELECT Id FROM [Order]) \n"
                           + "			DELETE FROM OrderDetail_Hist WHERE Id IN (SELECT Id FROM OrderDetail) \n"
                           + "			DELETE FROM OrderDetailIgredients_Hist WHERE Id IN (SELECT Id FROM OrderDetailIgredients) \n"
                           + "			DELETE FROM OrderDetailIgredientVatAnal_Hist WHERE Id IN (SELECT Id FROM OrderDetailIgredientVatAnal) \n"
                           + "			DELETE FROM OrderDetailInvoices_Hist WHERE Id IN (SELECT Id FROM OrderDetailInvoices) \n"
                           + "			DELETE FROM OrderDetailVatAnal_Hist WHERE Id IN (SELECT Id FROM OrderDetailVatAnal) \n"
                           + "			DELETE FROM OrdersStaff_Hist WHERE Id IN (SELECT Id FROM OrdersStaff) \n"
                           + "			DELETE FROM OrderStatus_Hist WHERE Id IN (SELECT Id FROM OrderStatus) \n"
                           + "			DELETE FROM StoreMessages_Hist WHERE Id IN (SELECT Id FROM StoreMessages) \n"
                           + "			DELETE FROM TablePaySuggestion_Hist WHERE Id IN (SELECT Id FROM TablePaySuggestion) \n"
                           + "			DELETE FROM Transactions_Hist WHERE Id IN (SELECT Id FROM Transactions) \n"
                           + "			DELETE FROM TransferToPms_Hist WHERE Id IN (SELECT Id FROM TransferToPms) \n"
                           + "			 \n"
                           + "			COMMIT TRANSACTION \n"
                           + "			SET @OK = 1 \n"
                           + "		END TRY \n"
                           + "		BEGIN CATCH \n"
                           + "			ROLLBACK TRANSACTION \n"
                           + "			SET @OK = 0 \n"
                           + "			SELECT 'Deleted Check', \n"
                           + "				ERROR_NUMBER() AS ErrorNumber, \n"
                           + "				ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "				ERROR_STATE() AS ErrorState, \n"
                           + "				ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "				ERROR_LINE() AS ErrorLine, \n"
                           + "				ERROR_MESSAGE() AS ErrorMessage \n"
                           + "		END CATCH \n"
                           + "		 \n"
                           + "		UPDATE r SET r.EndRecs = res.StartRecs \n"
                           + "		FROM @ResTable r \n"
                           + "		INNER JOIN ( \n"
                           + "			SELECT 'CreditAccounts' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditAccounts ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditAccounts_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'CreditCodes' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditCodes ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditCodes_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'CreditTransactions' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditTransactions ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM CreditTransactions_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'EndOfDay' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDay ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDay_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'EndOfDayDetail' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayDetail ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayDetail_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'EndOfDayPaymentAnalysis' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayPaymentAnalysis ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayPaymentAnalysis_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'EndOfDayVoidsAnalysis' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayVoidsAnalysis ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EndOfDayVoidsAnalysis_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'EODAccountToPmsTransfer' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EODAccountToPmsTransfer ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM EODAccountToPmsTransfer_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'ExternalLostOrders' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM ExternalLostOrders ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM ExternalLostOrders_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'HitPosOrders' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM HitPosOrders ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM HitPosOrders_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Invoice_Guests_Trans' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Invoice_Guests_Trans ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Invoice_Guests_Trans_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Invoices' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Invoices ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Invoices_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'InvoiceShippingDetails' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM InvoiceShippingDetails ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM InvoiceShippingDetails_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'KitchenInstructionLogger' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM KitchenInstructionLogger ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM KitchenInstructionLogger_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Lockers' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Lockers ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Lockers_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Loyalty' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Loyalty ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Loyalty_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'MealConsumption' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM MealConsumption ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM MealConsumption_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OnlineRegistration' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OnlineRegistration ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OnlineRegistration_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Order' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM [Order] ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Order_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderDetail' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetail ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetail_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderDetailIgredients' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailIgredients ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailIgredients_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderDetailIgredientVatAnal' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailIgredientVatAnal ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailIgredientVatAnal_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderDetailInvoices' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailInvoices ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailInvoices_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderDetailVatAnal' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailVatAnal ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderDetailVatAnal_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrdersStaff' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrdersStaff ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrdersStaff_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'OrderStatus' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderStatus ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM OrderStatus_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'StoreMessages' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM StoreMessages ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM StoreMessages_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'TablePaySuggestion' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM TablePaySuggestion ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM TablePaySuggestion_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'Transactions' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Transactions ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM Transactions_Hist cah \n"
                           + " 			) fin \n"
                           + " 			UNION ALL \n"
                           + " 			SELECT 'TransferToPms' tblName, SUM(fin.nCnt) StartRecs, 0 EndRecs \n"
                           + " 			FROM ( \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM TransferToPms ca \n"
                           + " 				UNION ALL \n"
                           + " 				SELECT ISNULL(COUNT(*),0) nCnt \n"
                           + " 				FROM TransferToPms_Hist cah \n"
                           + " 			) fin \n"
                           + "		) res ON res.tblName = r.tblName \n"
                           + "		 \n"
                           + "		SET @OK = 1 \n"
                           + "		IF EXISTS(SELECT 1 FROM @ResTable WHERE StartRecs - EndRecs <> 0) \n"
                           + "		BEGIN  \n"
                           + "			SET @OK = 0 \n"
                           + "			SELECT * FROM @ResTable WHERE StartRecs - EndRecs <> 0 \n"
                           + "		END \n"
                           + "		 \n"
                           + "	END TRY \n"
                           + "	BEGIN CATCH \n"
                           + "		SET @OK = 0 \n"
                           + "		SELECT \n"
                           + "			ERROR_NUMBER() AS ErrorNumber, \n"
                           + "			ERROR_SEVERITY() AS ErrorSeverity, \n"
                           + "			ERROR_STATE() AS ErrorState, \n"
                           + "			ERROR_PROCEDURE() AS ErrorProcedure, \n"
                           + "			ERROR_LINE() AS ErrorLine, \n"
                           + "			ERROR_MESSAGE() AS ErrorMessage \n"
                           + "	END CATCH \n"
                           + "	 \n"
                           + "ExitCall: \n"
                           + "	BEGIN 	 \n"
                           + "		IF @OK = 1 \n"
                           + "		BEGIN \n"
                           + "			SELECT 0 ErrorNumber,0 ErrorSeverity,0 ErrorState,'OK' ErrorProcedure,0 ErrorLine,'Operation completed Succesfully' ErrorMessage \n"
                           + "		END \n"
                           + "		ELSE \n"
                           + "		BEGIN  \n"
                           + "			SET IDENTITY_INSERT dbo.StoreMessages ON \n"
                           + "			INSERT INTO StoreMessages(Id, [Message], CreationDate, Title, StoreId, ShowFrom, ShowTo, ImageUri, [Status]	) \n"
                           + "			SELECT Id, [Message], CreationDate, Title, StoreId, ShowFrom, ShowTo, ImageUri, [Status] \n"
                           + "			FROM StoreMessages_Hist smh \n"
                           + "			WHERE smh.Id IN (SELECT ID FROM @StoreMessages)  \n"
                           + "			SET IDENTITY_INSERT dbo.StoreMessages OFF \n"
                           + "			DELETE FROM StoreMessages_Hist   \n"
                           + "			WHERE id IN (SELECT ID FROM @StoreMessages) \n"
                           + " \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDay ON \n"
                           + "			INSERT INTO EndOfDay (Id, FODay, PosInfoId, CloseId, Gross, Net, TicketsCount, ItemCount, TicketAverage, StaffId, Discount, \n"
                           + "			    dtDateTime, Barcodes) \n"
                           + "			SELECT Id, FODay, PosInfoId, CloseId, Gross, Net, TicketsCount, ItemCount, TicketAverage, StaffId, Discount, \n"
                           + "			    dtDateTime, Barcodes \n"
                           + "			FROM EndOfDay_Hist eodh \n"
                           + "			WHERE eodh.Id IN (SELECT ID FROM @EndOfDay) \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDay OFF \n"
                           + "			DELETE FROM EndOfDay_Hist  \n"
                           + "			WHERE id IN (SELECT ID FROM @EndOfDay) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.Invoices ON \n"
                           + "			INSERT INTO Invoices(Id, [Description], InvoiceTypeId, [Counter], [Day], IsPrinted, GuestId, Total, Discount, Vat, Tax, Net, \n"
                           + "	            StaffId, Cover, TableId, PosInfoId, PdaModuleId, ClientPosId, EndOfDayId, PosInfoDetailId, IsVoided, IsDeleted,  \n"
                           + "	            DiscountRemark, PaymentsDesc, IsPaid, PaidTotal, Rooms, OrderNo, IsInvoiced, Hashcode, TableSum, CashAmount, BuzzerNumber) \n"
                           + "	        SELECT Id, [Description], InvoiceTypeId, [Counter], [Day], IsPrinted, GuestId, Total, Discount, Vat, Tax, Net, \n"
                           + "	            StaffId, Cover, TableId, PosInfoId, PdaModuleId, ClientPosId, EndOfDayId, PosInfoDetailId, IsVoided, IsDeleted,  \n"
                           + "	            DiscountRemark, PaymentsDesc, IsPaid, PaidTotal, Rooms, OrderNo, IsInvoiced, Hashcode, TableSum, CashAmount, BuzzerNumber \n"
                           + "	        FROM Invoices_Hist ih \n"
                           + "	        WHERE ih.Id IN (SELECT ID FROM @Invoices) \n"
                           + "			SET IDENTITY_INSERT dbo.Invoices OFF \n"
                           + "			DELETE FROM Invoices_Hist  \n"
                           + "			WHERE Id IN (SELECT ID FROM @Invoices) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.[Order] ON \n"
                           + "			INSERT INTO [Order](Id, OrderNo, [Day], Total, PosId, StaffId, EndOfDayId, Discount, ReceiptNo, TotalBeforeDiscount, \n"
                           + "				PdaModuleId, ClientPosId, IsDeleted, ExtType, ExtObj, ExtKey, OrderOrigin, Couver) \n"
                           + "			SELECT Id, OrderNo, [Day], Total, PosId, StaffId, EndOfDayId, Discount, ReceiptNo, TotalBeforeDiscount, \n"
                           + "				PdaModuleId, ClientPosId, IsDeleted, ExtType, ExtObj, ExtKey, OrderOrigin, Couver \n"
                           + "			FROM Order_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @Order)       \n"
                           + "			SET IDENTITY_INSERT dbo.[Order] OFF \n"
                           + "			DELETE FROM Order_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @Order) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.Transactions ON \n"
                           + "			INSERT INTO Transactions(Id, [Day], PosInfoId, StaffId, OrderId, TransactionType, Amount, DepartmentId, [Description], \n"
                           + "				AccountId, InOut, Gross, Net, Vat, Tax, EndOfDayId, ExtDescription, InvoicesId, IsDeleted) \n"
                           + "			SELECT Id, [Day], PosInfoId, StaffId, OrderId, TransactionType, Amount, DepartmentId, [Description], \n"
                           + "				AccountId, InOut, Gross, Net, Vat, Tax, EndOfDayId, ExtDescription, InvoicesId, IsDeleted \n"
                           + "			FROM Transactions_Hist th \n"
                           + "			WHERE id IN (SELECT ID FROM @Transactions) \n"
                           + "			SET IDENTITY_INSERT dbo.Transactions OFF \n"
                           + "			DELETE FROM Transactions_Hist \n"
                           + "			WHERE Id IN (SELECT ID FROM @Transactions) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.TransferToPms ON \n"
                           + "			INSERT INTO TransferToPms(Id, RegNo, PmsDepartmentId, [Description], ProfileId, ProfileName, TransactionId, TransferType, \n"
                           + "	            RoomId, RoomDescription, ReceiptNo, PosInfoDetailId, SendToPMS, Total, SendToPmsTS, ErrorMessage, PmsResponseId, \n"
                           + "	            TransferIdentifier, PmsDepartmentDescription, [Status], PosInfoId, EndOfDayId, HotelId, IsDeleted) \n"
                           + "	        SELECT Id, RegNo, PmsDepartmentId, [Description], ProfileId, ProfileName, TransactionId, TransferType, \n"
                           + "	            RoomId, RoomDescription, ReceiptNo, PosInfoDetailId, SendToPMS, Total, SendToPmsTS, ErrorMessage, PmsResponseId, \n"
                           + "	            TransferIdentifier, PmsDepartmentDescription, [Status], PosInfoId, EndOfDayId, HotelId, IsDeleted \n"
                           + "	        FROM TransferToPms_Hist ttph \n"
                           + "	        WHERE ttph.Id IN (SELECT ID FROM @TransferToPms) \n"
                           + "			SET IDENTITY_INSERT dbo.TransferToPms OFF \n"
                           + "			DELETE FROM TransferToPms_Hist \n"
                           + "			WHERE id IN (SELECT ID FROM @TransferToPms) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderStatus ON \n"
                           + "			INSERT INTO OrderStatus(Id, [Status], TimeChanged, OrderId, StaffId, ExtState) \n"
                           + "			SELECT Id, [Status], TimeChanged, OrderId, StaffId, ExtState \n"
                           + "			FROM OrderStatus_Hist osh \n"
                           + "			WHERE osh.Id IN (SELECT ID FROM @OrderStatus) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderStatus OFF \n"
                           + "			DELETE FROM OrderStatus_Hist \n"
                           + "			WHERE Id IN (SELECT ID FROM @OrderStatus) \n"
                           + "			 \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrdersStaff ON \n"
                           + "			INSERT INTO OrdersStaff(Id, StaffId, OrderId, [Type]) \n"
                           + "			SELECT Id, StaffId, OrderId, [Type] \n"
                           + "			FROM OrdersStaff_Hist osh \n"
                           + "			WHERE osh.Id IN (SELECT ID FROM @OrdersStaff) \n"
                           + "			SET IDENTITY_INSERT dbo.OrdersStaff OFF \n"
                           + "			DELETE FROM OrdersStaff_Hist \n"
                           + "			WHERE Id IN (SELECT ID FROM @OrdersStaff) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetail ON \n"
                           + "			INSERT INTO OrderDetail(Id, OrderId, ProductId, KitchenId, KdsId, PreparationTime, TableId, [Status], StatusTS, Price, \n"
                           + "				PriceListDetailId, Qty, SalesTypeId, Discount, PaidStatus, TransactionId, TotalAfterDiscount, GuestId, Couver, Guid, \n"
                           + "				IsDeleted, PendingQty) \n"
                           + "			SELECT Id, OrderId, ProductId, KitchenId, KdsId, PreparationTime, TableId, [Status], StatusTS, Price, \n"
                           + "				PriceListDetailId, Qty, SalesTypeId, Discount, PaidStatus, TransactionId, TotalAfterDiscount, GuestId, Couver, Guid, \n"
                           + "				IsDeleted, PendingQty \n"
                           + "			FROM OrderDetail_Hist odh \n"
                           + "			WHERE odh.Id IN (SELECT ID FROM @OrderDetail) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetail OFF \n"
                           + "			DELETE FROM OrderDetail_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetail)  \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailVatAnal ON \n"
                           + "			INSERT INTO OrderDetailVatAnal(Id, OrderDetailId, Gross, Net, VatRate, VatAmount, VatId, TaxId, TaxAmount, IsDeleted) \n"
                           + "			SELECT Id, OrderDetailId, Gross, Net, VatRate, VatAmount, VatId, TaxId, TaxAmount, IsDeleted \n"
                           + "			FROM OrderDetailVatAnal_Hist odvah \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailVatAnal) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailVatAnal OFF \n"
                           + "			DELETE FROM OrderDetailVatAnal_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailVatAnal) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailIgredients ON \n"
                           + "			INSERT INTO OrderDetailIgredients(Id, IngredientId, Qty, UnitId, Price, OrderDetailId, PriceListDetailId, Discount, \n"
                           + "				TotalAfterDiscount, IsDeleted) \n"
                           + "			SELECT Id, IngredientId, Qty, UnitId, Price, OrderDetailId, PriceListDetailId, Discount, \n"
                           + "				TotalAfterDiscount, IsDeleted \n"
                           + "			FROM OrderDetailIgredients_Hist odih \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailIgredients) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailIgredients OFF \n"
                           + "			DELETE FROM OrderDetailIgredients_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailIgredients) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailIgredientVatAnal ON \n"
                           + "			INSERT INTO OrderDetailIgredientVatAnal(Id, OrderDetailIgredientsId, Gross, Net, VatRate, VatAmount, VatId, TaxId, TaxAmount, IsDeleted) \n"
                           + "			SELECT Id, OrderDetailIgredientsId, Gross, Net, VatRate, VatAmount, VatId, TaxId, TaxAmount, IsDeleted \n"
                           + "			FROM OrderDetailIgredientVatAnal_Hist odivah \n"
                           + "			WHERE id IN (SELECT ID FROM @OrderDetailIgredientVatAnal) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailIgredientVatAnal OFF \n"
                           + "			DELETE FROM OrderDetailIgredientVatAnal_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailIgredientVatAnal) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailInvoices ON \n"
                           + "			INSERT INTO OrderDetailInvoices(Id, OrderDetailId, StaffId, PosInfoDetailId, [Counter], CreationTS, IsPrinted, \n"
                           + "	            CustomerId, InvoicesId, IsDeleted, OrderDetailIgredientsId, Price, Discount, Net, VatRate, VatAmount, VatId, TaxId, \n"
                           + "	            VatCode, TaxAmount, Qty, Total, PricelistId, ProductId, [Description], ItemCode, ItemRemark, InvoiceType, TableId, \n"
                           + "	            TableCode, RegionId, OrderNo, OrderId, IsExtra, PosInfoId, EndOfDayId, Abbreviation, DiscountId, SalesTypeId, \n"
                           + "	            ProductCategoryId, CategoryId, ItemPosition, ItemSort, ItemRegion, RegionPosition, ItemBarcode, \n"
                           + "	            TotalBeforeDiscount, TotalAfterDiscount, ReceiptSplitedDiscount) \n"
                           + "	        SELECT Id, OrderDetailId, StaffId, PosInfoDetailId, [Counter], CreationTS, IsPrinted, \n"
                           + "	            CustomerId, InvoicesId, IsDeleted, OrderDetailIgredientsId, Price, Discount, Net, VatRate, VatAmount, VatId, TaxId, \n"
                           + "	            VatCode, TaxAmount, Qty, Total, PricelistId, ProductId, [Description], ItemCode, ItemRemark, InvoiceType, TableId, \n"
                           + "	            TableCode, RegionId, OrderNo, OrderId, IsExtra, PosInfoId, EndOfDayId, Abbreviation, DiscountId, SalesTypeId, \n"
                           + "	            ProductCategoryId, CategoryId, ItemPosition, ItemSort, ItemRegion, RegionPosition, ItemBarcode, \n"
                           + "	            TotalBeforeDiscount, TotalAfterDiscount, ReceiptSplitedDiscount \n"
                           + "	        FROM OrderDetailInvoices_Hist odih \n"
                           + "	        WHERE ID IN (SELECT ID FROM @OrderDetailInvoices) \n"
                           + "			SET IDENTITY_INSERT dbo.OrderDetailInvoices OFF \n"
                           + "			DELETE FROM OrderDetailInvoices_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @OrderDetailInvoices) \n"
                           + "			 \n"
                           + "			 \n"
                           + "			INSERT INTO OnlineRegistration(BarCode, FirtName, LastName, Mobile, Dates, Children, Adults, PaymentType, ChildTicket, \n"
                           + "	            AdultTicket, RegistrationDate, TotalChildren, TotalAdults, ChildrenEntered, AdultsEntered, TotalAmount, \n"
                           + "	            RemainingAmount, [Status]) \n"
                           + "	        SELECT BarCode, FirtName, LastName, Mobile, Dates, Children, Adults, PaymentType, ChildTicket, \n"
                           + "	            AdultTicket, RegistrationDate, TotalChildren, TotalAdults, ChildrenEntered, AdultsEntered, TotalAmount, \n"
                           + "	            RemainingAmount, [Status] \n"
                           + "	        FROM OnlineRegistration_Hist orh \n"
                           + "	        WHERE orh.BarCode IN (SELECT BarCode FROM @OnlineRegistration) \n"
                           + "	        DELETE FROM OnlineRegistration_Hist \n"
                           + "	        WHERE BarCode IN (SELECT BarCode FROM @OnlineRegistration) \n"
                           + "	         \n"
                           + "	        SET IDENTITY_INSERT dbo.MealConsumption ON \n"
                           + "	        INSERT INTO MealConsumption(Id, GuestId, ConsumedMeals, ConsumedTS, IsDeleted, BoardCode, ReservationId, ConsumedMealsChild, \n"
                           + "	                    DepartmentId, EndOfDayId, PosInfoId) \n"
                           + "	        SELECT Id, GuestId, ConsumedMeals, ConsumedTS, IsDeleted, BoardCode, ReservationId, ConsumedMealsChild, \n"
                           + "	                    DepartmentId, EndOfDayId, PosInfoId \n"
                           + "	        FROM MealConsumption_Hist mch \n"
                           + "	        WHERE mch.Id IN (SELECT ID FROM @MealConsumption) \n"
                           + "	        SET IDENTITY_INSERT dbo.MealConsumption OFF \n"
                           + "	        DELETE FROM MealConsumption_Hist \n"
                           + "	        WHERE ID IN (SELECT ID FROM @MealConsumption) \n"
                           + "	         \n"
                           + "			SET IDENTITY_INSERT dbo.Loyalty ON \n"
                           + "			INSERT INTO Loyalty([Day], LoyalltyId, CouponCode, GiftcardCode, CouponType, Campaign, Channel, InvoicesId, Id, \n"
                           + "				ErrorDescription, GiftCardCouponType, GiftCardCampaign) \n"
                           + "			SELECT [Day], LoyalltyId, CouponCode, GiftcardCode, CouponType, Campaign, Channel, InvoicesId, Id, \n"
                           + "				ErrorDescription, GiftCardCouponType, GiftCardCampaign \n"
                           + "			FROM Loyalty_Hist lh \n"
                           + "			WHERE ID IN (SELECT ID FROM @Loyalty) \n"
                           + "			SET IDENTITY_INSERT dbo.Loyalty OFF \n"
                           + "			DELETE FROM Loyalty_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @Loyalty) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.Lockers ON \n"
                           + "			INSERT INTO Lockers(Id, HasLockers, TotalLockers, TotalLockersAmount, Paidlockers, PaidlockersAmount, OccLockers, OccLockersAmount, EndOfDayId) \n"
                           + "			SELECT Id, HasLockers, TotalLockers, TotalLockersAmount, Paidlockers, PaidlockersAmount, OccLockers, OccLockersAmount, EndOfDayId \n"
                           + "			FROM Lockers_Hist lh \n"
                           + "			WHERE ID IN (SELECT ID FROM @Lockers) \n"
                           + "			SET IDENTITY_INSERT dbo.Lockers OFF \n"
                           + "			DELETE FROM Lockers_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @Lockers) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.KitchenInstructionLogger ON \n"
                           + "			INSERT INTO KitchenInstructionLogger(Id, KicthcenInstuctionId, StaffId, PdaModulId, ClientId, PosInfoId, SendTS, ReceivedTS, \n"
                           + "				EndOfDayId, [Status], TableId, ExtecrName, [Description]) \n"
                           + "			SELECT Id, KicthcenInstuctionId, StaffId, PdaModulId, ClientId, PosInfoId, SendTS, ReceivedTS, \n"
                           + "				EndOfDayId, [Status], TableId, ExtecrName, [Description] \n"
                           + "			FROM KitchenInstructionLogger_Hist kilh \n"
                           + "			WHERE ID IN (SELECT ID FROM @KitchenInstructionLogger) \n"
                           + "			SET IDENTITY_INSERT dbo.KitchenInstructionLogger OFF \n"
                           + "			DELETE FROM KitchenInstructionLogger_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @KitchenInstructionLogger) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.InvoiceShippingDetails ON \n"
                           + "			INSERT INTO InvoiceShippingDetails(Id, InvoicesId, ShippingAddressId, ShippingAddress, ShippingCity, ShippingZipCode, \n"
                           + "	            BillingAddressId, BillingAddress, BillingCity, BillingZipCode, [Floor], CustomerRemarks, StoreRemarks, \n"
                           + "	            CustomerName, Longtitude, Latitude, Phone) \n"
                           + "	        SELECT Id, InvoicesId, ShippingAddressId, ShippingAddress, ShippingCity, ShippingZipCode, \n"
                           + "	            BillingAddressId, BillingAddress, BillingCity, BillingZipCode, [Floor], CustomerRemarks, StoreRemarks, \n"
                           + "	            CustomerName, Longtitude, Latitude, Phone \n"
                           + "	        FROM InvoiceShippingDetails_Hist isdh \n"
                           + "	        WHERE ID IN (SELECT ID FROM @InvoiceShippingDetails) \n"
                           + "			SET IDENTITY_INSERT dbo.InvoiceShippingDetails OFF \n"
                           + "			DELETE FROM InvoiceShippingDetails_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @InvoiceShippingDetails) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.Invoice_Guests_Trans ON \n"
                           + "			INSERT INTO Invoice_Guests_Trans(Id, InvoiceId, GuestId, TransactionId) \n"
                           + "			SELECT Id, InvoiceId, GuestId, TransactionId \n"
                           + "			FROM Invoice_Guests_Trans_Hist igth \n"
                           + "			WHERE ID IN (SELECT ID FROM @Invoice_Guests_Trans) \n"
                           + "			SET IDENTITY_INSERT dbo.Invoice_Guests_Trans OFF \n"
                           + "			DELETE FROM Invoice_Guests_Trans_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @Invoice_Guests_Trans) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.HitPosOrders ON \n"
                           + "			INSERT INTO HitPosOrders(CurId, id, orderno, pos, shop_id, item_group, item_code, item_descr, item_subgroup, item_vat, cont_line, \n"
                           + "	            sp, prep_time, start_time, load_time, otd, qty, amount, total, waiter, ttable, listino, receipt, member, priority, \n"
                           + "	            kdws, ready, rqty, nieko_flag, [status], status_time, rest_time, room, payment, [type], comments, mqty, \n"
                           + "	            rec_time_start, status_time2, status_time3, status_time4, status_time5, fo_day, delivery_time, agent, flag_up, \n"
                           + "	            [sent], correct, completed, CreationDate) \n"
                           + "	        SELECT CurId, id, orderno, pos, shop_id, item_group, item_code, item_descr, item_subgroup, item_vat, cont_line, \n"
                           + "	            sp, prep_time, start_time, load_time, otd, qty, amount, total, waiter, ttable, listino, receipt, member, priority, \n"
                           + "	            kdws, ready, rqty, nieko_flag, [status], status_time, rest_time, room, payment, [type], comments, mqty, \n"
                           + "	            rec_time_start, status_time2, status_time3, status_time4, status_time5, fo_day, delivery_time, agent, flag_up, \n"
                           + "	            [sent], correct, completed, CreationDate \n"
                           + "	        FROM HitPosOrders_Hist hpoh \n"
                           + "	        WHERE hpoh.CurId IN (SELECT ID FROM @HitPosOrders) \n"
                           + "			SET IDENTITY_INSERT dbo.HitPosOrders OFF \n"
                           + "			DELETE FROM HitPosOrders_Hist \n"
                           + "			WHERE CurId IN (SELECT ID FROM @HitPosOrders) \n"
                           + "			 \n"
                           + "			 \n"
                           + "			INSERT INTO ExternalLostOrders(OrderNo, ExtType) \n"
                           + "			SELECT OrderNo, ExtType \n"
                           + "			FROM ExternalLostOrders_Hist eloh \n"
                           + "			WHERE CAST(eloh.OrderNo AS VARCHAR(255))+'-'+CAST(eloh.ExtType AS VARCHAR(20)) IN  \n"
                           + "				(SELECT CAST(OrderNo AS VARCHAR(255))+'-'+CAST(ExtType AS VARCHAR(20)) FROM @ExternalLostOrders) \n"
                           + "			DELETE FROM ExternalLostOrders_Hist \n"
                           + "			WHERE CAST(OrderNo AS VARCHAR(255))+'-'+CAST(ExtType AS VARCHAR(20)) IN  \n"
                           + "				(SELECT CAST(OrderNo AS VARCHAR(255))+'-'+CAST(ExtType AS VARCHAR(20)) FROM @ExternalLostOrders) \n"
                           + "			 \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.EODAccountToPmsTransfer ON \n"
                           + "			INSERT INTO EODAccountToPmsTransfer(Id, PosInfoId, AccountId, PmsRoom, [Description], [Status], PmsDepartmentId, PmsDepDescription) \n"
                           + "			SELECT Id, PosInfoId, AccountId, PmsRoom, [Description], [Status], PmsDepartmentId, PmsDepDescription \n"
                           + "			FROM EODAccountToPmsTransfer_Hist etpth \n"
                           + "			WHERE ID IN (SELECT ID FROM @EODAccountToPmsTransfer) \n"
                           + "			SET IDENTITY_INSERT dbo.EODAccountToPmsTransfer OFF \n"
                           + "			DELETE FROM EODAccountToPmsTransfer_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @EODAccountToPmsTransfer) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayVoidsAnalysis ON \n"
                           + "			INSERT INTO EndOfDayVoidsAnalysis(Id, EndOfDayId, AccountId, Total, [Description], AccountType) \n"
                           + "			SELECT Id, EndOfDayId, AccountId, Total, [Description], AccountType \n"
                           + "			FROM EndOfDayVoidsAnalysis_Hist eodvah \n"
                           + "			WHERE id IN (SELECT ID FROM @EndOfDayVoidsAnalysis) \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayVoidsAnalysis OFF \n"
                           + "			DELETE FROM EndOfDayVoidsAnalysis_Hist \n"
                           + "			WHERE id IN (SELECT ID FROM @EndOfDayVoidsAnalysis) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayPaymentAnalysis ON \n"
                           + "			INSERT INTO EndOfDayPaymentAnalysis(Id, EndOfDayId, AccountId, Total, [Description], AccountType) \n"
                           + "			SELECT Id, EndOfDayId, AccountId, Total, [Description], AccountType \n"
                           + "			FROM EndOfDayPaymentAnalysis_Hist eodpah \n"
                           + "			WHERE ID IN (SELECT ID FROM @EndOfDayPaymentAnalysis) \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayPaymentAnalysis OFF \n"
                           + "			DELETE FROM EndOfDayPaymentAnalysis_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @EndOfDayPaymentAnalysis) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayDetail ON \n"
                           + "			INSERT INTO EndOfDayDetail(Id, EndOfdayId, VatId, VatRate, VatAmount, TaxId, TaxAmount, Gross, Net, Discount) \n"
                           + "			SELECT Id, EndOfdayId, VatId, VatRate, VatAmount, TaxId, TaxAmount, Gross, Net, Discount \n"
                           + "			FROM EndOfDayDetail_Hist eoddh \n"
                           + "			WHERE ID IN (SELECT ID FROM @EndOfDayDetail) \n"
                           + "			SET IDENTITY_INSERT dbo.EndOfDayDetail OFF \n"
                           + "			DELETE FROM EndOfDayDetail_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @EndOfDayDetail) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.CreditAccounts ON \n"
                           + "			INSERT INTO CreditAccounts(Id, [Description], EndOfDayId, ActivateTS, DeactivateTS) \n"
                           + "			SELECT Id, [Description], EndOfDayId, ActivateTS, DeactivateTS \n"
                           + "			FROM CreditAccounts_Hist cah \n"
                           + "			WHERE ID IN (SELECT ID FROM @CreditAccounts) \n"
                           + "			SET IDENTITY_INSERT dbo.CreditAccounts OFF \n"
                           + "			DELETE FROM CreditAccounts_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @CreditAccounts) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.CreditCodes ON \n"
                           + "			INSERT INTO CreditCodes (Id, [Description], Code, [Type], CreditAccountId) \n"
                           + "			SELECT Id, [Description], Code, [Type], CreditAccountId \n"
                           + "			FROM CreditCodes_Hist cch \n"
                           + "			WHERE ID IN (SELECT ID FROM @CreditCodes)  \n"
                           + "			SET IDENTITY_INSERT dbo.CreditCodes OFF \n"
                           + "			DELETE FROM CreditCodes_Hist \n"
                           + "			WHERE ID IN (SELECT ID FROM @CreditCodes)  \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.TablePaySuggestion ON \n"
                           + "			INSERT INTO TablePaySuggestion(Id, AccountId, GuestId, Amount, OrderDetailId, IsUsed, CreditCodeId) \n"
                           + "			SELECT Id, AccountId, GuestId, Amount, OrderDetailId, IsUsed, CreditCodeId \n"
                           + "			FROM TablePaySuggestion_Hist tpsh \n"
                           + "			WHERE ID IN (SELECT Id FROM @TablePaySuggestion) \n"
                           + "			SET IDENTITY_INSERT dbo.TablePaySuggestion OFF \n"
                           + "			DELETE FROM TablePaySuggestion_Hist \n"
                           + "			WHERE ID IN (SELECT Id FROM @TablePaySuggestion) \n"
                           + "			 \n"
                           + "			SET IDENTITY_INSERT dbo.CreditTransactions ON \n"
                           + "			INSERT INTO CreditTransactions(Id, CreditAccountId, CreditCodeId, Amount, CreationTS, [Type], StaffId, [Description], \n"
                           + "				PosInfoId, EndOfDayId, InvoiceId, TransactionId) \n"
                           + "			SELECT Id, CreditAccountId, CreditCodeId, Amount, CreationTS, [Type], StaffId, [Description], \n"
                           + "				PosInfoId, EndOfDayId, InvoiceId, TransactionId \n"
                           + "			FROM CreditTransactions_Hist cth \n"
                           + "			WHERE Id IN (SELECT ID FROM @CreditTransactions) \n"
                           + "			SET IDENTITY_INSERT dbo.CreditTransactions OFF \n"
                           + "			DELETE FROM CreditTransactions_Hist \n"
                           + "			WHERE Id IN (SELECT ID FROM @CreditTransactions) \n"
                           + "			 \n"
                           + "			SELECT 10000 ErrorNumber,0 ErrorSeverity,0 ErrorState,'Error' ErrorProcedure,0 ErrorLine,'Operation completed with errors' ErrorMessage \n"
                           + "		END \n"
                           + "	END \n"
                           + " \n"
                           + "END");
            Ver_2_0_0_3.Add("CREATE PROCEDURE dbo.ReIndexAndShrink AS  \n"
                           + "BEGIN \n"
                           + "	BEGIN TRY \n"
                           + "		DECLARE @tables TABLE (ID INT IDENTITY(1,1), tblName VARCHAR(255)) \n"
                           + "		DECLARE @idx INT, @totRec INT, @tblName VARCHAR(255), @logFile VARCHAR(MAX), @DBName VARCHAR(MAX) \n"
                           + " \n"
                           + "		INSERT INTO @tables \n"
                           + "		SELECT table_name  \n"
                           + "		FROM INFORMATION_SCHEMA.TABLES  \n"
                           + "		WHERE table_type = 'BASE TABLE'  \n"
                           + " \n"
                           + "		SELECT @idx = MIN(ID), @totRec = MAX(ID) FROM @tables \n"
                           + "		WHILE @idx <= @totRec \n"
                           + "		BEGIN \n"
                           + "			SELECT @tblName = tblName FROM @tables WHERE ID = @idx \n"
                           + "			DBCC DBREINDEX(@tblName,'',90) \n"
                           + "			SET @idx = @idx + 1 \n"
                           + "		END	 \n"
                           + "				 \n"
                           + "		SELECT @DBName = db.name  \n"
                           + "		FROM sys.master_files mf \n"
                           + "		INNER JOIN  sys.databases db ON db.database_id = mf.database_id \n"
                           + "		INNER JOIN sys.database_files df ON CAST(df.Physical_Name AS VARCHAR(MAX)) COLLATE DATABASE_DEFAULT = CAST(mf.Physical_Name AS VARCHAR(MAX)) COLLATE DATABASE_DEFAULT AND df.type = 1 \n"
                           + " \n"
                           + "		EXEC('ALTER DATABASE '+@DBName+' SET RECOVERY SIMPLE') \n"
                           + " \n"
                           + "		EXEC('DBCC SHRINKFILE ('''+@logFile+''', 10)') \n"
                           + " \n"
                           + "		EXEC('ALTER DATABASE '+@DBName+' SET RECOVERY FULL') \n"
                           + "		 \n"
                           + "		SELECT 0 ErrorNumber,0 ErrorSeverity,0 ErrorState,'OK' ErrorProcedure,0 ErrorLine,'Operation completed Succesfully' ErrorMessage  \n"
                           + "	END TRY \n"
                           + "	BEGIN CATCH \n"
                           + "		SELECT 0 ErrorNumber,0 ErrorSeverity,0 ErrorState,'OK' ErrorProcedure,0 ErrorLine,'Operation completed Succesfully' ErrorMessage \n"
                           + "	END CATCH \n"
                           + "END");
        }
    }
}
