using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Symposium_DTOs.PosModel_Info
{
    [DisplayName("Ver : 2.0.0.15")]
    public class Version_2_0_0_15
    {
        public List<string> Ver_2_0_0_15 { get; }

        public Version_2_0_0_15()
        {
            Ver_2_0_0_15 = new List<string>();
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT01_InvoiceHeader') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT01_InvoiceHeader] AS \n"
                           + "		SELECT i.Id InvoiceId \n"
                           + "			, i.TableSum TableTotal \n"
                           + "			, 0 PaymentTypeId \n"
                           + "			, ''false'' PrintKitchen \n"
                           + "			, ISNULL(pid.[Description] \n"
                           + "			, it.[Description]) ReceiptTypeDescription \n"
                           + "			, d.[Description] DepartmentTypeDescription \n"
                           + "			, NULL PaidAmount \n"
                           + "			, st.[Description] SalesTypeDescription \n"
                           + "			, NULL ItemsCount \n"
                           + "			, ISNULL(o.Couver,0) Couver \n"
                           + "			, NULL PrintFiscalSign \n"
                           + "			, 0 FiscalType \n"
                           + "			, NULL DetailsId \n"
                           + "			, pid.InvoiceId InvoiceIndex \n"
                           + "			, i.OrderNo OrderId \n"
                           + "			, ISNULL(t.Code,'''') TableNo \n"
                           + "			, ISNULL(trTop.Room,'''') Room \n"
                           + "			, ISNULL(s.LastName,'''') Waiter \n"
                           + "			, ISNULL(s.Code,'''') WaiterNo \n"
                           + "			, i.PosInfoId Pos \n"
                           + "			, ISNULL(pif.[Description],'''') PosDescr \n"
                           + "			, d.[Description] DepartmentDesc \n"
                           + "			, pif.DepartmentId Department \n"
                           + "			, ISNULL(a.AccountDescription, ISNULL(i.PaymentsDesc,'''')) AccountDescription \n"
                           + "			, CASE WHEN ISNULL(isd.CustomerName,'''') <> '''' THEN isd.CustomerName \n"
                           + "					WHEN ISNULL(trTop.GuestName,'''') <> '''' THEN trTop.GuestName \n"
                           + "					ELSE ''Πελάτης Λιανικής'' END CustomerName \n"
                           + "			, ISNULL(isd.BillingAddress,'''') CustomerAddress \n"
                           + "			, ISNULL(isd.ShippingAddress,'''') CustomerDeliveryAddress \n"
                           + "			, ISNULL(isd.Phone,'''') CustomerPhone \n"
                           + "			, ISNULL(isd.[Floor],'''') [Floor] \n"
                           + "			, ISNULL(isd.BillingCity,'''') City \n"
                           + "			, ISNULL(isd.CustomerRemarks,'''') CustomerComments \n"
                           + "			, ISNULL(isd.BillingVatNo,'''') CustomerAfm \n"
                           + "			, ISNULL(isd.BillingDOY,'''') CustomerDoy \n"
                           + "			, ISNULL(isd.BillingJob,'''') CustomerJob \n"
                           + "			, ISNULL(isd.BillingName,'''') CompanyName \n"
                           + "			, NULL RegNo \n"
                           + "			, NULL SumOfLunches \n"
                           + "			, NULL SumofConsumedLunches \n"
                           + "			, ISNULL(trTop.BoardCode,'''') GuestTerm \n"
                           + "			, ISNULL(trTop.Adults,0) Adults \n"
                           + "			, ISNULL(trTop.Children,0) Kids \n"
                           + "			, it.[Type] InvoiceType \n"
                           + "			, 0 TotalVat \n"
                           + "			, 0 TotalVat1 \n"
                           + "			, 0 TotalVat2 \n"
                           + "			, 0 TotalVat3 \n"
                           + "			, 0 TotalVat4 \n"
                           + "			, 0 TotalVat5 \n"
                           + "			, CASE WHEN i.Discount <> 0 THEN i.Discount ELSE ISNULL(odi.Discount,0) END TotalDiscount \n"
                           + "			, 0 Bonus \n"
                           + "			, 0 PriceList \n"
                           + "			, i.[Counter] ReceiptNo \n"
                           + "			, i.OrderNo OrderNo \n"
                           + "			, NULL OrderComments \n"
                           + "			, ISNULL(i.Net,0) TotalNet \n"
                           + "			, ISNULL(i.Total,0) Total \n"
                           + "			, NULL Change \n"
                           + "			, ISNULL(i.CashAmount,0) CashAmount \n"
                           + "			, ISNULL(i.BuzzerNumber,'''') BuzzerNumber \n"
                           + "			, i.IsVoided IsVoid \n"
                           + "			, NULL CreditTransactions \n"
                           + "			, hpo.start_time \n"
                           + "			, hpo.Payment \n"
                           + "	FROM Invoices i \n"
                           + "		INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId \n"
                           + "		LEFT OUTER JOIN PosInfoDetail pid ON pid.Id = i.PosInfoDetailId \n"
                           + "		OUTER APPLY ( \n"
                           + "					SELECT SUM(o.Couver) Couver, o.ExtKey \n"
                           + "					FROM [Order] o    \n"
                           + "					WHERE o.OrderNo = i.OrderNo \n"
                           + "					GROUP BY o.ExtKey \n"
                           + "					) o \n"
                           + "		OUTER APPLY ( \n"
                           + "					SELECT MAX(hpo.status_time) start_time, MAX(hpo.Payment) Payment, MAX(hpo.room) room \n"
                           + "					FROM HitPosOrders hpo \n"
                           + "					WHERE hpo.orderno = CAST(LTRIM(RTRIM(o.ExtKey)) AS INT) \n"
                           + "					) hpo \n"
                           + "		OUTER APPLY ( \n"
                           + "					select top 1 * \n"
                           + "					from HitPosCustomers hpc \n"
                           + "					where hpc.customerid = hpo.room \n"
                           + "					) hpc \n"
                           + "		INNER JOIN PosInfo pif ON pif.Id = i.PosInfoId \n"
                           + "		INNER JOIN Department d ON d.Id = pif.DepartmentId \n"
                           + "		OUTER APPLY (  \n"
                           + "					SELECT odi.SalesTypeId, SUM(odi.Discount) Discount, SUM(odi.Net) Net, SUM(odi.Total) Total  \n"
                           + "					FROM OrderDetailInvoices odi  \n"
                           + "					WHERE odi.InvoicesId = i.Id \n"
                           + "					GROUP BY odi.SalesTypeId \n"
                           + "					) odi \n"
                           + "		OUTER APPLY ( \n"
                           + "					SELECT TOP 1 * \n"
                           + "					FROM SalesType st WHERE st.Id = odi.SalesTypeId    \n"
                           + "					) st \n"
                           + "         \n"
                           + "		LEFT OUTER JOIN [Table] t ON t.Id = i.TableId \n"
                           + "		OUTER APPLY ( \n"
                           + "					SELECT TOP 1 ISNULL(g.Room,'''') Room \n"
                           + "								, tr.AccountId \n"
                           + "								, ISNULL(g.FirstName,'''') + '' '' + ISNULL(g.LastName,'''') GuestName \n"
                           + "								, g.Id GuestId \n"
                           + "								, g.BoardCode \n"
                           + "								, g.Adults \n"
                           + "								, g.Children \n"
                           + "					FROM Transactions tr \n"
                           + "							LEFT OUTER JOIN Invoice_Guests_Trans igt ON igt.TransactionId = tr.Id \n"
                           + "							LEFT OUTER JOIN Guest g ON g.Id = igt.GuestId \n"
                           + "					WHERE tr.InvoicesId = i.Id    \n"
                           + "					) trTop \n"
                           + "		INNER JOIN Staff s ON s.Id = i.StaffId \n"
                           + "		OUTER APPLY ( \n"
                           + "					SELECT TOP 1 a.[Description] AccountDescription \n"
                           + "					FROM Accounts a    \n"
                           + "					WHERE a.Id = trTop.AccountId \n"
                           + "					) a \n"
                           + "		LEFT OUTER JOIN InvoiceShippingDetails isd ON isd.InvoicesId = i.Id' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT02_InvoiceProducts') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT02_InvoiceProducts] AS  \n"
                           + "   SELECT odi.ProductId, odi.IsExtra, i.Id InvoiceId, i.[Day] [Date], i.[Counter] InvoiceNo,  \n"
                           + "      CASE WHEN odi.Total < 0 AND it.[Type] NOT IN (8,3) THEN ''true'' ELSE ''false'' END IsChangeItem,  \n"
                           + "      odi.ItemCode ItemCode, odi.ItemRemark ItemRemark,  \n"
                           + "      CASE WHEN odi.Total < 0 AND it.[Type] NOT IN (8,3) THEN '' ''+ISNULL(odi.[Description],'''') ELSE odi.[Description] END ItemDescr, \n"
                           + "      odi.Discount ItemDiscount, CASE WHEN ISNULL(odi.TotalBeforeDiscount,0) = 0 THEN odi.Total ELSE odi.TotalBeforeDiscount END ItemGross, \n"
                           + "      odi.Net ItemNet, odi.Price ItemPrice, odi.Qty ItemQty, odi.Total ItemTotal, odi.VatRate ItemVatDesc, odi.VatCode ItemVatRate, \n"
                           + "      odi.VatAmount ItemVatValue, ISNULL(st.[Description],'''') SalesTypeExtDesc, ISNULL(k.Code,'''') KitchenId, i.[Day] [Time], \n"
                           + "      odi.RegionPosition RegionPosition, odi.ItemRegion ItemRegion, odi.ItemSort ItemSort, odi.ItemPosition ItemPosition, odi.ItemBarcode ItemBarcode, \n"
                           + "      od.Id OrderDetailId \n"
                           + "   FROM Invoices i \n"
                           + "   INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId \n"
                           + "   INNER JOIN OrderDetailInvoices odi ON odi.InvoicesId = i.Id \n"
                           + "   INNER JOIN OrderDetail od ON od.Id = odi.OrderDetailId \n"
                           + "   LEFT OUTER JOIN SalesType st ON st.Id = odi.SalesTypeId \n"
                           + "   LEFT OUTER JOIN Kitchen k ON k.Id = od.KitchenId \n"
                           + "   WHERE odi.IsExtra = 0' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT03_InvoiceExtras') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT03_InvoiceExtras] AS     \n"
                           + "   SELECT mPr.ProductId, odi.InvoicesId, ''false'' IsChangeItem, odi.ItemCode, odi.[Description] ItemDescr, odi.Discount ItemDiscount, odi.Total ItemGross, \n"
                           + "      odi.Net ItemNet, odi.Price ItemPrice, odi.Qty ItemQty, odi.VatRate ItemVatDesc, odi.VatCode ItemVatRate, odi.VatAmount ItemVatValue, \n"
                           + "      odi.OrderDetailId  \n"
                           + "   FROM OrderDetailInvoices odi  \n"
                           + "   CROSS APPLY ( \n"
                           + "      SELECT TOP 1 od.ProductId, od.ItemCode \n"
                           + "      FROM OrderDetailInvoices od \n"
                           + "      WHERE od.IsExtra = 0 AND od.OrderDetailId = odi.OrderDetailId \n"
                           + "   )mPr \n"
                           + "   WHERE odi.IsExtra = 1' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT04_InvoicePayments') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT04_InvoicePayments] AS \n"
                           + "   SELECT t.InvoicesId, t.Id TransactionId, a.[Type] AccountType, t.Amount Amount, a.[Description] [Description], igt.GuestId \n"
                           + "   FROM Transactions t \n"
                           + "   LEFT OUTER JOIN Accounts a ON a.Id = t.AccountId \n"
                           + "   LEFT OUTER JOIN Invoice_Guests_Trans igt ON igt.TransactionId = t.Id' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT05_InvoicePaymentsGuest') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT05_InvoicePaymentsGuest] AS  \n"
                           + "   SELECT a.* \n"
                           + "   FROM ( \n"
                           + "      SELECT t.InvoicesId, t.Id TransactionId, g.FirstName, g.LastName, g.Room, g.BoardCode GuestTerm, g.Children Kids, g.Adults Adults \n"
                           + "      FROM Transactions t \n"
                           + "      INNER JOIN Invoice_Guests_Trans igt ON igt.TransactionId = t.Id \n"
                           + "      INNER JOIN Guest g ON g.Id = igt.GuestId \n"
                           + "      UNION ALL \n"
                           + "      SELECT isd.InvoicesId, NULL TransactionId, '''' FirstName, isd.CustomerName LastName, '''' Room, '''' GuestTerm, 0 Kids, 1 Adults   \n"
                           + "      FROM InvoiceShippingDetails isd \n"
                           + "   ) a' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT06_InvoiceRelatedReceipts') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT06_InvoiceRelatedReceipts] AS \n"
                           + "   SELECT i.Id InvoiceId, it.Abbreviation+CAST( ord.ReceiptNo AS VARCHAR(20)) RelatedReceipts \n"
                           + "   FROM Invoices i \n"
                           + "   INNER JOIN InvoiceTypes it ON it.[Type] = i.InvoiceTypeId \n"
                           + "   CROSS APPLY ( \n"
                           + "      SELECT o.ReceiptNo \n"
                           + "      FROM [Order] o \n"
                           + "      WHERE o.Id IN ( \n"
                           + "         SELECT od.OrderId \n"
                           + "         FROM OrderDetail od \n"
                           + "         WHERE od.Id IN ( \n"
                           + "            SELECT odi.OrderDetailId \n"
                           + "            FROM OrderDetailInvoices odi \n"
                           + "            WHERE odi.InvoicesId = i.Id    \n"
                           + "         )    \n"
                           + "      )    \n"
                           + "   ) ord' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT07_InvoiceSalesTypes') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT07_InvoiceSalesTypes] AS  \n"
                           + "   SELECT DISTINCT odi.InvoicesId, st.[Description] \n"
                           + "   FROM OrderDetailInvoices odi \n"
                           + "   INNER JOIN SalesType st ON st.Id = odi.SalesTypeId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT08_InvoiceRemarks') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT08_InvoiceRemarks] AS \n"
                           + "   SELECT isd.InvoicesId, isd.CustomerRemarks \n"
                           + "   FROM InvoiceShippingDetails isd \n"
                           + "   WHERE LTRIM(RTRIM(ISNULL(isd.CustomerRemarks,''''))) <> ''''' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT09_PrintZ_X_Master') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT09_PrintZ_X_Master] AS \n"
                           + "	SELECT CONVERT(VARCHAR(10), GETDATE(),120) [Day], \n"
                           + "		GETDATE() dtDateTime, pif.Code PosCode, pif.[Description] PosDescription, eod.CloseId ReportNo, \n"
                           + "		SUM(i.Total) Gross, SUM(i.Vat) VatAmount, SUM(i.Net) Net, SUM(i.Discount) Discount,  \n"
                           + "		COUNT(i.Id) TicketCount, od.ItemCount ItemsCount, SUM(br.Barcodes) Barcodes,  \n"
                           + "		i.EndOfDayId EndOfDayId, i.PosInfoId \n"
                           + "	FROM Invoices i \n"
                           + "	LEFT OUTER JOIN EndOfDay eod ON ISNULL(eod.Id,0) = ISNULL(i.EndOfDayId,0) \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "	INNER JOIN PosInfo pif ON pif.Id = i.PosInfoId \n"
                           + "	OUTER APPLY( \n"
                           + "		SELECT COUNT(odi.Id) ItemCount \n"
                           + "		FROM OrderDetailInvoices odi \n"
                           + "		WHERE ISNULL(odi.EndOfDayId,0) = 0 AND odi.InvoiceType NOT IN (2,3,8) AND odi.PosInfoId = i.PosInfoId AND \n"
                           + "			ISNULL(odi.IsDeleted,0) = 0 AND ISNULL(odi.IsPrinted,0) = 1 \n"
                           + "	) od \n"
                           + "	OUTER APPLY ( \n"
                           + "		SELECT ISNULL(t.Amount,0) Barcodes \n"
                           + "		FROM Transactions t \n"
                           + "		INNER JOIN Accounts a ON a.Id = t.AccountId AND a.[Type] = 5 \n"
                           + "		WHERE ISNULL(i.EndOfDayId,0) = 0 AND t.PosInfoId = i.PosInfoId AND t.InvoicesId = i.Id  	 \n"
                           + "	) br \n"
                           + "	WHERE ISNULL(i.IsVoided,0) <> 1 \n"
                           + "	GROUP BY i.PosInfoId, pif.Code, pif.[Description], od.ItemCount, eod.CloseId, i.EndOfDayId, i.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT10_PrintZ_X_PaymentAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT10_PrintZ_X_PaymentAnalysis] AS \n"
                           + "	SELECT a.[Description] [Description], SUM(t.Amount) Amount, i.EndOfDayId EndOfDayId, i.PosInfoId \n"
                           + "	FROM Invoices i \n"
                           + "	INNER JOIN Transactions t ON t.InvoicesId = i.Id \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "	INNER JOIN Accounts a ON a.Id = t.AccountId AND a.[Type] <> 4 \n"
                           + "	WHERE ISNULL(i.IsDeleted,0) <> 1 AND ISNULL(i.IsPrinted,0) = 1 AND ISNULL(i.IsVoided,0) = 0 \n"
                           + "	GROUP BY a.Id, a.[Description], a.[Type], i.EndOfDayId, i.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT11_PrintZ_X_VatsAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT11_PrintZ_X_VatsAnalysis] AS \n"
                           + "	SELECT odi.VatId, odi.VatRate, SUM(ISNULL(odi.TaxAmount,0)) Tax, SUM(odi.Total) Gross, SUM(odi.VatAmount) VatAmount, SUM(odi.Net) Net, \n"
                           + "		odi.EndOfDayId EndOfDayId, odi.PosInfoId \n"
                           + "	FROM OrderDetailInvoices odi \n"
                           + "	WHERE odi.InvoiceType NOT IN (2,3,8) AND ISNULL(odi.IsDeleted,0) <> 1 AND ISNULL(odi.IsPrinted,0) = 1 \n"
                           + "	GROUP BY odi.VatId, odi.VatRate, odi.EndOfDayId, odi.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT12_PrintZ_X_VoidsAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT12_PrintZ_X_VoidsAnalysis] AS \n"
                           + "	SELECT a.[Description] [Description], SUM(t.Amount) Amount, i.EndOfDayId EndOfDayId, i.PosInfoId \n"
                           + "	FROM Invoices i \n"
                           + "	INNER JOIN Transactions t ON t.InvoicesId = i.Id AND ISNULL(t.AccountId,0) <> 0  \n"
                           + "	INNER JOIN Accounts a ON a.Id = t.AccountId \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] = 3 \n"
                           + "	GROUP BY a.[Description], i.EndOfDayId, i.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT13_PrintZ_X_CardsAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT13_PrintZ_X_CardsAnalysis] AS \n"
                           + "	SELECT a.[Description] [Description], a.Id, SUM(t.Amount) Amount,i.EndOfDayId EndOfDayId, i.PosInfoId \n"
                           + "	FROM Invoices i \n"
                           + "	INNER JOIN Transactions t ON t.InvoicesId = i.Id AND ISNULL(t.AccountId,0) <> 0  \n"
                           + "	INNER JOIN Accounts a ON a.Id = t.AccountId AND a.[Type] = 4 \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "	WHERE  ISNULL(i.IsDeleted,0) <> 1 AND ISNULL(i.IsPrinted,0) = 1 \n"
                           + "	GROUP BY a.[Description], a.id, i.EndOfDayId, i.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT14_PrintZ_X_Lockers') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT14_PrintZ_X_Lockers] AS \n"
                           + "	SELECT l.Id Id, l.HasLockers HasLockers, l.TotalLockers TotalLockers, l.TotalLockersAmount TotalLockersAmount,  \n"
                           + "		l.Paidlockers Paidlockers, l.PaidlockersAmount PaidlockersAmount, l.OccLockers OccLockers, l.OccLockersAmount OccLockersAmount, \n"
                           + "		l.EndOfDayId EndOfDayId, eod.FODay EndOfDay \n"
                           + "	FROM Lockers l  \n"
                           + "	LEFT OUTER JOIN EndOfDay eod ON ISNULL(eod.Id,0) = ISNULL(l.EndOfDayId,0)' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT15_PrintZ_X_InvoicesAnalisis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT15_PrintZ_X_InvoicesAnalisis] AS \n"
                           + "	SELECT i.EndOfDayId, i.PosInfoId, CAST(CONVERT(VARCHAR(10), i.[Day],120) AS DATETIME) [Date], CONVERT(VARCHAR(10), i.[Day],108) [Time],  \n"
                           + "		i.InvoiceTypeId, i.Total, ISNULL(odi.VatAmount,0) ''13 %'',ISNULL(odi2.VatAmount,0) ''24 %'', \n"
                           + "		i.[Counter], ISNULL(s.LastName,'''') + '' '' + ISNULL(s.LastName,'''') Driver , i.IsVoided, eod.FODay   \n"
                           + "	FROM Invoices i  \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "	LEFT OUTER JOIN EndOfDay eod ON eod.Id = i.EndOfDayId \n"
                           + "	OUTER APPLY( \n"
                           + "		SELECT odi.VatRate, SUM(odi.Total) VatAmount \n"
                           + "		FROM OrderDetailInvoices odi \n"
                           + "		WHERE odi.InvoicesId = i.Id	AND odi.VatId = 1 \n"
                           + "		GROUP BY odi.VatRate \n"
                           + "	)odi \n"
                           + "	OUTER APPLY( \n"
                           + "		SELECT odi.VatRate, SUM(odi.Total) VatAmount \n"
                           + "		FROM OrderDetailInvoices odi \n"
                           + "		WHERE odi.InvoicesId = i.Id	AND odi.VatId = 2	 \n"
                           + "		GROUP BY odi.VatRate \n"
                           + "	)odi2 \n"
                           + "	INNER JOIN Staff s ON s.Id = i.StaffId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT15_PrintZ_X_InvoicesAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT15_PrintZ_X_InvoicesAnalysis] AS \n"
                           + "	SELECT i.EndOfDayId, i.PosInfoId, CAST(CONVERT(VARCHAR(10), i.[Day],120) AS DATETIME) [Date], CONVERT(VARCHAR(10), i.[Day],108) [Time],  \n"
                           + "		i.InvoiceTypeId, i.Total, ISNULL(odi.VatAmount,0) ''13 %'',ISNULL(odi2.VatAmount,0) ''24 %'', \n"
                           + "		i.[Counter], ISNULL(s.LastName,'''') + '' '' + ISNULL(s.LastName,'''') Driver ,    i.IsVoided   \n"
                           + "	FROM Invoices i  \n"
                           + "	INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "	OUTER APPLY( \n"
                           + "		SELECT odi.VatRate, SUM(odi.VatAmount) VatAmount \n"
                           + "		FROM OrderDetailInvoices odi \n"
                           + "		WHERE odi.InvoicesId = i.Id	AND odi.VatId = 1 \n"
                           + "		GROUP BY odi.VatRate \n"
                           + "	)odi \n"
                           + "	OUTER APPLY( \n"
                           + "		SELECT odi.VatRate, SUM(odi.VatAmount) VatAmount \n"
                           + "		FROM OrderDetailInvoices odi \n"
                           + "		WHERE odi.InvoicesId = i.Id	AND odi.VatId = 2	 \n"
                           + "		GROUP BY odi.VatRate \n"
                           + "	)odi2 \n"
                           + "	INNER JOIN Staff s ON s.Id = i.StaffId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT16_PrintZ_X_InvoiceTypeAnalisis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT16_PrintZ_X_InvoiceTypeAnalisis] AS \n"
                           + "	SELECT a.InvoiceTypeId, a.[Description],  a.VatRate, SUM(a.VatAmount) VatAmount, COUNT(*) TotalInvoices,  \n"
                           + "		a.IsVoided, SUM(a.Total) Total,	MIN(a.[Counter]) minCount, MAX(a.[Counter]) maxCounter, a.EndOfDayId, a.PosInfoId,a.foday Foday \n"
                           + "	FROM ( \n"
                           + "		SELECT i.InvoiceTypeId, it.[Description], odi.VatAmount, odi.VatRate, i.IsVoided,odi.TotalPerVat Total, i.[Counter],  \n"
                           + "		i.EndOfDayId, i.PosInfoId,eod.foday \n"
                           + "		FROM Invoices i \n"
                           + "		INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "		left outer join endofday eod on eod.id=i.endofdayid \n"
                           + "		OUTER APPLY( \n"
                           + "			SELECT odi.VatRate, SUM(odi.VatAmount) VatAmount, SUM(odi.Total) TotalPerVat \n"
                           + "			FROM OrderDetailInvoices odi \n"
                           + "			WHERE odi.InvoicesId = i.Id	 \n"
                           + "			GROUP BY odi.VatRate \n"
                           + "		)odi \n"
                           + "	) a \n"
                           + "	GROUP BY a.InvoiceTypeId, a.[Description], a.VatRate, a.IsVoided, a.EndOfDayId, a.PosInfoId	,a.foday' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @Type VARCHAR(10), @SQL VARCHAR(8000) \n"
                           + "IF NOT EXISTS (SELECT 1 FROM sys.views WHERE NAME = 'VIEW_RPT16_PrintZ_X_InvoiceTypeAnalysis') \n"
                           + "	SET @Type = 'CREATE ' \n"
                           + "ELSE \n"
                           + "	SET @Type = 'ALTER ' \n"
                           + "SET @SQL = @Type+' VIEW [dbo].[VIEW_RPT16_PrintZ_X_InvoiceTypeAnalysis] AS \n"
                           + "	          SELECT a.InvoiceTypeId \n"
                           + "                  , a.[Description] \n"
                           + "                  , a.VatRate \n"
                           + "                  , SUM(a.VatAmount) VatAmount \n"
                           + "                  , COUNT(*) TotalInvoices \n"
                           + "                  , a.IsVoided \n"
                           + "                  , SUM(a.Total) Total \n"
                           + "                  , MIN(a.[Counter]) minCount \n"
                           + "                  , MAX(a.[Counter]) maxCounter \n"
                           + "                  , a.EndOfDayId \n"
                           + "                  , a.PosInfoId \n"
                           + "	          FROM ( \n"
                           + "		            SELECT i.InvoiceTypeId \n"
                           + "                       , it.[Description] \n"
                           + "                       , odi.VatAmount \n"
                           + "                       , odi.VatRate \n"
                           + "                       , i.IsVoided \n"
                           + "                       , i.Total \n"
                           + "                       , i.[Counter] \n"
                           + "                       , i.EndOfDayId \n"
                           + "                       , i.PosInfoId \n"
                           + "		            FROM Invoices i \n"
                           + "		                 INNER JOIN InvoiceTypes it ON it.Id = i.InvoiceTypeId AND it.[Type] NOT IN (2,3,8) \n"
                           + "		                 OUTER APPLY ( \n"
                           + "			                          SELECT odi.VatRate, SUM(odi.VatAmount) VatAmount \n"
                           + "			                          FROM OrderDetailInvoices odi \n"
                           + "			                          WHERE odi.InvoicesId = i.Id	 \n"
                           + "			                          GROUP BY odi.VatRate \n"
                           + "		                             )odi \n"
                           + "	              ) a \n"
                           + "	          GROUP BY a.InvoiceTypeId \n"
                           + "                    , a.[Description] \n"
                           + "                    , a.VatRate \n"
                           + "                    , a.IsVoided \n"
                           + "                    , a.EndOfDayId \n"
                           + "                    , a.PosInfoId' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @SQL VARCHAR(MAX) \n"
                           + "IF EXISTS(select 1 FROM sys.views where name = 'pos_sales_analysis') \n"
                           + "	SET @SQL = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @SQL = 'CREATE ' \n"
                           + "SET @SQL = @SQL + ' VIEW [dbo].[pos_sales_analysis] AS \n"
                           + "	SELECT DepartmentId = pi.DepartmentId, DepartmentDescription = d.[Description] \n"
                           + "		 , PosInfoId = i.PosInfoId, PosInfoDescription = pi.[Description] \n"
                           + "		 , CategoryId = pc.categoryid, CategoryDescription = c.[Description] \n"
                           + "		 , ProductCategoryCode = pc.Code, ProductCategoryDescription = pc.[Description] \n"
                           + "		 , DetailedInvoiceId = odi.Id \n"
                           + "		 , odi.ProductId, ProductCode = p.Code, ProductDescription = p.[Description] \n"
                           + "		 , odi.Qty \n"
                           + "		 , odi.Price \n"
                           + "		 , odi.Discount \n"
                           + "		 , odi.Total \n"
                           + "		 , odi.Net \n"
                           + "		 , odi.VatAmount \n"
                           + "		 , VatPercentage = v.Percentage \n"
                           + "		 , PricelistId = pl.Id, PricelistCode = pl.Code, PricelistDescription = pl.[Description] \n"
                           + "		 , odi.VatId \n"
                           + "		 , InvoiceTotal = i.Total \n"
                           + "		 , InvoiceId = i.Id, InvoiceType = odi.InvoiceType \n"
                           + "		 , odi.Abbreviation \n"
                           + "		 , ReceiptNo = odi.[Counter] \n"
                           + "		 , i.Cover \n"
                           + "		 , i.Rooms \n"
                           + "		 , InvoiceDate = i.[Day] \n"
                           + "		 , odi.SalesTypeId \n"
                           + "		 , SalesTypeDescription = st.[Description] \n"
                           + "		 , StaffCode = s.Code \n"
                           + "		 , StafName = IsNull( LastName, '''' ) + '' '' + IsNull( FirstName, '''' ) \n"
                           + "		 , FODay = ISNULL( eod.FODay, CAST( GETDATE() AS DATE ) ) \n"
                           + "		 , EndOfDayId = ISNULL(i.EndOfDayId, 0) \n"
                           + "		 , odi.IsExtra \n"
                           + "		 , t.AccountId, t.AccountType, t.AccountDescription \n"
                           + "	FROM dbo.OrderDetailInvoices_View AS odi \n"
                           + "		 INNER JOIN dbo.Invoices_View AS i ON odi.InvoicesId = i.Id \n"
                           + "		 LEFT OUTER JOIN dbo.EndOfDay_View AS eod ON i.EndOfDayId = eod.Id \n"
                           + "		 LEFT OUTER JOIN dbo.Pricelist AS pl ON odi.PricelistId = pl.Id \n"
                           + "		 LEFT OUTER JOIN dbo.Vat AS v ON odi.VatId = v.Id \n"
                           + "		 LEFT OUTER JOIN dbo.SalesType AS st ON st.Id = odi.SalesTypeId \n"
                           + "		 LEFT OUTER JOIN dbo.Staff AS s ON i.StaffId = s.Id \n"
                           + "		 LEFT OUTER JOIN dbo.PosInfo AS pi ON i.PosInfoId = pi.Id \n"
                           + "		 LEFT OUTER JOIN dbo.Department AS d ON pi.DepartmentId = d.Id \n"
                           + "		 LEFT OUTER JOIN dbo.Ingredients AS ing ON ing.Id = odi.ProductId AND odi.IsExtra = 1 \n"
                           + "		 LEFT OUTER JOIN dbo.Product AS p ON p.Id = odi.ProductId \n"
                           + "		 LEFT OUTER JOIN dbo.ProductCategories AS pc ON pc.Id = odi.ProductCategoryId \n"
                           + "		 LEFT OUTER JOIN dbo.Categories as c on c.id = pc.categoryid    \n"
                           + "		 INNER JOIN(  \n"
                           + "		 	SELECT t1.InvoicesId , t1.AccountId , a1.Type AS AccountType ,  \n"
                           + "		 		a1.[Description] AS AccountDescription , SUM( t1.Amount ) AS TransAmount \n"
                           + "		    FROM dbo.Transactions AS t1 \n"
                           + "			LEFT OUTER JOIN dbo.Accounts AS a1 ON t1.AccountId = a1.Id \n"
                           + "		    WHERE ( ISNULL( t1.IsDeleted, 0 ) <> 1 ) \n"
                           + "		    GROUP BY t1.InvoicesId, t1.AccountId, a1.Type, a1.[Description]  \n"
                           + "		 ) AS t ON t.InvoicesId = i.Id \n"
                           + "	WHERE ( ISNULL( i.IsDeleted, 0 ) = 0 ) \n"
                           + "		  AND ( ISNULL( i.IsVoided, 0 ) = 0 ) \n"
                           + "		  AND ( ISNULL( odi.IsDeleted, 0 ) = 0 ) \n"
                           + "		  AND ( odi.InvoiceType NOT IN ( 2, 3, 8, 10, 11, 12 ) ) ' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @SQL VARCHAR(MAX) \n"
                           + "IF EXISTS(select 1 FROM sys.views where name = 'pos_sales_analysis2') \n"
                           + "	SET @SQL = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @SQL = 'CREATE ' \n"
                           + "SET @SQL = @SQL + ' VIEW [dbo].[pos_sales_analysis2] AS \n"
                           + "            SELECT DepartmentId = pi.DepartmentId, DepartmentDescription = d.[Description] \n"
                           + "                 , PosInfoId = i.PosInfoId, PosInfoDescription = pi.[Description] \n"
                           + "                 , CategoryId = pc.categoryid, CategoryDescription = c.[Description] \n"
                           + "                 , ProductCategoryCode = pc.Code, ProductCategoryDescription = pc.[Description] \n"
                           + "                 , DetailedInvoiceId = odi.Id \n"
                           + "                 , ProductId = odi.ProductId \n"
                           + "                 , ProductCode = CASE odi.IsExtra \n"
                           + "                                 WHEN 1 THEN ing.Code \n"
                           + "                                 ELSE p.Code \n"
                           + "                                 END \n"
                           + "                 , ProductDescription = CASE odi.IsExtra \n"
                           + "                                        WHEN 1 THEN ing.[Description] \n"
                           + "                                        ELSE p.[Description] \n"
                           + "                                        END \n"
                           + "                 , Qty = CASE odi.IsExtra \n"
                           + "                         WHEN 1 THEN 0 \n"
                           + "                         ELSE odi.Qty \n"
                           + "                         END    \n"
                           + "                 , Price = odi.Price, Discount = odi.Discount, Total = odi.Total, Net = odi.Net, InvoiceTotal = i.Total \n"
                           + "                 , VatAmount = odi.VatAmount, VatPercentage = v.Percentage \n"
                           + "                 , PricelistId = pl.Id, PricelistCode = pl.Code, PricelistDescription = pl.[Description] \n"
                           + "                 , VatId = odi.VatId      \n"
                           + "                 , InvoiceId = i.Id, InvoiceType = odi.InvoiceType, InvoiceDate = i.[Day] \n"
                           + "                 , Abbreviation = odi.Abbreviation \n"
                           + "                 , ReceiptNo = odi.[Counter] \n"
                           + "                 , Cover = i.Cover \n"
                           + "                 , Rooms = i.Rooms \n"
                           + "                 , SalesTypeId = odi.SalesTypeId, SalesTypeDescription = st.[Description] \n"
                           + "                 , StaffCode = s.Code, StafName = IsNull( LastName, '''' ) + '' '' + IsNull( FirstName, '''' ) \n"
                           + "                 , FODay = ISNULL( eod.FODay, CAST( GETDATE() AS DATE ) ) \n"
                           + "                 , EndOfDayId = ISNULL(i.EndOfDayId, 0) \n"
                           + "                 , odi.IsExtra \n"
                           + "            FROM dbo.OrderDetailInvoices_View AS odi \n"
                           + "                 INNER JOIN dbo.Invoices_View AS i ON odi.InvoicesId = i.Id \n"
                           + "                 LEFT OUTER JOIN dbo.EndOfDay_View AS eod ON i.EndOfDayId = eod.Id \n"
                           + "                 LEFT OUTER JOIN dbo.Pricelist AS pl ON odi.PricelistId = pl.Id \n"
                           + "                 LEFT OUTER JOIN dbo.Vat AS v ON odi.VatId = v.Id \n"
                           + "                 LEFT OUTER JOIN dbo.SalesType AS st ON st.Id = odi.SalesTypeId \n"
                           + "                 LEFT OUTER JOIN dbo.Staff AS s ON i.StaffId = s.Id \n"
                           + "                 LEFT OUTER JOIN dbo.PosInfo AS pi ON i.PosInfoId = pi.Id \n"
                           + "                 LEFT OUTER JOIN dbo.Department AS d ON pi.DepartmentId = d.Id \n"
                           + "                 LEFT OUTER JOIN dbo.Ingredients AS ing ON ing.Id = odi.ProductId AND odi.IsExtra = 1 \n"
                           + "                 LEFT OUTER JOIN dbo.Product AS p ON p.Id = odi.ProductId \n"
                           + "                 LEFT OUTER JOIN dbo.ProductCategories AS pc ON pc.Id = odi.ProductCategoryId \n"
                           + "                 LEFT OUTER JOIN dbo.Categories as c on c.id = pc.categoryid    \n"
                           + "            WHERE ( ISNULL( i.IsDeleted, 0 ) = 0 ) \n"
                           + "                  AND ( ISNULL( i.IsVoided, 0 ) = 0 ) \n"
                           + "                  AND ( ISNULL( odi.IsDeleted, 0 ) = 0 ) \n"
                           + "                  AND ( odi.InvoiceType NOT IN ( 2, 3, 8, 10, 11, 12 ) )' \n"
                           + "EXEC(@SQL)");
            Ver_2_0_0_15.Add("DECLARE @SQL VARCHAR(MAX) \n"
                            + "IF EXISTS(select 1 FROM sys.views where name = 'pos_sales_analysis3') \n"
                            + "	SET @SQL = 'ALTER ' \n"
                            + "ELSE \n"
                            + "	SET @SQL = 'CREATE ' \n"
                            + "SET @SQL = @SQL + ' VIEW [dbo].[pos_sales_analysis3] AS \n"
                            + "            SELECT DepartmentId = pi.DepartmentId, DepartmentDescription = d.[Description] \n"
                            + "                 , PosInfoId = i.PosInfoId, PosInfoDescription = pi.[Description] \n"
                            + "                 , CategoryId = pc.categoryid, CategoryDescription = c.[Description] \n"
                            + "                 , ProductCategoryCode = pc.Code, ProductCategoryDescription = pc.[Description] \n"
                            + "                 , DetailedInvoiceId = odi.Id \n"
                            + "                 , odi.ProductId, ProductCode = p.Code, ProductDescription = p.[Description] \n"
                            + "                 , odi.Qty \n"
                            + "                 , odi.Price \n"
                            + "                 , odi.Discount \n"
                            + "                 , odi.Total \n"
                            + "                 , odi.Net \n"
                            + "                 , odi.VatAmount \n"
                            + "                 , VatPercentage = v.Percentage \n"
                            + "                 , PricelistId = pl.Id, PricelistCode = pl.Code, PricelistDescription = pl.[Description] \n"
                            + "                 , odi.VatId \n"
                            + "                 , InvoiceTotal = i.Total \n"
                            + "                 , InvoiceId = i.Id, InvoiceType = odi.InvoiceType \n"
                            + "                 , odi.Abbreviation \n"
                            + "                 , ReceiptNo = odi.[Counter] \n"
                            + "                 , i.Cover \n"
                            + "                 , i.Rooms \n"
                            + "                 , InvoiceDate = i.[Day] \n"
                            + "                 , odi.SalesTypeId \n"
                            + "                 , SalesTypeDescription = st.[Description] \n"
                            + "                 , StaffCode = s.Code \n"
                            + "                 , StafName = IsNull( LastName, '''' ) + '' '' + IsNull( FirstName, '''' ) \n"
                            + "                 , FODay = ISNULL( eod.FODay, CAST( GETDATE() AS DATE ) ) \n"
                            + "                 , EndOfDayId = ISNULL(i.EndOfDayId, 0) \n"
                            + "                 , odi.IsExtra \n"
                            + "                 , t.AccountId, t.AccountType, t.AccountDescription \n"
                            + "                 , odi.OrderDetailId \n"
                            + "            FROM dbo.OrderDetailInvoices_View AS odi \n"
                            + "             INNER JOIN dbo.Invoices_View AS i ON odi.InvoicesId = i.Id \n"
                            + "             LEFT OUTER JOIN dbo.EndOfDay_View AS eod ON i.EndOfDayId = eod.Id \n"
                            + "             LEFT OUTER JOIN dbo.Pricelist AS pl ON odi.PricelistId = pl.Id \n"
                            + "             LEFT OUTER JOIN dbo.Vat AS v ON odi.VatId = v.Id \n"
                            + "             LEFT OUTER JOIN dbo.SalesType AS st ON st.Id = odi.SalesTypeId \n"
                            + "             LEFT OUTER JOIN dbo.Staff AS s ON i.StaffId = s.Id \n"
                            + "             LEFT OUTER JOIN dbo.PosInfo AS pi ON i.PosInfoId = pi.Id \n"
                            + "             LEFT OUTER JOIN dbo.Department AS d ON pi.DepartmentId = d.Id \n"
                            + "             LEFT OUTER JOIN dbo.Ingredients AS ing ON ing.Id = odi.ProductId AND odi.IsExtra = 1 \n"
                            + "             LEFT OUTER JOIN dbo.Product AS p ON p.Id = odi.ProductId \n"
                            + "             LEFT OUTER JOIN dbo.ProductCategories AS pc ON pc.Id = odi.ProductCategoryId \n"
                            + "             LEFT OUTER JOIN dbo.Categories as c on c.id = pc.categoryid    \n"
                            + "             INNER JOIN( SELECT t1.InvoicesId , t1.AccountId , a1.Type AS AccountType \n"
                            + "							, a1.[Description] AS AccountDescription, SUM( t1.Amount ) AS TransAmount \n"
                            + "                          FROM dbo.Transactions_View AS t1 \n"
                            + "                          LEFT OUTER JOIN dbo.Accounts AS a1 ON t1.AccountId = a1.Id \n"
                            + "                          WHERE ( ISNULL( t1.IsDeleted, 0 ) <> 1 ) \n"
                            + "                          GROUP BY t1.InvoicesId , t1.AccountId , a1.Type , a1.[Description] ) AS t ON t.InvoicesId = i.Id \n"
                            + "            WHERE ( ISNULL( i.IsDeleted, 0 ) = 0 ) \n"
                            + "                  AND ( ISNULL( i.IsVoided, 0 ) = 0 ) \n"
                            + "                  AND ( ISNULL( odi.IsDeleted, 0 ) = 0 ) \n"
                            + "                  AND ( odi.InvoiceType NOT IN ( 2, 3, 8, 10, 11, 12 ) )' \n"
                            + "EXEC(@SQL)");
        }
    }
}
