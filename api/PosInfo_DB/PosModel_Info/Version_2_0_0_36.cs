using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Symposium_DTOs.PosModel_Info
{
    [DisplayName("Ver : 2.0.0.36")]
    public class Version_2_0_0_36
    {
        public List<string> Ver_2_0_0_36 { get; }

        public Version_2_0_0_36()
        {
            Ver_2_0_0_36 = new List<string>();
            Ver_2_0_0_36.Add("CREATE PROCEDURE [dbo].[CancelOrder] (@invoiceId BIGINT, @posInfo BIGINT, @staffId BIGINT, @NewInvoiceId BIGINT OUTPUT) AS   \n"
                           + "BEGIN    \n"
                           + "  \n"
                           + "	DECLARE @COUNTER INT  \n"
                           + "	DECLARE @Hash nvarchar(200)  \n"
                           + "	DECLARE @MSG VARCHAR(500)  \n"
                           + "	DECLARE @ErrorSeverity INT  \n"
                           + "	DECLARE @ErrorState INT														  \n"
                           + "	DECLARE @ErrorMessage NVARCHAR(1000)				  \n"
                           + "  \n"
                           + "  \n"
                           + "	BEGIN TRANSACTION;    \n"
                           + "  \n"
                           + "	BEGIN TRY   \n"
                           + "  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--UPDATE COUNT  \n"
                           + "		--*******************************************************************************		  \n"
                           + "		UPDATE PosInfoDetail   \n"
                           + "		SET [Counter] = [Counter] + 1  \n"
                           + "		WHERE PosInfoDetail.PosInfoId = @posInfo and PosInfoDetail.GroupId = 8;  \n"
                           + "  \n"
                           + "		SELECT @COUNTER = [Counter]  \n"
                           + "		FROM PosInfoDetail  \n"
                           + "		WHERE PosInfoDetail.PosInfoId = @posInfo and PosInfoDetail.GroupId = 8;  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "  \n"
                           + "  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--INVOICES  \n"
                           + "		--*******************************************************************************  \n"
                           + "		SELECT * INTO #invoices FROM invoices WHERE IsVoided = 0 AND Id = @invoiceId  \n"
                           + "  \n"
                           + "		IF (@@ROWCOUNT = 0)  \n"
                           + "		BEGIN  \n"
                           + "			SET @MSG = 'Invoice Id ' + LTRIM(STR(@invoiceId)) + ' not found !'  \n"
                           + "			RAISERROR (@MSG, 16, 0)  \n"
                           + "		END  \n"
                           + "  \n"
                           + "		SELECT @Hash = CONVERT (varchar(19), #invoices.Day, 120) +  \n"
                           + "								ltrim(str(#invoices.IsInvoiced)) +  \n"
                           + "								ltrim(str(#invoices.PosInfoDetailId)) +   \n"
                           + "								ltrim(str(#invoices.InvoiceTypeId)) +   \n"
                           + "								RIGHT('000000000' + CONVERT(VARCHAR, CAST(#invoices.Total AS DECIMAL(18,2))), 12) +   \n"
                           + "								ltrim(str(#invoices.StaffId)) +  \n"
                           + "								ltrim(str(#invoices.Counter))  \n"
                           + "		FROM #invoices  \n"
                           + "  \n"
                           + "  \n"
                           + "		SET @Hash = CONVERT(NVARCHAR(200), HashBytes('MD5', @Hash), 2)  \n"
                           + "  \n"
                           + "		UPDATE #invoices SET #invoices.PaidTotal = -PaidTotal,   \n"
                           + "							 #invoices.IsVoided = 1,  \n"
                           + "							 #invoices.Description = PosInfoDetail.Description,  \n"
                           + "							 #invoices.InvoiceTypeId = PosInfoDetail.InvoicesTypeId,  \n"
                           + "							 #invoices.Counter = @COUNTER,  \n"
                           + "							 #invoices.PosInfoDetailId = PosInfoDetail.Id,  \n"
                           + "							 #invoices.Day = CASE WHEN #invoices.EndOfDayId IS NULL THEN GETDATE() ELSE #invoices.Day END,  \n"
                           + "							 #invoices.PosInfoId = @posInfo,  \n"
                           + "							 #invoices.StaffId = @staffId,  \n"
                           + "							 #invoices.Hashcode = @Hash  \n"
                           + "		FROM PosInfoDetail   \n"
                           + "		WHERE PosInfoDetail.PosInfoId = @posInfo and PosInfoDetail.GroupId = 8  \n"
                           + "  \n"
                           + "  \n"
                           + "		  \n"
                           + "  \n"
                           + "  \n"
                           + "		ALTER TABLE #invoices DROP COLUMN id;	  \n"
                           + "		INSERT INTO invoices SELECT * FROM #invoices;  \n"
                           + "		SET @NewInvoiceId = SCOPE_IDENTITY()  \n"
                           + "  \n"
                           + "		UPDATE Invoices  \n"
                           + "		SET IsVoided = 1  \n"
                           + "		WHERE Id = @invoiceId		  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "  \n"
                           + "  \n"
                           + "  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--ORDER DETAIL INVOICES  \n"
                           + "		--*******************************************************************************  \n"
                           + "		SELECT * INTO #OrderDetailInvoices FROM OrderDetailInvoices WHERE InvoicesId = @invoiceId  \n"
                           + "		  \n"
                           + "		update #OrderDetailInvoices SET #OrderDetailInvoices.InvoicesId = @NewInvoiceId,   \n"
                           + "										#OrderDetailInvoices.Abbreviation = PosInfoDetail.Abbreviation,  \n"
                           + "										#OrderDetailInvoices.PosInfoDetailId = PosInfoDetail.Id,  \n"
                           + "										#OrderDetailInvoices.Counter = @COUNTER,  \n"
                           + "										#OrderDetailInvoices.CreationTS = GETDATE(),  \n"
                           + "										#OrderDetailInvoices.InvoiceType = 8,  \n"
                           + "										#OrderDetailInvoices.PosInfoId = @posInfo,  \n"
                           + "					    				#OrderDetailInvoices.StaffId = @staffId  \n"
                           + "		FROM PosInfoDetail   \n"
                           + "		WHERE PosInfoDetail.PosInfoId = @posInfo and PosInfoDetail.GroupId = 8		  \n"
                           + "		ALTER TABLE #OrderDetailInvoices DROP COLUMN id;  \n"
                           + "		INSERT INTO OrderDetailInvoices SELECT * FROM #OrderDetailInvoices;  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		  \n"
                           + "  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--ORDER DETAIL  \n"
                           + "		--*******************************************************************************		  \n"
                           + "		UPDATE OrderDetail SET [Status] = 5  \n"
                           + "		WHERE Id in (SELECT OrderDetailId from #OrderDetailInvoices)		  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "  \n"
                           + "  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--INSERT OrderStatus  \n"
                           + "		--*******************************************************************************  \n"
                           + "		SELECT DISTINCT OrderDetail.OrderId INTO #INVOICEORDERS   \n"
                           + "			FROM OrderDetail INNER JOIN #OrderDetailInvoices   \n"
                           + "				ON OrderDetail.Id = #OrderDetailInvoices.OrderDetailId  \n"
                           + "					WHERE NOT EXISTS(SELECT * FROM OrderDetail B WHERE B.OrderId = OrderDetail.OrderId AND B.Status <> 5)			  \n"
                           + "  \n"
                           + "		INSERT OrderStatus (Status, TimeChanged, OrderId, StaffId)  \n"
                           + "		SELECT 5, GETDATE(), #INVOICEORDERS.OrderId, @staffId  \n"
                           + "		FROM #INVOICEORDERS;  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "		--*******************************************************************************  \n"
                           + "  \n"
                           + "	END TRY    \n"
                           + "	BEGIN CATCH    \n"
                           + "  \n"
                           + "			ROLLBACK TRANSACTION;    \n"
                           + "  \n"
                           + "			IF CURSOR_STATUS('global','db_cursor') >= 0   \n"
                           + "			BEGIN  \n"
                           + "				CLOSE db_cursor  \n"
                           + "				DEALLOCATE db_cursor   \n"
                           + "			END  \n"
                           + "  \n"
                           + "			SELECT @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() ,@ErrorMessage = ERROR_MESSAGE();    \n"
                           + "			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  \n"
                           + "			SELECT ERROR_SEVERITY(), ERROR_STATE(), ERROR_MESSAGE();  \n"
                           + "  \n"
                           + "			RETURN -1  \n"
                           + "	END CATCH;    \n"
                           + "  \n"
                           + "	COMMIT TRANSACTION;   \n"
                           + "  \n"
                           + "	RETURN 1  \n"
                           + " \n"
                           + "END");
        }
    }
}
