using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Symposium_DTOs.PosModel_Info
{
    [DisplayName("Ver : 2.0.0.43")]
    public class Version_2_0_0_43
    {

        public List<string> Ver_2_0_0_43 { get; }

        public Version_2_0_0_43()
        {
            Ver_2_0_0_43 = new List<string>();
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'DistpatchPoints') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[DistpatchPoints] AS  \n"
                           + "	SELECT lst.Title, lst.eodFO_Day, lst.Twenty, lst.TwentyFive, lst.Thirty, lst.Forty, lst.Fifty, lst.FiftyPlus,  \n"
                           + "				 lst.TotalOrders,lst.TwentyPoints,lst.TwentyFivePoints,lst.ThirtyPoints,lst.FortyPoints,lst.FiftyPoints,lst.FiftyPlusPoints,  \n"
                           + "				 ROUND(CASE WHEN lst.TotalOrders <> 0 THEN	  \n"
                           + "		 			CAST(lst.TwentyPoints+lst.TwentyFivePoints+lst.ThirtyPoints+lst.FortyPoints+lst.FiftyPoints+lst.FiftyPlusPoints AS FLOAT) / (CAST(lst.TotalOrders AS FLOAT) / 10)    \n"
                           + "				 ELSE 0 END,2) Pst  \n"
                           + "		FROM (  \n"
                           + "			SELECT fin.Title,fin.eodFO_Day, fin.Twenty, fin.TwentyFive, fin.Thirty, fin.Forty, fin.Fifty, fin.FiftyPlus,  \n"
                           + "				 fin.Twenty+fin.TwentyFive+fin.Thirty+fin.Forty+fin.Fifty+fin.FiftyPlus TotalOrders,  \n"
                           + "				 (fin.Twenty * 10) TwentyPoints, (fin.TwentyFive * 8) TwentyFivePoints,   \n"
                           + "				 (fin.Thirty * 4) ThirtyPoints, (fin.Forty * 0) FortyPoints, (fin.Fifty * (-1)) FiftyPoints, (fin.FiftyPlus * (-30)) FiftyPlusPoints \n"
                           + "			FROM (  \n"
                           + "				SELECT a.Title, a.eodFO_Day, SUM(a.Twenty) Twenty, SUM(a.TwentyFive) TwentyFive, SUM(a.Thirty) Thirty, SUM(a.Forty) Forty,  \n"
                           + "					   SUM(a.Fifty) Fifty, SUM(a.FiftyPlus) FiftyPlus --, a.DA_OrderId  \n"
                           + "				FROM (   \n"
                           + "					SELECT DISTINCT ds.Title, o.eodFO_Day,   \n"
                           + "						CASE WHEN DATEDIFF(MINUTE, o.PreperingTime, o.OnRoadTime) < 20 THEN 1 ELSE 0 END Twenty,  \n"
                           + "						CASE WHEN DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) >= 20 AND DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) <= 25 THEN 1 ELSE 0 END TwentyFive,  \n"
                           + "						CASE WHEN DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) > 25 AND DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) <= 30 THEN 1 ELSE 0 END Thirty,  \n"
                           + "						CASE WHEN DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) > 30 AND DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) <= 40 THEN 1 ELSE 0 END Forty,  \n"
                           + "						CASE WHEN DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) > 40 AND DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) <= 50 THEN 1 ELSE 0 END Fifty,  \n"
                           + "						CASE WHEN DATEDIFF(MINUTE,o.PreperingTime, o.OnRoadTime) > 50  THEN 1 ELSE 0 END FiftyPlus, o.OrderId DA_OrderId  \n"
                           + "					FROM ReportsPos AS o  \n"
                           + "					INNER JOIN DA_Stores AS ds ON ds.Id = o.StoreId \n"
                           + "					WHERE YEAR(o.PreperingTime) > 1900 AND o.DA_OrderId > 0  \n"
                           + "				) a  \n"
                           + "				GROUP BY a.Title, a.eodFO_Day  \n"
                           + "			) fin  \n"
                           + "		) lst' \n"
                           + "EXEC(@sSQL)	");
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'OrdersPerPeriod') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[OrdersPerPeriod] AS  \n"
                           + "	SELECT ds.Title, ISNULL(fin.DineInOrders,0) DineInOrders, ISNULL(fin.DineInTotal,0) DineInTotal, ISNULL(fin.DineInNet,0) DineInNet, \n"
                           + "		ISNULL(fin.DeliveryOrders,0) DeliveryOrders, ISNULL(fin.DeliveryTotal,0) DeliveryTotal, ISNULL(fin.DeliveryNet,0) DeliveryNet,  \n"
                           + "		ISNULL(fin.TakeOutOrders,0) TakeOutOrders, ISNULL(fin.TakeOutTotal,0) TakeOutTotal, ISNULL(fin.TakeOutNet,0) TakeOutNet,  \n"
                           + "		ISNULL(fin.Pricelist,-1) Pricelist, ISNULL(fin.invoiceTypeType,1) invoiceTypeType,  \n"
                           + "		ISNULL(fin.eodFO_Day,CAST(CONVERT(VARCHAR(10), GETDATE(),120) AS DATETIME)) eodFO_Day,  \n"
                           + "		ISNULL(fin.DineInOrders,0)+ISNULL(fin.DeliveryOrders,0)+ISNULL(fin.TakeOutOrders,0) TotOrders, \n"
                           + "		ISNULL(fin.DineInTotal,0)+ISNULL(fin.DeliveryTotal,0)+ISNULL(fin.TakeOutTotal,0) TotTotalAmount, \n"
                           + "		ISNULL(fin.DineInNet,0)+ISNULL(fin.DeliveryNet,0)+ISNULL(fin.TakeOutNet,0) TotNetAmount \n"
                           + "	FROM DA_Stores AS ds \n"
                           + "	LEFT OUTER JOIN ( \n"
                           + "		SELECT lst.StoreId, SUM(lst.DineInOrders) DineInOrders, SUM(lst.DineInTotal) DineInTotal, SUM(lst.DineInNet) DineInNet, \n"
                           + "			   SUM(lst.DeliveryOrders) DeliveryOrders, SUM(lst.DeliveryTotal) DeliveryTotal, SUM(lst.DeliveryNet) DeliveryNet,  \n"
                           + "			   SUM(lst.TakeOutOrders) TakeOutOrders, SUM(lst.TakeOutTotal) TakeOutTotal, SUM(lst.TakeOutNet) TakeOutNet,  \n"
                           + "			   lst.Pricelist, lst.invoiceTypeType, lst.eodFO_Day  \n"
                           + "		FROM ( \n"
                           + "			SELECT  \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 1 THEN 1 ELSE 0 END DineInOrders, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 1 THEN tmp.Total ELSE 0 END DineInTotal, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 1 THEN tmp.totalNet ELSE 0 END DineInNet, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 20 THEN 1 ELSE 0 END DeliveryOrders, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 20 THEN tmp.Total ELSE 0 END DeliveryTotal, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 20 THEN tmp.totalNet ELSE 0 END DeliveryNet, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 21 THEN 1 ELSE 0 END TakeOutOrders, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 21 THEN tmp.Total ELSE 0 END TakeOutTotal, \n"
                           + "				CASE WHEN ISNULL(tmp.SalesTypeId,1) = 21 THEN tmp.totalNet ELSE 0 END TakeOutNet, \n"
                           + "				tmp.Pricelist, tmp.invoiceTypeType, tmp.eodFO_Day, tmp.StoreId \n"
                           + "			FROM ( \n"
                           + "				SELECT rp.InvoicesId, rp.prListDAId Pricelist, rp.invoiceTypeType, rp.eodFO_Day, rp.StoreId,  \n"
                           + "					CAST(SUM(rp.Total) AS DECIMAL(19,2)) Total, CAST(SUM(rp.totalNet) AS DECIMAL(19,2)) totalNet,  \n"
                           + "					rp.SalesTypeId \n"
                           + "				FROM ReportsPos AS rp \n"
                           + "				WHERE rp.invoiceTypeType IN (1,7) AND ISNULL(rp.IsDeleted,0) = 0 AND ISNULL(rp.IsVoided,0) = 0 \n"
                           + "				GROUP BY rp.InvoicesId, rp.prListDAId, rp.invoiceTypeType, rp.eodFO_Day, rp.StoreId, rp.SalesTypeId \n"
                           + "			) tmp \n"
                           + "		) lst \n"
                           + "		GROUP BY lst.StoreId,lst.Pricelist, lst.invoiceTypeType, lst.eodFO_Day \n"
                           + "	) fin ON fin.StoreId = ds.Id' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'ProductivityReportAllDepartments') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[ProductivityReportAllDepartments] AS  \n"
                           + "	SELECT ds.Title Store, pr.ActDate eodFO_Day, ISNULL(pr.KitchenHours,0) KitchenHours,  \n"
                           + "		ISNULL(pr.DeliveryHours,0) DeliveryHours, ISNULL(pr.ServiceHours,0) ServiceHours , ISNULL(rpNet.totalNet,0) NetSales, \n"
                           + "		ISNULL(rpp.DeliveryOrders,0) DeliveryOrders, ISNULL(rppDin.DineInNetSales,0) DineInNetSales  \n"
                           + "	FROM ( \n"
                           + "		SELECT tmp.StoreId, tmp.ActDate, SUM(tmp.KitchenHours) KitchenHours, SUM(tmp.DeliveryHours) DeliveryHours, SUM(tmp.ServiceHours) ServiceHours \n"
                           + "		FROM ( \n"
                           + "			SELECT prfr.StoreId, prfr.ActDate, ROUND(SUM(ISNULL(prfr.nHours,0) * 60 + ISNULL(prfr.nMin,0))/60,0) KitchenHours, 0 DeliveryHours, 0 ServiceHours \n"
                           + "			FROM PayRollForReport AS prfr \n"
                           + "			WHERE prfr.PositionId = 3 \n"
                           + "			GROUP BY prfr.StoreId, prfr.ActDate \n"
                           + "			UNION ALL \n"
                           + "			SELECT prfr.StoreId, prfr.ActDate, 0 KitchenHours, ROUND(SUM(ISNULL(prfr.nHours,0) * 60 + ISNULL(prfr.nMin,0))/60,0) DeliveryHours, 0 ServiceHours \n"
                           + "			FROM PayRollForReport AS prfr \n"
                           + "			WHERE prfr.PositionId = 5 \n"
                           + "			GROUP BY prfr.StoreId, prfr.ActDate \n"
                           + "			UNION ALL \n"
                           + "			SELECT prfr.StoreId, prfr.ActDate, 0 KitchenHours, 0 DeliveryHours, ROUND(SUM(ISNULL(prfr.nHours,0) * 60 + ISNULL(prfr.nMin,0))/60,0) ServiceHours \n"
                           + "			FROM PayRollForReport AS prfr \n"
                           + "			WHERE prfr.PositionId = 1 \n"
                           + "			GROUP BY prfr.StoreId, prfr.ActDate \n"
                           + "		) tmp \n"
                           + "		GROUP BY tmp.StoreId, tmp.ActDate \n"
                           + "	) pr \n"
                           + "	INNER JOIN DA_Stores ds ON ds.Id = pr.StoreId \n"
                           + "	OUTER APPLY ( \n"
                           + "		SELECT SUM(rp.totalNet) totalNet \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = ds.Id AND rp.eodFO_Day = pr.ActDate \n"
                           + "	) rpNet \n"
                           + "	OUTER APPLY ( \n"
                           + "		SELECT COUNT(DISTINCT rpp.OrderId) DeliveryOrders \n"
                           + "		FROM ReportsPos AS rpp \n"
                           + "		WHERE rpp.StoreId = ds.Id AND rpp.eodFO_Day = pr.ActDate AND rpp.SalesTypeId = 20 \n"
                           + "	) rpp \n"
                           + "	OUTER APPLY ( \n"
                           + "		SELECT SUM(rpp.Total) DineInNetSales \n"
                           + "		FROM ReportsPos AS rpp \n"
                           + "		WHERE rpp.StoreId = ds.Id AND rpp.eodFO_Day = pr.ActDate AND rpp.SalesTypeId = 1 \n"
                           + "	) rppDin \n"
                           + "	WHERE ISNULL(pr.KitchenHours,0)+ISNULL(pr.DeliveryHours,0)+ISNULL(pr.ServiceHours,0) <> 0' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'ProductsPerStore') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[ProductsPerStore] AS  \n"
                           + "	SELECT fin.eodFO_Day, fin.Pricelist, fin.PricelistDescription,fin.ProductDescription,  \n"
                           + "		SUM(fin.Store_Bril_Qty) Store_Bril_Qty, SUM(fin.Store_Bril_Total) Store_Bril_Total,  \n"
                           + "		SUM(fin.Store_Gala_Qty) Store_Gala_Qty, SUM(fin.Store_Gala_Total) Store_Gala_Total, \n"
                           + "		SUM(fin.Store_Glyf_Qty) Store_Glyf_Qty, SUM(fin.Store_Glyf_Total) Store_Glyf_Total,  \n"
                           + "		SUM(fin.Store_Kifi_Qty) Store_Kifi_Qty, SUM(fin.Store_Kifi_Total) Store_Kifi_Total,  \n"
                           + "		SUM(fin.Store_Koru_Qty) Store_Koru_Qty, SUM(fin.Store_Koru_Total) Store_Koru_Total, \n"
                           + "		SUM(fin.Store_NHra_Qty) Store_NHra_Qty, SUM(fin.Store_NHra_Total) Store_NHra_Total,  \n"
                           + "		SUM(fin.Store_NSmu_Qty) Store_NSmu_Qty, SUM(fin.Store_NSmu_Total) Store_NSmu_Total,  \n"
                           + "		SUM(fin.Store_Pagk_Qty) Store_Pagk_Qty, SUM(fin.Store_Pagk_Total) Store_Pagk_Total, \n"
                           + "		SUM(fin.Store_Peir_Qty) Store_Peir_Qty, SUM(fin.Store_Peir_Total) Store_Peir_Total,  \n"
                           + "		SUM(fin.Store_Xala_Qty) Store_Xala_Qty, SUM(fin.Store_Xal_Total) Store_Xal_Total  \n"
                           + "	FROM ( \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription, rp.ProductDescription, SUM(rp.Qty) Store_Bril_Qty, SUM(rp.Total) Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 20 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			SUM(rp.Qty) Store_Gala_Qty, SUM(rp.Total) Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 23 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, SUM(rp.Qty) Store_Glyf_Qty, SUM(rp.Total) Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 22 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, SUM(rp.Qty) Store_Kifi_Qty, SUM(rp.Total) Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 17 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			SUM(rp.Qty) Store_Koru_Qty, SUM(rp.Total) Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 2 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, SUM(rp.Qty) Store_NHra_Qty, SUM(rp.Total) Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 24 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, SUM(rp.Qty) Store_NSmu_Qty, SUM(rp.Total) Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 7 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			SUM(rp.Qty) Store_Pagk_Qty, SUM(rp.Total) Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 21 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, SUM(rp.Qty) Store_Peir_Qty, SUM(rp.Total) Store_Peir_Total, 0 Store_Xala_Qty, 0 Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 11 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "		UNION ALL \n"
                           + "		SELECT rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription, 0 Store_Bril_Qty, 0 Store_Bril_Total, \n"
                           + "			0 Store_Gala_Qty, 0 Store_Gala_Total, 0 Store_Glyf_Qty, 0 Store_Glyf_Total, 0 Store_Kifi_Qty, 0 Store_Kifi_Total, \n"
                           + "			0 Store_Koru_Qty, 0 Store_Koru_Total, 0 Store_NHra_Qty, 0 Store_NHra_Total, 0 Store_NSmu_Qty, 0 Store_NSmu_Total,  \n"
                           + "			0 Store_Pagk_Qty, 0 Store_Pagk_Total, 0 Store_Peir_Qty, 0 Store_Peir_Total, SUM(rp.Qty) Store_Xala_Qty, SUM(rp.Total) Store_Xal_Total    \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		WHERE rp.StoreId = 19 \n"
                           + "		GROUP BY rp.eodFO_Day, rp.Pricelist, rp.PricelistDescription,rp.ProductDescription \n"
                           + "	) fin \n"
                           + "	GROUP BY fin.eodFO_Day, fin.Pricelist, fin.PricelistDescription,fin.ProductDescription' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'SimplyOrdersPerMonthWaiter') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[SimplyOrdersPerMonthWaiter] AS  \n"
                           + "	SELECT  \n"
                           + "		fin.Title, fin.Waiter,fin.WaiterName, fin.PosDescription, fin.FO_Month, \n"
                           + "		fin.FO_Year, SUM(cv.Cover) Cover, COUNT(fin.InvoicesId) Orders, SUM(fin.DineIn) DineIn, SUM(fin.Delivery) Delivery, \n"
                           + "		SUM(fin.TakeOut) TakeOut, SUM(fin.Total) Total  \n"
                           + "	FROM ( \n"
                           + "		SELECT DISTINCT ds.Title, rp.Waiter, rp.WaiterName, rp.PosDescription, MONTH(rp.eodFO_Day) FO_Month, YEAR(rp.eodFO_Day) FO_Year,  \n"
                           + "			rp.InvoicesId, rp.Cover Cover, rpp.DineIn, rpp.Delivery, rpp.TakeOut, (rpp.DineIn+rpp.Delivery+rpp.TakeOut) Total \n"
                           + "		FROM ReportsPos AS rp \n"
                           + "		CROSS APPLY ( \n"
                           + "			SELECT SUM(fin.DineIn) DineIn, SUM(fin.Delivery) Delivery, SUM(fin.TakeOut) TakeOut  \n"
                           + "			FROM ( \n"
                           + "				SELECT CASE WHEN rpp.SalesTypeId = 1 THEN rpp.Total ELSE 0 END DineIn, \n"
                           + "						CASE WHEN rpp.SalesTypeId = 20 THEN rpp.Total ELSE 0 END Delivery, \n"
                           + "						CASE WHEN rpp.SalesTypeId = 21 THEN rpp.Total ELSE 0 END TakeOut \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId AND rpp.eodFO_Day = rp.eodFO_Day AND rpp.Waiter = rp.Waiter AND rpp.StoreId = rp.StoreId \n"
                           + "			) fin \n"
                           + "		) rpp \n"
                           + "		INNER JOIN DA_Stores AS ds ON ds.Id = rp.StoreId \n"
                           + "		WHERE rp.invoiceTypeType IN (1,5,7)  \n"
                           + "	) fin \n"
                           + "	CROSS APPLY ( \n"
                           + "		SELECT SUM(lst.Cover) Cover \n"
                           + "		FROM ( \n"
                           + "			SELECT DISTINCT rpp.InvoicesId, rpp.Cover \n"
                           + "			FROM ReportsPos AS rpp \n"
                           + "			WHERE rpp.InvoicesId = fin.InvoicesId AND MONTH(rpp.eodFO_Day) = fin.FO_Month AND YEAR(rpp.eodFO_Day) = fin.FO_Year AND rpp.Waiter = fin.Waiter  \n"
                           + "		) lst \n"
                           + "	) cv \n"
                           + "	GROUP BY fin.Title, fin.Waiter,fin.WaiterName, fin.PosDescription, fin.FO_Month,fin.FO_Year' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("IF NOT EXISTS (SELECT 1 FROM sys.tables AS t WHERE t.name = 'ReportsPos') \n"
                           + "  RETURN \n"
                           + "DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'SimplyStoreByABK') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'view [dbo].[SimplyStoreByABK] as \n"
                           + "	SELECT ds.Title StoreName, ISNULL(rp.OrderDate,CAST(CONVERT(VARCHAR(10),GETDATE(),120) AS DATETIME)) OrderDate,  \n"
                           + "		ISNULL(SUM(rp.CCOrders),0) CCOrders, ISNULL(SUM(rp.CCTotal),0) CCTotal, ISNULL(SUM(rp.CCNet),0) CCNet, ISNULL(SUM(rp.CCVat),0) CCVat,  \n"
                           + "		ISNULL(SUM(rp.WebOrders),0) WebOrders, ISNULL(SUM(rp.WebTotal),0) WebTotal, ISNULL(SUM(rp.WebNet),0) WebNet, ISNULL(SUM(rp.WebVat),0) WebVat,  \n"
                           + "		ISNULL(SUM(rp.eFoodOrders),0) eFoodOrders, ISNULL(SUM(rp.eFoodTotal),0) eFoodTotal, ISNULL(SUM(rp.eFoodNet),0) eFoodNet, ISNULL(SUM(rp.eFoodVat),0) eFoodVat,  \n"
                           + "		ISNULL(SUM(rp.ClickDeliveryOrders),0) ClickDeliveryOrders, ISNULL(SUM(rp.ClickDeliveryTotal),0) ClickDeliveryTotal,  \n"
                           + "			ISNULL(SUM(rp.ClickDeliveryNet),0) ClickDeliveryNet, ISNULL(SUM(rp.ClickDeliveryVat),0) ClickDeliveryVat,  \n"
                           + "		ISNULL(SUM(rp.DeliverasOrders),0) DeliverasOrders, ISNULL(SUM(rp.DeliverasTotal),0) DeliverasTotal,  \n"
                           + "			ISNULL(SUM(rp.DeliverasNet),0) DeliverasNet, ISNULL(SUM(rp.DeliverasVat),0) DeliverasVat, \n"
                           + "		ISNULL(SUM(rp.WebOrders+rp.eFoodOrders+rp.ClickDeliveryOrders+rp.DeliverasOrders),0) InternetOrders, \n"
                           + "		ISNULL(SUM(rp.WebTotal+rp.eFoodTotal+rp.ClickDeliveryTotal+rp.DeliverasTotal),0) InternetTotal, \n"
                           + "		ISNULL(SUM(rp.WebNet+rp.eFoodNet+rp.ClickDeliveryNet+rp.DeliverasNet),0) InternetNet, \n"
                           + "		ISNULL(SUM(rp.WebVat+rp.eFoodVat+rp.ClickDeliveryVat+rp.DeliverasVat),0) InternetVat, \n"
                           + "		ISNULL(SUM(rp.CCOrders+rp.WebOrders+rp.eFoodOrders+rp.ClickDeliveryOrders+rp.DeliverasOrders),0) GrandTotalOrders, \n"
                           + "		ISNULL(SUM(rp.CCTotal+rp.WebTotal+rp.eFoodTotal+rp.ClickDeliveryTotal+rp.DeliverasTotal),0) GrandTotalTotal, \n"
                           + "		ISNULL(SUM(rp.CCNet+rp.WebNet+rp.eFoodNet+rp.ClickDeliveryNet+rp.DeliverasNet),0) GrandTotalNet, \n"
                           + "		ISNULL(SUM(rp.CCVat+rp.WebVat+rp.eFoodVat+rp.ClickDeliveryVat+rp.DeliverasVat),0) GrandTotalVat			  \n"
                           + "	FROM DA_Stores AS ds \n"
                           + "	OUTER APPLY ( \n"
                           + "		SELECT lst.OrderDate, lst.InvoicesId, CASE WHEN OrderOrigin = 0 THEN 1 ELSE 0 END CCOrders,  \n"
                           + "			SUM(lst.CCTotal) CCTotal, SUM(lst.CCNet) CCNet, SUM(lst.CCVat) CCVat, \n"
                           + "			CASE WHEN OrderOrigin = 1 THEN 1 ELSE 0 END WebOrders,  \n"
                           + "			SUM(lst.WebTotal) WebTotal, SUM(lst.WebNet) WebNet, SUM(lst.WebVat) WebVat, \n"
                           + "			CASE WHEN OrderOrigin = 3 THEN 1 ELSE 0 END eFoodOrders,  \n"
                           + "			SUM(lst.eFoodTotal) eFoodTotal, SUM(lst.eFoodNet) eFoodNet, SUM(lst.eFoodVat) eFoodVat, \n"
                           + "			CASE WHEN OrderOrigin = 4 THEN 1 ELSE 0 END ClickDeliveryOrders,  \n"
                           + "			SUM(lst.ClickDeliveryTotal) ClickDeliveryTotal, SUM(lst.ClickDeliveryNet) ClickDeliveryNet, SUM(lst.ClickDeliveryVat) ClickDeliveryVat, \n"
                           + "			CASE WHEN OrderOrigin = 5 THEN 1 ELSE 0 END DeliverasOrders,  \n"
                           + "			SUM(lst.DeliverasTotal) DeliverasTotal, SUM(lst.DeliverasNet) DeliverasNet, SUM(lst.DeliverasVat) DeliverasVat  \n"
                           + "		FROM ( \n"
                           + "			SELECT rp.OrderOrigin, rp.eodFO_Day OrderDate, rp.InvoicesId,  \n"
                           + "				od.CCTotal, od.CCNet, od.CCVat,  \n"
                           + "				0 WebTotal, 0 WebNet, 0 WebVat, \n"
                           + "				0 eFoodTotal, 0 eFoodNet, 0 eFoodVat, \n"
                           + "				0 ClickDeliveryTotal, 0 ClickDeliveryNet, 0 ClickDeliveryVat, \n"
                           + "				0 DeliverasTotal, 0 DeliverasNet, 0 DeliverasVat \n"
                           + "			FROM ReportsPos AS rp \n"
                           + "			CROSS APPLY ( \n"
                           + "				SELECT SUM(rpp.Total) CCTotal, SUM(rpp.totalNet) CCNet, SUM(ISNULL(rpp.VatB,0)+ISNULL(rpp.VatC,0)) CCVat \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId	 \n"
                           + "			) od \n"
                           + "			WHERE rp.StoreId = ds.Id AND rp.OrderOrigin = 0	 \n"
                           + "			UNION ALL \n"
                           + "			SELECT rp.OrderOrigin,rp.eodFO_Day OrderDate, rp.InvoicesId,  \n"
                           + "				0 CCTotal, 0 CCNet, 0 CCVat, \n"
                           + "				od.CCTotal WebTotal, od.CCNet WebNet, od.CCVat WebVat, \n"
                           + "				0 eFoodTotal, 0 eFoodNet , 0 eFoodVat, \n"
                           + "				0 ClickDeliveryTotal, 0 ClickDeliveryNet, 0 ClickDeliveryVat, \n"
                           + "				0 DeliverasTotal, 0 DeliverasNet, 0 DeliverasVat \n"
                           + "			FROM ReportsPos AS rp \n"
                           + "			CROSS APPLY ( \n"
                           + "				SELECT SUM(rpp.Total) CCTotal, SUM(rpp.totalNet) CCNet, SUM(ISNULL(rpp.VatB,0)+ISNULL(rpp.VatC,0)) CCVat \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId	 \n"
                           + "			) od \n"
                           + "			WHERE rp.StoreId = ds.Id AND rp.OrderOrigin = 1	 \n"
                           + "			UNION ALL \n"
                           + "			SELECT rp.OrderOrigin,rp.eodFO_Day OrderDate, rp.InvoicesId,  \n"
                           + "				0 CCTotal, 0 CCNet, 0 CCVat, \n"
                           + "				0 WebTotal, 0 WebNet, 0 WebVat, \n"
                           + "				od.CCTotal eFoodTotal, od.CCNet eFoodNet , od.CCVat eFoodVat, \n"
                           + "				0 ClickDeliveryTotal, 0 ClickDeliveryNet, 0 ClickDeliveryVat, \n"
                           + "				0 DeliverasTotal, 0 DeliverasNet, 0 DeliverasVat \n"
                           + "			FROM ReportsPos AS rp \n"
                           + "			CROSS APPLY ( \n"
                           + "				SELECT SUM(rpp.Total) CCTotal, SUM(rpp.totalNet) CCNet, SUM(ISNULL(rpp.VatB,0)+ISNULL(rpp.VatC,0)) CCVat \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId	 \n"
                           + "			) od \n"
                           + "			WHERE rp.StoreId = ds.Id AND rp.OrderOrigin = 3	 \n"
                           + "			UNION ALL \n"
                           + "			SELECT rp.OrderOrigin,rp.eodFO_Day OrderDate, rp.InvoicesId,  \n"
                           + "				0 CCTotal, 0 CCNet, 0 CCVat, \n"
                           + "				0 WebTotal, 0 WebNet, 0 WebVat, \n"
                           + "				0 eFoodTotal, 0 eFoodNet , 0 eFoodVat, \n"
                           + "				od.CCTotal ClickDeliveryTotal, od.CCNet ClickDeliveryNet, od.CCVat ClickDeliveryVat, \n"
                           + "				0 DeliverasTotal, 0 DeliverasNet, 0 DeliverasVat \n"
                           + "			FROM ReportsPos AS rp \n"
                           + "			CROSS APPLY ( \n"
                           + "				SELECT SUM(rpp.Total) CCTotal, SUM(rpp.totalNet) CCNet, SUM(ISNULL(rpp.VatB,0)+ISNULL(rpp.VatC,0)) CCVat \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId	 \n"
                           + "			) od \n"
                           + "			WHERE rp.StoreId = ds.Id AND rp.OrderOrigin = 4	 \n"
                           + "			UNION ALL \n"
                           + "			SELECT rp.OrderOrigin,rp.eodFO_Day OrderDate, rp.InvoicesId,  \n"
                           + "				0 CCTotal, 0 CCNet, 0 CCVat, \n"
                           + "				0 WebTotal, 0 WebNet, 0 WebVat, \n"
                           + "				0 eFoodTotal, 0 eFoodNet , 0 eFoodVat, \n"
                           + "				0 ClickDeliveryTotal, 0 ClickDeliveryNet, 0 ClickDeliveryVat, \n"
                           + "				od.CCTotal DeliverasTotal, od.CCNet DeliverasNet, od.CCVat DeliverasVat \n"
                           + "			FROM ReportsPos AS rp \n"
                           + "			CROSS APPLY ( \n"
                           + "				SELECT SUM(rpp.Total) CCTotal, SUM(rpp.totalNet) CCNet, SUM(ISNULL(rpp.VatB,0)+ISNULL(rpp.VatC,0)) CCVat \n"
                           + "				FROM ReportsPos AS rpp \n"
                           + "				WHERE rpp.InvoicesId = rp.InvoicesId	 \n"
                           + "			) od \n"
                           + "			WHERE rp.StoreId = ds.Id AND rp.OrderOrigin = 5 \n"
                           + "		) lst \n"
                           + "		GROUP BY lst.OrderDate, lst.InvoicesId, lst.OrderOrigin \n"
                           + "	) rp \n"
                           + "	GROUP BY ds.Title, ISNULL(rp.OrderDate,CAST(CONVERT(VARCHAR(10),GETDATE(),120) AS DATETIME))' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'pos_sales_analysis') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[pos_sales_analysis] AS  \n"
                           + "                SELECT DepartmentId = pi.DepartmentId, DepartmentDescription = d.[Description] \n"
                           + "                     , PosInfoId = i.PosInfoId, PosInfoDescription = pi.[Description] \n"
                           + "                     , CategoryId = pc.categoryid, CategoryDescription = c.[Description] \n"
                           + "                     , ProductCategoryCode = pc.Code, ProductCategoryDescription = pc.[Description] \n"
                           + "                     , DetailedInvoiceId = odi.Id \n"
                           + "                     , odi.ProductId, ProductCode = p.Code, ProductDescription = p.[Description] \n"
                           + "                     , odi.Qty \n"
                           + "                     , odi.Price \n"
                           + "                     , odi.Discount \n"
                           + "                     , odi.Total \n"
                           + "                     , odi.Net \n"
                           + "                     , odi.VatAmount \n"
                           + "                     , VatPercentage = v.Percentage \n"
                           + "                     , PricelistId = pl.Id, PricelistCode = pl.Code, PricelistDescription = pl.[Description] \n"
                           + "                     , odi.VatId \n"
                           + "                     , InvoiceTotal = i.Total \n"
                           + "                     , InvoiceId = i.Id, InvoiceType = odi.InvoiceType \n"
                           + "                     , odi.Abbreviation \n"
                           + "                     , ReceiptNo = odi.[Counter] \n"
                           + "                     , i.Cover \n"
                           + "                     , i.Rooms \n"
                           + "                     , InvoiceDate = i.[Day] \n"
                           + "                     , odi.SalesTypeId \n"
                           + "                     , SalesTypeDescription = st.[Description] \n"
                           + "                     , StaffCode = s.Code \n"
                           + "                     , StafName = IsNull(LastName, '''') + '' '' + IsNull(FirstName, '''') \n"
                           + "                     , FODay = ISNULL(eod.FODay, CAST(GETDATE() AS DATE)) \n"
                           + "                     , EndOfDayId = ISNULL(i.EndOfDayId, 0) \n"
                           + "                     , odi.IsExtra \n"
                           + "                     , t.AccountId, t.AccountType, t.AccountDescription \n"
                           + "                FROM dbo.OrderDetailInvoices_View AS odi \n"
                           + "                     INNER JOIN dbo.Invoices_View AS i ON odi.InvoicesId = i.Id \n"
                           + "                     LEFT OUTER JOIN dbo.EndOfDay_View AS eod ON i.EndOfDayId = eod.Id \n"
                           + "                     LEFT OUTER JOIN dbo.Pricelist AS pl ON odi.PricelistId = pl.Id \n"
                           + "                     LEFT OUTER JOIN dbo.Vat AS v ON odi.VatId = v.Id \n"
                           + "                     LEFT OUTER JOIN dbo.SalesType AS st ON st.Id = odi.SalesTypeId \n"
                           + "                     LEFT OUTER JOIN dbo.Staff AS s ON i.StaffId = s.Id \n"
                           + "                     LEFT OUTER JOIN dbo.PosInfo AS pi ON i.PosInfoId = pi.Id \n"
                           + "                     LEFT OUTER JOIN dbo.Department AS d ON pi.DepartmentId = d.Id \n"
                           + "                     LEFT OUTER JOIN dbo.Ingredients AS ing ON ing.Id = odi.ProductId AND odi.IsExtra = 1 \n"
                           + "                     LEFT OUTER JOIN dbo.Product AS p ON p.Id = odi.ProductId \n"
                           + "                     LEFT OUTER JOIN dbo.ProductCategories AS pc ON pc.Id = odi.ProductCategoryId \n"
                           + "                     LEFT OUTER JOIN dbo.Categories as c on c.id = pc.categoryid \n"
                           + "                     cross apply( \n"
                           + "                         SELECT TOP 1 t1.InvoicesId, t1.AccountId, a1.Type AS AccountType, \n"
                           + "                             a1.[Description] AS AccountDescription, SUM(t1.Amount) AS TransAmount \n"
                           + "                        FROM dbo.Transactions AS t1 \n"
                           + "                        LEFT OUTER JOIN dbo.Accounts AS a1 ON t1.AccountId = a1.Id \n"
                           + "                        WHERE(ISNULL(t1.IsDeleted, 0) <> 1) \n"
                           + "                        GROUP BY t1.InvoicesId, t1.AccountId, a1.Type, a1.[Description] \n"
                           + "                        order by TransAmount, AccountDescription \n"
                           + "                     ) AS t \n"
                           + "                WHERE(ISNULL(i.IsDeleted, 0) = 0) \n"
                           + "                      AND(ISNULL(odi.IsDeleted, 0) = 0) \n"
                           + "                      AND(ISNULL(i.IsVoided, 0) = 0) \n"
                           + "                      AND(odi.InvoiceType NOT IN(2, 3, 8, 10, 11, 12))' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'SalesMothnly') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'view [dbo].[SalesMothnly] as \n"
                           + "	SELECT fin.FODay, SUM(fin.DineInOrders) OrdesNoDiveIn, SUM(fin.SalesDiveIn) SalesDiveIn, SUM(fin.NetSalesDiveIn) NetSalesDiveIn, \n"
                           + "		SUM(fin.DeliveryOrders) OrdersDelivery, SUM(fin.SalesDelivery) SalesDelivery, SUM(fin.SalesNetDelivery) SalesNetDelivery, \n"
                           + "		SUM(fin.TakeOrders) OrdersTakeOut, SUM(fin.SalesTakeOut) SalesTakeOut, SUM(fin.SalesNetTakeOut) SalesNetTakeOut  \n"
                           + "	FROM ( \n"
                           + "		SELECT lst.FODay, lst.OrdesNoDiveIn, lst.SalesDiveIn, lst.NetSalesDiveIn, \n"
                           + "		       lst.OrdersDelivery, lst.SalesDelivery, lst.SalesNetDelivery, \n"
                           + "		       lst.OrdersTakeOut, lst.SalesTakeOut, lst.SalesNetTakeOut, \n"
                           + "		       CASE WHEN lst.Grp = 1 THEN lst.OrderActive ELSE 0 END DineInOrders,  \n"
                           + "		       CASE WHEN lst.Grp = 2 THEN lst.OrderActive ELSE 0 END DeliveryOrders, \n"
                           + "		       CASE WHEN lst.Grp = 3 THEN lst.OrderActive ELSE 0 END TakeOrders \n"
                           + "		FROM ( \n"
                           + "			   SELECT eod.FODay, i.Id OrdesNoDiveIn, odi.Total SalesDiveIn, odi.Net NetSalesDiveIn, 0 OrdersDelivery, 0 SalesDelivery, 0 SalesNetDelivery, \n"
                           + "					  0 OrdersTakeOut, 0 SalesTakeOut, 0 SalesNetTakeOut, ROW_NUMBER() OVER (PARTITION BY i.Id ORDER BY i.Id) OrderActive, 1 Grp \n"
                           + "			   FROM Invoices AS i  \n"
                           + "			   CROSS APPLY ( \n"
                           + "					  SELECT odi.InvoicesId, SUM(odi.Total) Total, SUM(CASE WHEN odi.vatcode in (5,1) THEN ROUND(CAST(odi.Total as float)/1.24,2) else odi.Net END) Net  \n"
                           + "					  FROM OrderDetailInvoices AS odi \n"
                           + "					  WHERE odi.InvoicesId = i.Id AND odi.SalesTypeId = 1 \n"
                           + "					  GROUP BY odi.InvoicesId \n"
                           + "			   ) odi \n"
                           + "			   INNER JOIN InvoiceTypes AS it ON it.Id = i.InvoiceTypeId AND it.[Type] IN (1,7) \n"
                           + "			   INNER JOIN EndOfDay AS eod ON eod.Id = i.EndOfDayId  \n"
                           + "			   WHERE ISNULL(i.IsDeleted,0) = 0 AND ISNULL(i.IsVoided,0) = 0  \n"
                           + " \n"
                           + "			   UNION ALL \n"
                           + "			   SELECT eod.FODay, 0 OrdesNoDiveIn, 0 SalesDiveIn, 0 NetSalesDiveIn, i.Id OrdersDelivery, odi.Total SalesDelivery, odi.Net SalesNetDelivery, \n"
                           + "					  0 OrdersTakeOut, 0 SalesTakeOut, 0 SalesNetTakeOut, ROW_NUMBER() OVER (PARTITION BY i.Id ORDER BY i.Id) OrderActive, 2 Grp \n"
                           + "			   FROM Invoices AS i  \n"
                           + "			   CROSS APPLY ( \n"
                           + "					  SELECT odi.InvoicesId, SUM(odi.Total) Total, SUM(CASE WHEN odi.vatcode in (5,1) THEN ROUND(CAST(odi.Total as float)/1.24,2) else odi.Net END) Net  \n"
                           + "					  FROM OrderDetailInvoices AS odi \n"
                           + "					  WHERE odi.InvoicesId = i.Id AND odi.SalesTypeId = 20 \n"
                           + "					  GROUP BY odi.InvoicesId \n"
                           + "			   ) odi \n"
                           + "			   INNER JOIN InvoiceTypes AS it ON it.Id = i.InvoiceTypeId AND it.[Type] IN (1,7) \n"
                           + "			   INNER JOIN EndOfDay AS eod ON eod.Id = i.EndOfDayId  \n"
                           + "			   WHERE ISNULL(i.IsDeleted,0) = 0 AND ISNULL(i.IsVoided,0) = 0  \n"
                           + " \n"
                           + "			   UNION ALL \n"
                           + "			   SELECT eod.FODay, 0 OrdesNoDiveIn, 0 SalesDiveIn, 0 NetSalesDiveIn, 0 OrdersDelivery, 0 SalesDelivery, 0 SalesNetDelivery, \n"
                           + "					  i.Id OrdersTakeOut, odi.Total SalesTakeOut, odi.Net SalesNetTakeOut, ROW_NUMBER() OVER (PARTITION BY i.Id ORDER BY i.Id) OrderActive, 3 Grp \n"
                           + "			   FROM Invoices AS i  \n"
                           + "			   CROSS APPLY ( \n"
                           + "					  SELECT odi.InvoicesId, SUM(odi.Total) Total, SUM(CASE WHEN odi.vatcode in (5,1) THEN ROUND(CAST(odi.Total as float)/1.24,2) else odi.Net END) Net  \n"
                           + "					  FROM OrderDetailInvoices AS odi \n"
                           + "					  WHERE odi.InvoicesId = i.Id AND odi.SalesTypeId = 21 \n"
                           + "					  GROUP BY odi.InvoicesId \n"
                           + "			   ) odi \n"
                           + "			   INNER JOIN InvoiceTypes AS it ON it.Id = i.InvoiceTypeId AND it.[Type] IN (1,7) \n"
                           + "			   INNER JOIN EndOfDay AS eod ON eod.Id = i.EndOfDayId  \n"
                           + "			   WHERE ISNULL(i.IsDeleted,0) = 0 AND ISNULL(i.IsVoided,0) = 0  \n"
                           + "		) lst \n"
                           + "	) fin \n"
                           + "	GROUP BY fin.FODay' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'View_DispatchPoints') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'VIEW [dbo].[View_DispatchPoints] AS   \n"
                           + "	SELECT lst.orderDay, lst.EndOfDayId, lst.Twenty, lst.TwentyFive, lst.Thirty, lst.Forty, lst.Fifty, lst.FiftyPlus,  \n"
                           + "			 lst.TotalOrders,lst.TwentyPoints,lst.TwentyFivePoints,lst.ThirtyPoints,lst.FortyPoints,lst.FiftyPoints,lst.FiftyPlusPoints,  \n"
                           + "			 ROUND(CASE WHEN lst.TotalOrders <> 0 THEN	  \n"
                           + "		 		CAST(lst.TwentyPoints+lst.TwentyFivePoints+lst.ThirtyPoints+lst.FortyPoints+lst.FiftyPoints+lst.FiftyPlusPoints AS FLOAT) / (CAST(lst.TotalOrders AS FLOAT) / 10)    \n"
                           + "			 ELSE 0 END,2) Pst  \n"
                           + "	FROM (  \n"
                           + "		SELECT fin.orderDay, fin.EndOfDayId, fin.Twenty, fin.TwentyFive, fin.Thirty, fin.Forty, fin.Fifty, fin.FiftyPlus,  \n"
                           + "			 fin.Twenty+fin.TwentyFive+fin.Thirty+fin.Forty+fin.Fifty+fin.FiftyPlus TotalOrders,  \n"
                           + "			 (fin.Twenty * 10) TwentyPoints, (fin.TwentyFive * 8) TwentyFivePoints,   \n"
                           + "			 (fin.Thirty * 4) ThirtyPoints, (fin.Forty * 0) FortyPoints, (fin.Fifty * (-1)) FiftyPoints, (fin.FiftyPlus * (-30)) FiftyPlusPoints  \n"
                           + "			  \n"
                           + "		FROM (  \n"
                           + "			SELECT a.orderDay, a.EndOfDayId, SUM(a.Twenty) Twenty, SUM(a.TwentyFive) TwentyFive, SUM(a.Thirty) Thirty, SUM(a.Forty) Forty,  \n"
                           + "				   SUM(a.Fifty) Fifty, SUM(a.FiftyPlus) FiftyPlus \n"
                           + "			FROM (   \n"
                           + "				SELECT o.id, CAST(CONVERT(VARCHAR(10),CASE WHEN ISNULL(o.EndOfDayId,0) = 0 THEN o.[Day] ELSE od.FODay END, 120) AS DATETIME) orderDay, ISNULL(o.EndOfDayId,0) EndOfDayId,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE, os.startTime, os.endTime) < 20 THEN 1 ELSE 0 END Twenty,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE,os.startTime, os.endTime) >= 20 AND DATEDIFF(MINUTE,os.startTime, os.endTime) <= 25 THEN 1 ELSE 0 END TwentyFive,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE,os.startTime, os.endTime) > 25 AND DATEDIFF(MINUTE,os.startTime, os.endTime) <= 30 THEN 1 ELSE 0 END Thirty,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE,os.startTime, os.endTime) > 30 AND DATEDIFF(MINUTE,os.startTime, os.endTime) <= 40 THEN 1 ELSE 0 END Forty,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE,os.startTime, os.endTime) > 40 AND DATEDIFF(MINUTE,os.startTime, os.endTime) <= 50 THEN 1 ELSE 0 END Fifty,  \n"
                           + "					CASE WHEN DATEDIFF(MINUTE,os.startTime, os.endTime) > 50  THEN 1 ELSE 0 END FiftyPlus \n"
                           + "				FROM [Order] AS o  \n"
                           + "				CROSS APPLY (  \n"
                           + "					select MIN(os.TimeChanged) startTime,MAX(os.TimeChanged) endTime   \n"
                           + "					from OrderStatus os  \n"
                           + "					where os.OrderId = o.Id and os.Status in (1,4) \n"
                           + "				) os  \n"
                           + "				CROSS APPLY (  \n"
                           + "					SELECT TOP 1 od.OrderId, ISNULL(eod.FODay, ''1900-01-01'') FODay \n"
                           + "					FROM OrderDetail AS od   \n"
                           + "					INNER JOIN OrderDetailInvoices AS odi ON odi.OrderDetailId = od.Id  \n"
                           + "					INNER JOIN Invoices AS i ON i.Id = odi.InvoicesId AND ISNULL(i.IsDeleted,0) = 0 AND ISNULL(i.IsVoided,0) = 0  \n"
                           + "					INNER JOIN InvoiceTypes AS it ON it.Id = i.InvoiceTypeId AND it.[Type] IN (1,3,4,5,7) \n"
                           + "					LEFT OUTER JOIN EndOfDay AS eod ON eod.Id = i.EndOfDayId \n"
                           + "					WHERE od.OrderId = o.Id	  \n"
                           + "				) od  \n"
                           + "				WHERE YEAR(os.startTime) > 1910 AND  YEAR(os.endTime) > 1900 and o.ExtType = 5  \n"
                           + "			) a  \n"
                           + "			GROUP BY a.orderDay, a.EndOfDayId  \n"
                           + "		) fin  \n"
                           + "	) lst' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'ManualLoyaltyPoints') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'View ManualLoyaltyPoints as \n"
                           + "	select t1.ManualPointsGained, COALESCE(t2.ManualPointsRedeemed,t2.StoreId) as ManualPointsRedeemed \n"
                           + "	from ( \n"
                           + "		SELECT  sum(Points) as ManualPointsGained,StoreId \n"
                           + "		FROM DA_LoyalPoints  \n"
                           + "		where Points>0 and StoreId=0 \n"
                           + "		group by StoreId \n"
                           + "	) t1 \n"
                           + "	inner join ( \n"
                           + "		SELECT (-1)*sum(Points) as ManualPointsRedeemed,StoreId \n"
                           + "		FROM DA_LoyalPoints  \n"
                           + "		where Points<0 and StoreId=0 \n"
                           + "		group by StoreId \n"
                           + "	)t2 on(t1.StoreId=t2.StoreId)' \n"
                           + "EXEC(@sSQL)");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                                        + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'LoyaltyPointsRedeemed') \n"
                                        + "	SET @sComm = 'ALTER ' \n"
                                        + "ELSE \n"
                                        + "	SET @sComm = 'CREATE ' \n"
                                        + "SET @sSQL = @sComm+'View LoyaltyPointsRedeemed as \n"
                                        + "			SELECT (-1)*sum(dalp.Points) as LoyaltyPointsRedeemed, Date, dast.Title \n"
                                        + "			FROM DA_LoyalPoints as dalp \n"
                                        + "			LEFT OUTER JOIN DA_Stores as dast ON dalp.StoreId = dast.Id \n"
                                        + "			where dalp.Points<0 and dalp.StoreId!=0 \n"
                                        + "			group by Date,dast.Title' \n"
                                        + "EXEC(@sSQL)	");
            Ver_2_0_0_43.Add("DECLARE @sComm VARCHAR(20), @sSQL VARCHAR(MAX) \n"
                           + "IF EXISTS(SELECT 1 FROM sys.[views] AS v WHERE v.name = 'PointsPerStore') \n"
                           + "	SET @sComm = 'ALTER ' \n"
                           + "ELSE \n"
                           + "	SET @sComm = 'CREATE ' \n"
                           + "SET @sSQL = @sComm+'View  PointsPerStore as \n"
                           + "			SELECT sum(dalp.Points) as PointsPerStore,dast.Title,count(distinct CustomerId) as CustomerSum \n"
                           + "			FROM DA_LoyalPoints as dalp \n"
                           + "			LEFT OUTER JOIN DA_Stores as dast ON dalp.StoreId = dast.Id \n"
                           + "			where dalp.Points>0 and dalp.StoreId !=0 \n"
                           + "			group by dast.Title' \n"
                           + "EXEC(@sSQL)	");
        }
    }
}
